{"version":3,"file":"static/js/939.4945d03e.chunk.js","mappings":"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","sources":["layouts/setups/profile/components/Header/index.js","layouts/setups/data/apiarySetupTableData.js","layouts/setups/index.js"],"sourcesContent":["/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// prop-types is a library for typechecking of props.\r\nimport PropTypes from \"prop-types\";\r\n\r\n// @mui material components\r\nimport Card from \"@mui/material/Card\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Icon from \"@mui/material/Icon\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\n\r\n// Material Dashboard 2 React base styles\r\nimport breakpoints from \"assets/theme/base/breakpoints\";\r\n\r\n// Images\r\nimport burceMars from \"assets/images/bruce-mars.jpg\";\r\nimport backgroundImage from \"assets/images/bg-profile.jpeg\";\r\n\r\nfunction Header({ info, children }) {\r\n  const [tabsOrientation, setTabsOrientation] = useState(\"horizontal\");\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // A function that sets the orientation state of the tabs.\r\n    function handleTabsOrientation() {\r\n      return window.innerWidth < breakpoints.values.sm\r\n        ? setTabsOrientation(\"vertical\")\r\n        : setTabsOrientation(\"horizontal\");\r\n    }\r\n\r\n    /** \r\n     The event listener that's calling the handleTabsOrientation function when resizing the window.\r\n    */\r\n    window.addEventListener(\"resize\", handleTabsOrientation);\r\n\r\n    // Call the handleTabsOrientation function to set the state with the initial value.\r\n    handleTabsOrientation();\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleTabsOrientation);\r\n  }, [tabsOrientation]);\r\n\r\n  const handleSetTabValue = (event, newValue) => setTabValue(newValue);\r\n  const { image = \"\", hive_type, status } = info;\r\n\r\n  return (\r\n    <MDBox position=\"relative\" mb={5}>\r\n      <MDBox\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        position=\"relative\"\r\n        minHeight=\"18.75rem\"\r\n        borderRadius=\"xl\"\r\n        sx={{\r\n          backgroundImage: ({ functions: { rgba, linearGradient }, palette: { gradients } }) =>\r\n            `${linearGradient(\r\n              rgba(gradients.info.main, 0.6),\r\n              rgba(gradients.info.state, 0.6)\r\n            )}, url(${backgroundImage})`,\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"50%\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      />\r\n      <Card\r\n        sx={{\r\n          position: \"relative\",\r\n          mt: -8,\r\n          mx: 3,\r\n          py: 2,\r\n          px: 2,\r\n        }}\r\n      >\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item>\r\n            <MDAvatar src={image} alt=\"profile-image\" size=\"xl\" shadow=\"sm\" />\r\n          </Grid>\r\n          <Grid item>\r\n            <MDBox height=\"100%\" mt={0.5} lineHeight={1}>\r\n              <MDTypography variant=\"h5\" fontWeight=\"medium\">\r\n                {hive_type}\r\n              </MDTypography>\r\n              <MDTypography variant=\"button\" color=\"text\" fontWeight=\"regular\">\r\n                {status}\r\n              </MDTypography>\r\n            </MDBox>\r\n          </Grid>\r\n          {/* <Grid item xs={12} md={6} lg={4} sx={{ ml: \"auto\" }}>\r\n            <AppBar position=\"static\">\r\n              <Tabs orientation={tabsOrientation} value={tabValue} onChange={handleSetTabValue}>\r\n                <Tab\r\n                  label=\"App\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      home\r\n                    </Icon>\r\n                  }\r\n                />\r\n                <Tab\r\n                  label=\"Message\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      email\r\n                    </Icon>\r\n                  }\r\n                />\r\n                <Tab\r\n                  label=\"Settings\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      settings\r\n                    </Icon>\r\n                  }\r\n                />\r\n              </Tabs>\r\n            </AppBar>\r\n          </Grid> */}\r\n        </Grid>\r\n        {children}\r\n      </Card>\r\n    </MDBox>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  info: {\r\n    image: \"\", // Fallback image URL\r\n    hive_type: \"First Name\",\r\n    status: \"Last Name\",\r\n  },\r\n  children: null,\r\n};\r\n\r\nHeader.propTypes = {\r\n  info: PropTypes.shape({\r\n    image: PropTypes.string,\r\n    hive_type: PropTypes.string,\r\n    status: PropTypes.string,\r\n  }),\r\n  children: PropTypes.node,\r\n};\r\nexport default Header;\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable react/function-component-definition */\r\n/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\nimport MDBadge from \"components/MDBadge\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport logoSlack from \"assets/images/small-logos/logo-slack.svg\";\r\nimport React from \"react\";\r\nimport { useSetupComp } from \"features/apiarySetup/setupCompThunk\";\r\nimport { useDeleteSetup } from \"features/apiarySetup/setupCompThunk\";\r\nimport { setUpdateSetup } from \"features/apiarySetup/setupCompSlice\";\r\n\r\nexport default function apiarySetupTableData() {\r\n  const dispatch = useDispatch();\r\n  const { deleteSetup } = useDeleteSetup();\r\n  const {\r\n    isGettingAllSetupComp,\r\n    setupComp: { apiarySetupComp = [], count = 0, numOfPages = 0, totalSetupComp = 0 } = {},\r\n    refetch,\r\n  } = useSetupComp();\r\n  const Author = ({ image, component_name, component_id }) => (\r\n    <MDBox display=\"flex\" alignItems=\"center\" lineHeight={1}>\r\n      <MDAvatar src={image} size=\"sm\" />\r\n      <MDBox ml={2} lineHeight={1}>\r\n        <MDTypography display=\"block\" variant=\"button\" fontWeight=\"medium\">\r\n          {`${component_id} `}\r\n        </MDTypography>\r\n        <MDTypography variant=\"caption\">{component_name}</MDTypography>\r\n      </MDBox>\r\n    </MDBox>\r\n  );\r\n\r\n  const rows = apiarySetupComp.map((setup, i) => {\r\n    const { component_id, service_id, component_name, description, stock, price } = setup;\r\n    const payload = {\r\n      service_id,\r\n      component_name,\r\n      description,\r\n      stock,\r\n      price,\r\n    };\r\n\r\n    const handleEdit = () => {\r\n      dispatch(setUpdateSetup(payload));\r\n    };\r\n    const handleDelete = () => {\r\n      const confirmation = window.confirm(\r\n        \"You are about to Delete a apiary setup  records permanently, ARE YOU SURE?\"\r\n      );\r\n      if (!confirmation) return;\r\n      deleteSetup(component_id);\r\n    };\r\n    return {\r\n      component: (\r\n        <Author image={logoSlack} component_name={component_name} component_id={component_id} />\r\n      ),\r\n      service: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          {service_id}\r\n        </MDTypography>\r\n      ),\r\n      stock: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          {stock}\r\n        </MDTypography>\r\n      ),\r\n      description: (\r\n        <MDTypography\r\n          title={description}\r\n          component=\"a\"\r\n          href=\"#\"\r\n          variant=\"caption\"\r\n          color=\"text\"\r\n          fontWeight=\"medium\"\r\n        >\r\n          {description.length > 20 ? `${description.slice(0, 20)}...` : description}\r\n        </MDTypography>\r\n      ),\r\n      price: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          # {price}\r\n        </MDTypography>\r\n      ),\r\n      update: (\r\n        <MDTypography component=\"a\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          <Link\r\n            onClick={() => {\r\n              handleEdit();\r\n            }}\r\n            to={`/createupdatesetup/${component_id}`}\r\n          >\r\n            Edit\r\n          </Link>\r\n        </MDTypography>\r\n      ),\r\n      remove: (\r\n        <MDTypography\r\n          component=\"a\"\r\n          variant=\"caption\"\r\n          color=\"text\"\r\n          fontWeight=\"medium\"\r\n          onClick={() => {\r\n            handleDelete();\r\n          }}\r\n        >\r\n          <Link>remove</Link>\r\n        </MDTypography>\r\n      ),\r\n    };\r\n  });\r\n  return {\r\n    columns: [\r\n      { Header: \"component\", accessor: \"component\", width: \"45%\", align: \"left\" },\r\n      { Header: \"service\", accessor: \"service\", width: \"45%\", align: \"left\" },\r\n      { Header: \"stock\", accessor: \"stock\", align: \"left\" },\r\n      { Header: \"description\", accessor: \"description\", align: \"center\" },\r\n      { Header: \"price\", accessor: \"price\", align: \"center\" },\r\n      { Header: \"update\", accessor: \"update\", align: \"center\" },\r\n      { Header: \"remove\", accessor: \"remove\", align: \"center\" },\r\n    ],\r\n    rows: rows,\r\n    numOfPages,\r\n    refetch,\r\n    count,\r\n    isGettingAllSetupComp,\r\n    totalSetupComp,\r\n  };\r\n}\r\n","import Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport React from \"react\";\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\nimport Footer from \"examples/Footer\";\r\nimport DataTable from \"examples/Tables/DataTable\";\r\n// Data\r\n// import employeesTableData from \"layouts/tables/data/employeesTableData\";\r\nimport projectsTableData from \"layouts/tables/data/projectsTableData\";\r\n// import { useSingleEmployee } from \"features/employees/employeesThunk\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Divider from \"@mui/material/Divider\";\r\n// @mui icons\r\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\r\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\r\nimport { Email } from \"@mui/icons-material\";\r\nimport ProfileInfoCard from \"examples/Cards/InfoCards/ProfileInfoCard\";\r\nimport ProfilesList from \"examples/Lists/ProfilesList\";\r\nimport DefaultProjectCard from \"examples/Cards/ProjectCards/DefaultProjectCard\";\r\nimport Header from \"./profile/components/Header\";\r\nimport PlatformSettings from \"./profile/components/PlatformSettings\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { useUploadEmployeeImages } from \"features/employees/employeesThunk\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CustomButton } from \"components copy\";\r\nimport { Loader1 } from \"components copy/Loader\";\r\nimport PaginationControlled from \"components copy/component's_Tables/Pagination\";\r\nimport LogoAsana from \"assets/images/small-logos/logo-asana.svg\";\r\nimport moment from \"moment\";\r\nimport apiarySetupTableData from \"./data/apiarySetupTableData\";\r\nimport { resetValues } from \"features/apiarySetup/setupCompSlice\";\r\nimport { SetupSearchModal } from \"components copy\";\r\nimport { useSetupInputs } from \"hooks/ServicesDetails\";\r\nimport { useUpdateSetup } from \"features/apiarySetup/setupCompThunk\";\r\nimport { useCreateSetup } from \"features/apiarySetup/setupCompThunk\";\r\nimport { changePage } from \"features/apiarySetup/setupCompSlice\";\r\nimport styles from \"../styles/thead.module.scss\";\r\nimport styling from \"../styles/createupdate.module.scss\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nfunction Setup() {\r\n  const { columns, rows, numOfPages, count, refetch, isGettingAllSetupComp, totalSetupComp } =\r\n    apiarySetupTableData();\r\n  const dispatch = useDispatch();\r\n  const { service_id, component_name, description, stock, price, sort, pages, priceRange } =\r\n    useSelector((store) => store.setups);\r\n  const handleChange = (event, value) => {\r\n    event.preventDefault();\r\n    dispatch(changePage(value));\r\n  };\r\n  React.useEffect(() => {\r\n    refetch();\r\n  }, [pages, service_id, component_name, description, stock, price, sort, priceRange]);\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      <MDBox pt={6} pb={3}>\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <MDBox\r\n                mx={2}\r\n                mt={-3}\r\n                py={3}\r\n                px={2}\r\n                variant=\"gradient\"\r\n                bgColor=\"info\"\r\n                borderRadius=\"lg\"\r\n                coloredShadow=\"info\"\r\n              >\r\n                <MDTypography className={styles.wrapper} variant=\"h6\" color=\"white\">\r\n                  <MDBox className={styles.inner}>\r\n                    <MDTypography color=\"white\">Setups</MDTypography>\r\n                    <MDTypography color=\"white\">\r\n                      {count}/{totalSetupComp}\r\n                    </MDTypography>\r\n                  </MDBox>\r\n                  <MDBox className={styles.inner}>\r\n                    <Link onClick={() => dispatch(resetValues())} to=\"/createupdatesetup/add\">\r\n                      <AddIcon\r\n                        sx={{ fill: \"white\" }}\r\n                        fontSize=\"medium\"\r\n                        titleAccess=\"add a new component\"\r\n                      />\r\n                    </Link>\r\n                    <SetupSearchModal isGettingAllSetupComp={isGettingAllSetupComp} />\r\n                  </MDBox>\r\n                </MDTypography>\r\n              </MDBox>\r\n              <MDBox pt={3}>\r\n                <DataTable\r\n                  table={{ columns, rows }}\r\n                  isSorted={false}\r\n                  entriesPerPage={false}\r\n                  showTotalEntries={false}\r\n                  noEndBorder\r\n                />\r\n              </MDBox>\r\n            </Card>\r\n            <PaginationControlled pageDetails={{ handleChange, numOfPages, pages }} />\r\n          </Grid>\r\n        </Grid>\r\n      </MDBox>\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n}\r\nexport default Setup;\r\n\r\nexport const CreateUpdateSetup = () => {\r\n  const { id } = useParams();\r\n  const { setupInputs } = useSetupInputs();\r\n  const { isUpdatingSetup, updateSetup } = useUpdateSetup();\r\n  const { createSetup, isCreatingSetup } = useCreateSetup();\r\n  const { service_id, component_name, description, stock, price, isEdit } = useSelector(\r\n    (store) => store.setups\r\n  );\r\n  const setupDetails = {\r\n    service_id,\r\n    component_name,\r\n    description,\r\n    stock,\r\n    price,\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = Object.values(setupDetails).every(\r\n      (value) => value !== undefined && value !== null && value !== \"\"\r\n    );\r\n    if (!isValid) {\r\n      alert(\"Please fill out all required fields.\");\r\n      return;\r\n    }\r\n    if (isEdit) return updateSetup({ setupDetails, id });\r\n    createSetup(setupDetails);\r\n  };\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      {/* <MDBox mb={2} /> */}\r\n      {/* <Header info={{ image, first_name, last_name, role }}> */}\r\n      <MDBox mt={5} mb={3}>\r\n        <Grid className={styling.wrapper} container spacing={1}>\r\n          {/* <Grid item xs={12} md={6} xl={4} sx={{ display: \"flex\" }}>\r\n            <Divider orientation=\"vertical\" sx={{ ml: -2, mr: 1 }} /> */}\r\n          <div>\r\n            <div>\r\n              <Link to=\"/setups\">\r\n                <ArrowBackIcon />\r\n              </Link>\r\n              <h6>{isEdit ? `Update ${component_name}'s details` : \"Create a new component\"} </h6>\r\n              <div></div>\r\n            </div>\r\n            <form className={styling.form} onSubmit={handleSubmit}>\r\n              {setupInputs\r\n                .filter((detail) => detail.name !== \"sort\" && detail.name !== \"priceRange\")\r\n                .map((detail) => {\r\n                  const { name, TextField } = detail;\r\n                  return <div key={name}>{TextField}</div>;\r\n                })}\r\n              <CustomButton\r\n                background={\"inherit\"}\r\n                backgroundhover={\"grey\"}\r\n                size={\"100%\"}\r\n                height={\"3vh\"}\r\n                type=\"submit\"\r\n                // disabled={!isValid}\r\n              >\r\n                {isCreatingSetup === \"pending\" || isUpdatingSetup === \"pending\" ? (\r\n                  <Loader1 />\r\n                ) : isEdit ? (\r\n                  \"Update\"\r\n                ) : (\r\n                  \"Submit\"\r\n                )}\r\n              </CustomButton>\r\n            </form>\r\n          </div>\r\n          {/* <Divider orientation=\"vertical\" sx={{ mx: 0 }} />\r\n          </Grid> */}\r\n        </Grid>\r\n      </MDBox>\r\n      {/* </Header> */}\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n};\r\n"],"names":["Header","_ref","info","children","tabsOrientation","setTabsOrientation","useState","tabValue","setTabValue","useEffect","handleTabsOrientation","window","innerWidth","breakpoints","values","sm","addEventListener","removeEventListener","image","hive_type","status","_jsxs","MDBox","position","mb","_jsx","display","alignItems","minHeight","borderRadius","sx","backgroundImage","_ref2","functions","rgba","linearGradient","palette","gradients","main","state","backgroundSize","backgroundPosition","overflow","Card","mt","mx","py","px","Grid","container","spacing","item","MDAvatar","src","alt","size","shadow","height","lineHeight","MDTypography","variant","fontWeight","color","defaultProps","apiarySetupTableData","dispatch","useDispatch","deleteSetup","useDeleteSetup","isGettingAllSetupComp","setupComp","apiarySetupComp","count","numOfPages","totalSetupComp","refetch","useSetupComp","Author","component_name","component_id","ml","columns","accessor","width","align","rows","map","setup","i","service_id","description","stock","price","payload","component","logoSlack","service","href","title","length","slice","update","Link","onClick","setUpdateSetup","to","remove","confirm","sort","pages","priceRange","useSelector","store","setups","React","DashboardLayout","DashboardNavbar","pt","pb","xs","bgColor","coloredShadow","className","styles","wrapper","inner","resetValues","AddIcon","fill","fontSize","titleAccess","SetupSearchModal","DataTable","table","isSorted","entriesPerPage","showTotalEntries","noEndBorder","PaginationControlled","pageDetails","handleChange","event","value","preventDefault","changePage","Footer","CreateUpdateSetup","id","useParams","setupInputs","useSetupInputs","isUpdatingSetup","updateSetup","useUpdateSetup","createSetup","isCreatingSetup","useCreateSetup","isEdit","setupDetails","styling","ArrowBackIcon","form","onSubmit","e","Object","every","undefined","alert","filter","detail","name","TextField","CustomButton","background","backgroundhover","type","Loader1"],"sourceRoot":""}