{"version":3,"file":"static/js/809.bce46d27.chunk.js","mappings":"mYA6LA,QAnJA,WACE,MAAM,YAAEA,IAAgBC,EAAAA,EAAAA,MAClB,MAAEC,EAAK,SAAEC,EAAQ,SAAEC,EAAQ,QAAEC,EAAO,MAAEC,EAAK,OAAEC,IAAWC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SACrF,aAAEC,EAAY,kBAAEC,IAAsBC,EAAAA,EAAAA,OACtC,sBAAEC,IAA0BC,EAAAA,EAAAA,MAC5BC,EAAc,CAAEd,QAAOC,WAAUC,WAAUC,UAASC,QAAOC,UAC3DU,GAAWC,EAAAA,EAAAA,MAiCjB,OAXAC,EAAAA,WAAgB,KACd,GAA0B,YAAtBP,EAAiC,CACnC,MAAMQ,EAAQC,OAAOC,YAAW,KAC9BL,EAAS,wBAAwB,GAChC,KACH,MAAO,IAAMM,aAAaH,EAC5B,IACC,CAACR,EAAmBK,IACvBE,EAAAA,WAAgB,KACgB,YAA1BL,GAAqCG,EAAS,aAAa,GAC9D,CAACH,EAAuBG,KAEzBO,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAACC,MAAOC,EAAQC,UAC1BC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAAF,SAAA,EACHC,EAAAA,EAAAA,MAACE,EAAAA,EAAK,CACJC,QAAQ,WACRC,QAAQ,OACRC,aAAa,KACbC,cAAc,UACdC,GAAI,EACJC,IAAK,EACLC,EAAG,EACHC,GAAI,EACJC,UAAU,SAAQZ,SAAA,EAElBJ,EAAAA,EAAAA,KAACiB,EAAAA,EAAY,CAACT,QAAQ,KAAKU,WAAW,SAASC,MAAM,QAAQN,GAAI,EAAET,SAAC,mBAGpEJ,EAAAA,EAAAA,KAACiB,EAAAA,EAAY,CAACG,QAAQ,QAAQZ,QAAQ,SAASW,MAAM,QAAQE,GAAI,EAAEjB,SAAC,uCAItEJ,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CAACe,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAEpB,UACzBC,EAAAA,EAAAA,MAACE,EAAAA,EAAK,CAACkB,UAAU,OAAOC,KAAK,OAAMtB,SAAA,EACjCJ,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CAACQ,GAAI,IAoBVvC,EAAYmD,KAAI,CAACC,EAAQC,KACxB,MAAM,KAAEC,EAAI,UAAEC,GAAcH,EAC5B,OACE5B,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CAACQ,GAAI,EAAEX,SACV2B,GADgBF,EAEX,KAiCZ7B,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CAACM,GAAI,EAAGE,GAAI,EAAEX,UAClBJ,EAAAA,EAAAA,KAACgC,EAAAA,EAAQ,CAACC,QAASA,IAlHVC,MAEnB,MAAMC,EAAgB,GAQtB,GAPKzD,GAAOyD,EAAcC,KAAK,SAC1BzD,GAAUwD,EAAcC,KAAK,aAC7BxD,GAAUuD,EAAcC,KAAK,YAC7BvD,GAASsD,EAAcC,KAAK,WAC5BtD,GAAOqD,EAAcC,KAAK,SAC1BrD,GAAQoD,EAAcC,KAAK,UAE5BD,EAAcE,OAAS,EAA3B,CAEE,MAAMC,EAAe,IAAIH,EAAcI,KAAK,cAC1CJ,EAAcE,OAAS,EAAI,IAAM,MAC/BF,EAAcE,OAAS,EAAI,MAAQ,gBAEvCG,MAAMC,MAAMH,EAEd,MACAnD,EAAaK,EAAY,EA+FU0C,GAAgB1B,QAAQ,WAAWW,MAAM,OAAOuB,WAAS,EAAAtC,SACzD,YAAtBhB,GAAkCY,EAAAA,EAAAA,KAAC2C,EAAAA,GAAO,IAAM,eAGrD3C,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CAACM,GAAI,EAAGE,GAAI,EAAGC,UAAU,SAAQZ,UACrCC,EAAAA,EAAAA,MAACY,EAAAA,EAAY,CAACT,QAAQ,SAASW,MAAM,OAAMf,SAAA,CAAC,2BACjB,KACzBJ,EAAAA,EAAAA,KAACiB,EAAAA,EAAY,CACXQ,UAAWmB,EAAAA,GACXC,GAAG,wBACHrC,QAAQ,SACRW,MAAM,OACND,WAAW,SACX4B,cAAY,EAAA1C,SACb,0BAUjB,C","sources":["layouts/authentication/sign-up/index.js"],"sourcesContent":["/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\n// react-router-dom components\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// @mui material components\r\nimport Card from \"@mui/material/Card\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDInput from \"components/MDInput\";\r\nimport MDButton from \"components/MDButton\";\r\n\r\n// Authentication layout components\r\nimport CoverLayout from \"layouts/authentication/components/CoverLayout\";\r\n\r\n// Images\r\nimport bgImage from \"assets/images/bg-sign-up-cover.jpeg\";\r\nimport useRegister from \"hooks/Register\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useRegisterUser } from \"features/users/userThunk\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { Skeleton } from \"@mui/material\";\r\nimport { Loader1 } from \"components copy/Loader\";\r\nimport { useCurrentUser } from \"features/users/userThunk\";\r\n\r\nfunction Cover() {\r\n  const { userDetails } = useRegister();\r\n  const { email, fullname, password, address, phone, gender } = useSelector((store) => store.users);\r\n  const { registerUser, isRegisteringUser } = useRegisterUser();\r\n  const { isCheckingCurrentUser } = useCurrentUser();\r\n  const userdetails = { email, fullname, password, address, phone, gender };\r\n  const navigate = useNavigate();\r\n  const handleSubmit = () => {\r\n    // e.preventDefault();\r\n    const missingFields = [];\r\n    if (!email) missingFields.push(\"Email\");\r\n    if (!fullname) missingFields.push(\"Full Name\");\r\n    if (!password) missingFields.push(\"Password\");\r\n    if (!address) missingFields.push(\"Address\");\r\n    if (!phone) missingFields.push(\"Phone\");\r\n    if (!gender) missingFields.push(\"Gender\");\r\n\r\n    if (missingFields.length > 0) {\r\n      // Create a dynamic error message\r\n      const errorMessage = ` ${missingFields.join(\", \")} field${\r\n        missingFields.length > 1 ? \"s\" : \"\"\r\n      } ${missingFields.length > 1 ? \"are\" : \"is\"} required`;\r\n      //   console.log(missingFields);\r\n      toast.error(errorMessage);\r\n      return;\r\n    }\r\n    registerUser(userdetails);\r\n  };\r\n  React.useEffect(() => {\r\n    if (isRegisteringUser === \"success\") {\r\n      const timer = window.setTimeout(() => {\r\n        navigate(\"/authentication/check\");\r\n      }, 5000);\r\n      return () => clearTimeout(timer); // Clear timeout if component unmounts\r\n    }\r\n  }, [isRegisteringUser, navigate]);\r\n  React.useEffect(() => {\r\n    if (isCheckingCurrentUser === \"success\") navigate(\"/dashboard\");\r\n  }, [isCheckingCurrentUser, navigate]);\r\n  return (\r\n    <CoverLayout image={bgImage}>\r\n      <Card>\r\n        <MDBox\r\n          variant=\"gradient\"\r\n          bgColor=\"info\"\r\n          borderRadius=\"lg\"\r\n          coloredShadow=\"success\"\r\n          mx={2}\r\n          mt={-3}\r\n          p={3}\r\n          mb={1}\r\n          textAlign=\"center\"\r\n        >\r\n          <MDTypography variant=\"h4\" fontWeight=\"medium\" color=\"white\" mt={1}>\r\n            Join us today\r\n          </MDTypography>\r\n          <MDTypography display=\"block\" variant=\"button\" color=\"white\" my={1}>\r\n            Enter your details to register\r\n          </MDTypography>\r\n        </MDBox>\r\n        <MDBox pt={4} pb={3} px={3}>\r\n          <MDBox component=\"form\" role=\"form\">\r\n            <MDBox mb={2}>\r\n              {/* {!email ? (\r\n                <Skeleton\r\n                  variant=\"rectangular\"\r\n                  width={\"fit-content\"}\r\n                  height={\"fit-content\"}\r\n                  sx={{\r\n                    borderRadius: \"5px\",\r\n                    background: \"none\",\r\n                    color: \"red\",\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  Your email is missing , you have to go back !!!\r\n                </Skeleton>\r\n              ) : (\r\n                `${email}`\r\n              )} */}\r\n              {/* <Link to=\"/authentication/check\">Not your Email? Go Back</Link> */}\r\n            </MDBox>\r\n            {userDetails.map((detail, i) => {\r\n              const { name, TextField } = detail;\r\n              return (\r\n                <MDBox mb={2} key={i}>\r\n                  {TextField}\r\n                </MDBox>\r\n              );\r\n            })}\r\n            {/* <MDBox mb={2}>\r\n              <MDInput type=\"text\" label=\"Name\" variant=\"standard\" fullWidth />\r\n            </MDBox>\r\n            <MDBox mb={2}>\r\n              <MDInput type=\"email\" label=\"Email\" variant=\"standard\" fullWidth />\r\n            </MDBox>\r\n            <MDBox mb={2}>\r\n              <MDInput type=\"password\" label=\"Password\" variant=\"standard\" fullWidth />\r\n            </MDBox> */}\r\n            {/* <MDBox display=\"flex\" alignItems=\"center\" ml={-1}>\r\n              <Checkbox />\r\n              <MDTypography\r\n                variant=\"button\"\r\n                fontWeight=\"regular\"\r\n                color=\"text\"\r\n                sx={{ cursor: \"pointer\", userSelect: \"none\", ml: -1 }}\r\n              >\r\n                &nbsp;&nbsp;I agree the&nbsp;\r\n              </MDTypography>\r\n              <MDTypography\r\n                component=\"a\"\r\n                href=\"#\"\r\n                variant=\"button\"\r\n                fontWeight=\"bold\"\r\n                color=\"info\"\r\n                textGradient\r\n              >\r\n                Terms and Conditions\r\n              </MDTypography>\r\n            </MDBox> */}\r\n            <MDBox mt={4} mb={1}>\r\n              <MDButton onClick={() => handleSubmit()} variant=\"gradient\" color=\"info\" fullWidth>\r\n                {isRegisteringUser === \"pending\" ? <Loader1 /> : \"join us\"}\r\n              </MDButton>\r\n            </MDBox>\r\n            <MDBox mt={3} mb={1} textAlign=\"center\">\r\n              <MDTypography variant=\"button\" color=\"text\">\r\n                Already have an account?{\" \"}\r\n                <MDTypography\r\n                  component={Link}\r\n                  to=\"/authentication/check\"\r\n                  variant=\"button\"\r\n                  color=\"info\"\r\n                  fontWeight=\"medium\"\r\n                  textGradient\r\n                >\r\n                  Sign In\r\n                </MDTypography>\r\n              </MDTypography>\r\n            </MDBox>\r\n          </MDBox>\r\n        </MDBox>\r\n      </Card>\r\n    </CoverLayout>\r\n  );\r\n}\r\n\r\nexport default Cover;\r\n\r\n{\r\n  /* <section>\r\n  <span>\r\n    {!email ? (\r\n      <Skeleton\r\n        variant=\"rectangular\"\r\n        width={\"fit-content\"}\r\n        height={\"fit-content\"}\r\n        sx={{\r\n          borderRadius: \"5px\",\r\n          background: \"none\",\r\n          color: \"red\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        Your email is missing , you have to go back !!!\r\n      </Skeleton>\r\n    ) : (\r\n      `${email}`\r\n    )}\r\n    <Link to=\"/authflow/email\">Not your Email? Go Back</Link>\r\n  </span>\r\n  <form onSubmit={handleSubmit}>\r\n    {userDetails.map((detail, i) => {\r\n      const { name, TextField } = detail;\r\n      return <div key={i}>{TextField}</div>;\r\n    })}\r\n    <CustomButton\r\n      background={\"#1212121F\"}\r\n      backgroundhover={\"#59d9d9\"}\r\n      size={\"100%\"}\r\n      type={\"submit\"}\r\n      height={\"3vh\"}\r\n    >\r\n      {isRegisteringUser === \"pending\" ? <Loader1 /> : \"join us\"}\r\n    </CustomButton>\r\n  </form>\r\n</section>; */\r\n}\r\n"],"names":["userDetails","useRegister","email","fullname","password","address","phone","gender","useSelector","store","users","registerUser","isRegisteringUser","useRegisterUser","isCheckingCurrentUser","useCurrentUser","userdetails","navigate","useNavigate","React","timer","window","setTimeout","clearTimeout","_jsx","CoverLayout","image","bgImage","children","_jsxs","Card","MDBox","variant","bgColor","borderRadius","coloredShadow","mx","mt","p","mb","textAlign","MDTypography","fontWeight","color","display","my","pt","pb","px","component","role","map","detail","i","name","TextField","MDButton","onClick","handleSubmit","missingFields","push","length","errorMessage","join","toast","error","fullWidth","Loader1","Link","to","textGradient"],"sourceRoot":""}