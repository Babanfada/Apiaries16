{"version":3,"file":"static/js/885.5192d464.chunk.js","mappings":"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","sources":["layouts/consultations/profile/components/Header/index.js","layouts/consultations/data/consultationTableData.js","components copy/searchModals/ConsultationSearchModal.jsx","layouts/consultations/index.js"],"sourcesContent":["/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// prop-types is a library for typechecking of props.\r\nimport PropTypes from \"prop-types\";\r\n\r\n// @mui material components\r\nimport Card from \"@mui/material/Card\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Icon from \"@mui/material/Icon\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\n\r\n// Material Dashboard 2 React base styles\r\nimport breakpoints from \"assets/theme/base/breakpoints\";\r\n\r\n// Images\r\nimport burceMars from \"assets/images/bruce-mars.jpg\";\r\nimport backgroundImage from \"assets/images/bg-profile.jpeg\";\r\n\r\nfunction Header({ info, children }) {\r\n  const [tabsOrientation, setTabsOrientation] = useState(\"horizontal\");\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // A function that sets the orientation state of the tabs.\r\n    function handleTabsOrientation() {\r\n      return window.innerWidth < breakpoints.values.sm\r\n        ? setTabsOrientation(\"vertical\")\r\n        : setTabsOrientation(\"horizontal\");\r\n    }\r\n\r\n    /** \r\n     The event listener that's calling the handleTabsOrientation function when resizing the window.\r\n    */\r\n    window.addEventListener(\"resize\", handleTabsOrientation);\r\n\r\n    // Call the handleTabsOrientation function to set the state with the initial value.\r\n    handleTabsOrientation();\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleTabsOrientation);\r\n  }, [tabsOrientation]);\r\n\r\n  const handleSetTabValue = (event, newValue) => setTabValue(newValue);\r\n  const { image = \"\", hive_type, status } = info;\r\n\r\n  return (\r\n    <MDBox position=\"relative\" mb={5}>\r\n      <MDBox\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        position=\"relative\"\r\n        minHeight=\"18.75rem\"\r\n        borderRadius=\"xl\"\r\n        sx={{\r\n          backgroundImage: ({ functions: { rgba, linearGradient }, palette: { gradients } }) =>\r\n            `${linearGradient(\r\n              rgba(gradients.info.main, 0.6),\r\n              rgba(gradients.info.state, 0.6)\r\n            )}, url(${backgroundImage})`,\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"50%\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      />\r\n      <Card\r\n        sx={{\r\n          position: \"relative\",\r\n          mt: -8,\r\n          mx: 3,\r\n          py: 2,\r\n          px: 2,\r\n        }}\r\n      >\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item>\r\n            <MDAvatar src={image} alt=\"profile-image\" size=\"xl\" shadow=\"sm\" />\r\n          </Grid>\r\n          <Grid item>\r\n            <MDBox height=\"100%\" mt={0.5} lineHeight={1}>\r\n              <MDTypography variant=\"h5\" fontWeight=\"medium\">\r\n                {hive_type}\r\n              </MDTypography>\r\n              <MDTypography variant=\"button\" color=\"text\" fontWeight=\"regular\">\r\n                {status}\r\n              </MDTypography>\r\n            </MDBox>\r\n          </Grid>\r\n          {/* <Grid item xs={12} md={6} lg={4} sx={{ ml: \"auto\" }}>\r\n            <AppBar position=\"static\">\r\n              <Tabs orientation={tabsOrientation} value={tabValue} onChange={handleSetTabValue}>\r\n                <Tab\r\n                  label=\"App\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      home\r\n                    </Icon>\r\n                  }\r\n                />\r\n                <Tab\r\n                  label=\"Message\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      email\r\n                    </Icon>\r\n                  }\r\n                />\r\n                <Tab\r\n                  label=\"Settings\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      settings\r\n                    </Icon>\r\n                  }\r\n                />\r\n              </Tabs>\r\n            </AppBar>\r\n          </Grid> */}\r\n        </Grid>\r\n        {children}\r\n      </Card>\r\n    </MDBox>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  info: {\r\n    image: \"\", // Fallback image URL\r\n    hive_type: \"First Name\",\r\n    status: \"Last Name\",\r\n  },\r\n  children: null,\r\n};\r\n\r\nHeader.propTypes = {\r\n  info: PropTypes.shape({\r\n    image: PropTypes.string,\r\n    hive_type: PropTypes.string,\r\n    status: PropTypes.string,\r\n  }),\r\n  children: PropTypes.node,\r\n};\r\nexport default Header;\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable react/function-component-definition */\r\n/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\nimport MDBadge from \"components/MDBadge\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport logoSlack from \"assets/images/small-logos/logo-slack.svg\";\r\nimport React from \"react\";\r\nimport { useConsultation } from \"features/consultation/consultationThunk\";\r\nimport { useDeleteConsultation } from \"features/consultation/consultationThunk\";\r\nimport { setUpdateConsultation } from \"features/consultation/consultationSlice\";\r\n\r\nexport default function consultationTableData() {\r\n  const dispatch = useDispatch();\r\n  const { deleteConsultation } = useDeleteConsultation();\r\n  const {\r\n    isGettingAllC_Items,\r\n    c_items: { consultancy_items = [], count = 0, numOfPages = 0, totalCitems = 0 } = {},\r\n    refetch,\r\n  } = useConsultation();\r\n  const Author = ({ image, item_name, item_id }) => (\r\n    <MDBox display=\"flex\" alignItems=\"center\" lineHeight={1}>\r\n      <MDAvatar src={image} size=\"sm\" />\r\n      <MDBox ml={2} lineHeight={1}>\r\n        <MDTypography display=\"block\" variant=\"button\" fontWeight=\"medium\">\r\n          {`${item_id} `}\r\n        </MDTypography>\r\n        <MDTypography variant=\"caption\">{item_name}</MDTypography>\r\n      </MDBox>\r\n    </MDBox>\r\n  );\r\n\r\n  const rows = consultancy_items.map((item, i) => {\r\n    const { item_id, service_id, item_name, description, numOfTimesRendered, price } = item;\r\n    const payload = {\r\n      service_id,\r\n      item_name,\r\n      description,\r\n      numOfTimesRendered,\r\n      price,\r\n    };\r\n\r\n    const handleEdit = () => {\r\n      dispatch(setUpdateConsultation(payload));\r\n    };\r\n    const handleDelete = () => {\r\n      const confirmation = window.confirm(\r\n        \"You are about to Delete a apiary item  records permanently, ARE YOU SURE?\"\r\n      );\r\n      if (!confirmation) return;\r\n      deleteConsultation(item_id);\r\n    };\r\n    return {\r\n      consultation: <Author image={logoSlack} item_name={item_name} item_id={item_id} />,\r\n      service: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          {service_id}\r\n        </MDTypography>\r\n      ),\r\n      description: (\r\n        <MDTypography\r\n          title={description}\r\n          component=\"a\"\r\n          href=\"#\"\r\n          variant=\"caption\"\r\n          color=\"text\"\r\n          fontWeight=\"medium\"\r\n        >\r\n          {description.length > 20 ? `${description.slice(0, 20)}...` : description}\r\n        </MDTypography>\r\n      ),\r\n      rendered: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          # {numOfTimesRendered}\r\n        </MDTypography>\r\n      ),\r\n      price: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          # {price}\r\n        </MDTypography>\r\n      ),\r\n      update: (\r\n        <MDTypography component=\"a\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          <Link\r\n            onClick={() => {\r\n              handleEdit();\r\n            }}\r\n            to={`/createupdateconsultation/${item_id}`}\r\n          >\r\n            Edit\r\n          </Link>\r\n        </MDTypography>\r\n      ),\r\n      remove: (\r\n        <MDTypography\r\n          component=\"a\"\r\n          variant=\"caption\"\r\n          color=\"text\"\r\n          fontWeight=\"medium\"\r\n          onClick={() => {\r\n            handleDelete();\r\n          }}\r\n        >\r\n          <Link>remove</Link>\r\n        </MDTypography>\r\n      ),\r\n    };\r\n  });\r\n  return {\r\n    columns: [\r\n      { Header: \"consultation\", accessor: \"consultation\", width: \"45%\", align: \"left\" },\r\n      { Header: \"service\", accessor: \"service\", align: \"left\" },\r\n      { Header: \"description\", accessor: \"description\", align: \"center\" },\r\n      { Header: \"rendered\", accessor: \"rendered\", align: \"center\" },\r\n      { Header: \"price\", accessor: \"price\", align: \"center\" },\r\n      { Header: \"update\", accessor: \"update\", align: \"center\" },\r\n      { Header: \"remove\", accessor: \"remove\", align: \"center\" },\r\n    ],\r\n    rows: rows,\r\n    numOfPages,\r\n    refetch,\r\n    count,\r\n    isGettingAllC_Items,\r\n    totalCitems,\r\n  };\r\n}\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport styles from \"../../layouts/styles/modal.module.scss\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { CustomButton } from \"../Button\";\r\nimport { Loader1 } from \"../Loader\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useConsultationInputs } from \"../../hooks/ServicesDetails\";\r\nimport { resetValues } from \"../../features/consultation/consultationSlice\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function ConsultationSearchModal({ isGettingAllC_Items }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  //   const { theme } = useThemeContext();\r\n  //   const isDarkMode = theme === \"dark-theme\";\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div>\r\n        <SearchIcon\r\n          fontSize=\"medium\"\r\n          onClick={handleOpen}\r\n          sx={{ cursor: \"pointer\", fill: \"white\" }}\r\n          title=\"search\"\r\n        />\r\n      </div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={{ ...style, background: \"white\" }} className={styles.box}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            Seaerch Consultations <CloseIcon style={{ cursor: \"pointer\" }} onClick={handleClose} />\r\n          </Typography>\r\n          <p>which service are you looking for?</p>\r\n          <SearchConsultation handleClose={handleClose} isGettingAllC_Items={isGettingAllC_Items} />\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst SearchConsultation = ({ handleClose, isGettingAllC_Items }) => {\r\n  const { consultationInputs } = useConsultationInputs();\r\n  const dispatch = useDispatch();\r\n  const resetQuery = () => {\r\n    dispatch(resetValues());\r\n  };\r\n\r\n  return (\r\n    <form className={styles.paper}>\r\n      {consultationInputs\r\n        .filter(\r\n          (detail) =>\r\n            detail.name !== \"description\" && detail.name !== \"service_id\" && detail.name !== \"price\"\r\n        )\r\n        .map((input) => {\r\n          const { name, TextField } = input;\r\n          return <div key={name}>{TextField}</div>;\r\n        })}\r\n\r\n      <CustomButton\r\n        background={\"inherit\"}\r\n        backgroundhover={\"grey\"}\r\n        height={\"8vh\"}\r\n        onClick={resetQuery}\r\n        type=\"button\"\r\n        style={{\r\n          width: \"100%\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        reset\r\n      </CustomButton>\r\n      <CustomButton\r\n        background={\"inherit\"}\r\n        backgroundhover={\"grey\"}\r\n        height={\"8vh\"}\r\n        onClick={() => handleClose()}\r\n        type=\"button\"\r\n        style={{\r\n          width: \"100%\",\r\n          // color: \"white\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        {isGettingAllC_Items === \"pending\" ? <Loader1 color=\"success\" /> : \"Find Out\"}\r\n      </CustomButton>\r\n    </form>\r\n  );\r\n};\r\nimport PropTypes from \"prop-types\";\r\n\r\nConsultationSearchModal.propTypes = {\r\n  isGettingAllC_Items: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.bool, // Adjust based on the expected type\r\n  ]).isRequired,\r\n};\r\n\r\nSearchConsultation.propTypes = {\r\n  handleClose: PropTypes.func.isRequired,\r\n  isGettingAllC_Items: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.bool, // Adjust based on the expected type\r\n  ]).isRequired,\r\n};\r\n","import Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport React from \"react\";\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\nimport Footer from \"examples/Footer\";\r\nimport DataTable from \"examples/Tables/DataTable\";\r\n// Data\r\n// import employeesTableData from \"layouts/tables/data/employeesTableData\";\r\nimport projectsTableData from \"layouts/tables/data/projectsTableData\";\r\n// import { useSingleEmployee } from \"features/employees/employeesThunk\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Divider from \"@mui/material/Divider\";\r\n// @mui icons\r\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\r\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\r\nimport { Email } from \"@mui/icons-material\";\r\nimport ProfileInfoCard from \"examples/Cards/InfoCards/ProfileInfoCard\";\r\nimport ProfilesList from \"examples/Lists/ProfilesList\";\r\nimport DefaultProjectCard from \"examples/Cards/ProjectCards/DefaultProjectCard\";\r\nimport Header from \"./profile/components/Header\";\r\nimport PlatformSettings from \"./profile/components/PlatformSettings\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { useUploadEmployeeImages } from \"features/employees/employeesThunk\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CustomButton } from \"components copy\";\r\nimport { Loader1 } from \"components copy/Loader\";\r\nimport PaginationControlled from \"components copy/component's_Tables/Pagination\";\r\nimport LogoAsana from \"assets/images/small-logos/logo-asana.svg\";\r\nimport moment from \"moment\";\r\nimport consultationTableData from \"./data/consultationTableData\";\r\nimport { changePage } from \"features/consultation/consultationSlice\";\r\nimport ConsultationSearchModal from \"components copy/searchModals/ConsultationSearchModal\";\r\nimport { useConsultationInputs } from \"hooks/ServicesDetails\";\r\nimport { useUpdateConsultation } from \"features/consultation/consultationThunk\";\r\nimport { useCreateConsultation } from \"features/consultation/consultationThunk\";\r\nimport { resetValues } from \"features/consultation/consultationSlice\";\r\nimport styles from \"../styles/thead.module.scss\";\r\nimport styling from \"../styles/createupdate.module.scss\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nfunction Consultation() {\r\n  const { columns, rows, numOfPages, count, refetch, isGettingAllC_Items, totalCitems } =\r\n    consultationTableData();\r\n  const dispatch = useDispatch();\r\n  const { item_id, item_name, description, numOfTimesRendered, price, sort, pages, priceRangeC } =\r\n    useSelector((store) => store.consultations);\r\n  const handleChange = (event, value) => {\r\n    event.preventDefault();\r\n    dispatch(changePage(value));\r\n  };\r\n  React.useEffect(() => {\r\n    refetch();\r\n  }, [pages, item_id, item_name, description, numOfTimesRendered, price, sort, priceRangeC]);\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      <MDBox pt={6} pb={3}>\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <MDBox\r\n                mx={2}\r\n                mt={-3}\r\n                py={3}\r\n                px={2}\r\n                variant=\"gradient\"\r\n                bgColor=\"info\"\r\n                borderRadius=\"lg\"\r\n                coloredShadow=\"info\"\r\n              >\r\n                <MDTypography className={styles.wrapper} variant=\"h6\" color=\"white\">\r\n                  <MDBox className={styles.inner}>\r\n                    <MDTypography color=\"white\">Consultations</MDTypography>\r\n                    <MDTypography color=\"white\">\r\n                      {count}/{totalCitems}\r\n                    </MDTypography>\r\n                  </MDBox>\r\n                  <MDBox className={styles.inner}>\r\n                    <Link\r\n                      onClick={() => dispatch(resetValues())}\r\n                      to=\"/createupdateconsultation/add\"\r\n                    >\r\n                      <AddIcon\r\n                        sx={{ fill: \"white\" }}\r\n                        fontSize=\"medium\"\r\n                        titleAccess=\"add a new consultation details\"\r\n                      />\r\n                    </Link>\r\n                    <ConsultationSearchModal isGettingAllC_Items={isGettingAllC_Items} />\r\n                  </MDBox>\r\n                </MDTypography>\r\n              </MDBox>\r\n              <MDBox pt={3}>\r\n                <DataTable\r\n                  table={{ columns, rows }}\r\n                  isSorted={false}\r\n                  entriesPerPage={false}\r\n                  showTotalEntries={false}\r\n                  noEndBorder\r\n                />\r\n              </MDBox>\r\n            </Card>\r\n            <PaginationControlled pageDetails={{ handleChange, numOfPages, pages }} />\r\n          </Grid>\r\n        </Grid>\r\n      </MDBox>\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n}\r\nexport default Consultation;\r\n\r\nexport const CreateUpdateConsultation = () => {\r\n  const { id } = useParams();\r\n  const { consultationInputs } = useConsultationInputs();\r\n  const { isUpdatingConsultation, updateConsultation } = useUpdateConsultation();\r\n  const { createConsultation, isCreatingConsultation } = useCreateConsultation();\r\n  const { service_id, item_name, description, numOfTimesRendered, price, isEdit } = useSelector(\r\n    (store) => store.consultations\r\n  );\r\n  const consultationDetails = {\r\n    service_id,\r\n    item_name,\r\n    description,\r\n    numOfTimesRendered,\r\n    price,\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = Object.values(consultationDetails).every(\r\n      (value) => value !== undefined && value !== null && value !== \"\"\r\n    );\r\n    if (!isValid) {\r\n      alert(\"Please fill out all required fields.\");\r\n      return;\r\n    }\r\n    if (isEdit) return updateConsultation({ consultationDetails, id });\r\n    createConsultation(consultationDetails);\r\n  };\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      {/* <MDBox mb={2} /> */}\r\n      {/* <Header info={{ image, first_name, last_name, role }}> */}\r\n      <MDBox mt={5} mb={3}>\r\n        <Grid className={styling.wrapper} container spacing={1}>\r\n          {/* <Grid item xs={12} md={6} xl={4} sx={{ display: \"flex\" }}> */}\r\n          {/* <Divider orientation=\"vertical\" sx={{ ml: -2, mr: 1 }} /> */}\r\n          <div>\r\n            {/* <Link to={`/consultations`}>Go back</Link> */}\r\n            <div>\r\n              <Link to={`/consultations`}>\r\n                <ArrowBackIcon />\r\n              </Link>\r\n              <h6>{isEdit ? `Update ${item_name} details` : \"Create Service\"} </h6>\r\n              <div></div>\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n              {consultationInputs\r\n                .filter((detail) => detail.name !== \"sort\" && detail.name !== \"priceRangeC\")\r\n                .map((detail) => {\r\n                  const { name, TextField } = detail;\r\n                  return <div key={name}>{TextField}</div>;\r\n                })}\r\n              <CustomButton\r\n                background={\"inherit\"}\r\n                backgroundhover={\"grey\"}\r\n                size={\"100%\"}\r\n                height={\"3vh\"}\r\n                type=\"submit\"\r\n                // disabled={!isValid}\r\n              >\r\n                {isCreatingConsultation === \"pending\" || isUpdatingConsultation === \"pending\" ? (\r\n                  <Loader1 />\r\n                ) : isEdit ? (\r\n                  \"Update\"\r\n                ) : (\r\n                  \"Submit\"\r\n                )}\r\n              </CustomButton>\r\n            </form>\r\n          </div>\r\n          {/* <Divider orientation=\"vertical\" sx={{ mx: 0 }} /> */}\r\n          {/* </Grid> */}\r\n        </Grid>\r\n      </MDBox>\r\n      {/* </Header> */}\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n};\r\n"],"names":["Header","_ref","info","children","tabsOrientation","setTabsOrientation","useState","tabValue","setTabValue","useEffect","handleTabsOrientation","window","innerWidth","breakpoints","values","sm","addEventListener","removeEventListener","image","hive_type","status","_jsxs","MDBox","position","mb","_jsx","display","alignItems","minHeight","borderRadius","sx","backgroundImage","_ref2","functions","rgba","linearGradient","palette","gradients","main","state","backgroundSize","backgroundPosition","overflow","Card","mt","mx","py","px","Grid","container","spacing","item","MDAvatar","src","alt","size","shadow","height","lineHeight","MDTypography","variant","fontWeight","color","defaultProps","consultationTableData","dispatch","useDispatch","deleteConsultation","useDeleteConsultation","isGettingAllC_Items","c_items","consultancy_items","count","numOfPages","totalCitems","refetch","useConsultation","Author","item_name","item_id","ml","columns","accessor","width","align","rows","map","i","service_id","description","numOfTimesRendered","price","payload","consultation","logoSlack","service","component","href","title","length","slice","rendered","update","Link","onClick","setUpdateConsultation","to","remove","confirm","style","bgcolor","boxShadow","p","ConsultationSearchModal","open","setOpen","React","handleClose","className","styles","wrapper","SearchIcon","fontSize","handleOpen","cursor","fill","Modal","onClose","Box","background","box","Typography","id","CloseIcon","SearchConsultation","consultationInputs","useConsultationInputs","paper","filter","detail","name","input","TextField","CustomButton","backgroundhover","resetQuery","resetValues","type","Loader1","sort","pages","priceRangeC","useSelector","store","consultations","DashboardLayout","DashboardNavbar","pt","pb","xs","bgColor","coloredShadow","inner","AddIcon","titleAccess","DataTable","table","isSorted","entriesPerPage","showTotalEntries","noEndBorder","PaginationControlled","pageDetails","handleChange","event","value","preventDefault","changePage","Footer","CreateUpdateConsultation","useParams","isUpdatingConsultation","updateConsultation","useUpdateConsultation","createConsultation","isCreatingConsultation","useCreateConsultation","isEdit","consultationDetails","styling","ArrowBackIcon","onSubmit","e","Object","every","undefined","alert"],"sourceRoot":""}