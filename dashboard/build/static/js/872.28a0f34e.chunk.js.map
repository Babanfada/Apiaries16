{"version":3,"file":"static/js/872.28a0f34e.chunk.js","mappings":"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","sources":["hooks/DashDetails.jsx","layouts/products/profile/components/Header/index.js","layouts/products/data/productsTableData.js","components copy/searchModals/ProductSearchModal.jsx","layouts/products/index.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport { handelChange, handleDob } from \"../features/stations/stationSlice\";\r\nimport { handleDate, handleChangeEquip } from \"../features/equuipments/equipmentSlice\";\r\nimport { convertToDateOnly } from \"../utils\";\r\nimport {\r\n  DateRegister,\r\n  GenderInput,\r\n  MultiLineInput,\r\n  RangeSlider,\r\n  UserInput,\r\n} from \"../components copy\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { handleChangeSupp, handleDateSupp } from \"../features/supplies/suppliesSlice\";\r\nimport { handleDateProducts } from \"features/products/productsSlice\";\r\nimport { handleChangeProducts } from \"features/products/productsSlice\";\r\n\r\nexport const useDashDetails_1 = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    station_name,\r\n    supervisor_int,\r\n    supervisor_ext,\r\n    location,\r\n    longitude,\r\n    latitude,\r\n    station_size,\r\n    number_of_hive_boxes,\r\n    status,\r\n    station_maintainace_history,\r\n    last_inspection_date,\r\n    next_inspection_date,\r\n    notes,\r\n    sort,\r\n  } = useSelector((store) => store.stations);\r\n  const getInput = (e) => {\r\n    const { name, value } = e.target;\r\n    const numericFields = [\r\n      \"supervisor_int\",\r\n      \"supervisor_ext\",\r\n      \"longitude\",\r\n      \"latitude\",\r\n      \"number_of_hive_boxes\",\r\n    ];\r\n\r\n    let processedValue = numericFields.includes(name) ? Number(value) : value;\r\n    if (\r\n      numericFields.includes(name) &&\r\n      ![\"longitude\", \"latitude\"].includes(name) &&\r\n      processedValue < 1\r\n    ) {\r\n      processedValue = 1;\r\n    }\r\n    dispatch(handelChange({ name, value: processedValue }));\r\n  };\r\n\r\n  const getDob = (e) => {\r\n    const { name, value } = e.target;\r\n    const formattedDate = convertToDateOnly(value.toISOString());\r\n    dispatch(handleDob({ name, date: formattedDate }));\r\n  };\r\n  const station_details = [\r\n    {\r\n      name: \"station_name\",\r\n      TextField: (\r\n        <UserInput\r\n          name={\"station_name\"}\r\n          value={station_name}\r\n          type={\"name\"}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"supervisor_int\",\r\n      TextField: (\r\n        <UserInput\r\n          name={\"supervisor_int\"}\r\n          value={supervisor_int}\r\n          type={\"number\"}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"supervisor_ext\",\r\n      TextField: (\r\n        <UserInput\r\n          name={\"supervisor_ext\"}\r\n          value={supervisor_ext}\r\n          type={\"number\"}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"location\",\r\n      TextField: (\r\n        <UserInput name={\"location\"} value={location} type={\"name\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"longitude\",\r\n      TextField: (\r\n        <UserInput name={\"longitude\"} value={longitude} type={\"number\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"latitude\",\r\n      TextField: (\r\n        <UserInput name={\"latitude\"} value={latitude} type={\"number\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"station_size\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"station_size\"}\r\n          value={station_size}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"small\", \"medium\", \"large\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"number_of_hive_boxes\",\r\n      TextField: (\r\n        <UserInput\r\n          name={\"number_of_hive_boxes\"}\r\n          value={number_of_hive_boxes}\r\n          type={\"number\"}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"status\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"status\"}\r\n          value={status}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"active\", \"inactive\", \"terminated\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"station_maintainace_history\",\r\n      TextField: (\r\n        <MultiLineInput\r\n          name={\"station_maintainace_history\"}\r\n          value={station_maintainace_history}\r\n          type={\"text\"}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"last_inspection_date\",\r\n      TextField: (\r\n        <DateRegister\r\n          name={\"last_inspection_date\"}\r\n          value={last_inspection_date}\r\n          onChange={getDob}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"next_inspection_date\",\r\n      TextField: (\r\n        <DateRegister\r\n          name={\"next_inspection_date\"}\r\n          value={next_inspection_date}\r\n          onChange={getDob}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"notes\",\r\n      TextField: (\r\n        <MultiLineInput name={\"notes\"} value={notes} type={\"text\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"sort\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"sort\"}\r\n          value={sort}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"A-Z\", \"Z-A\", \"high-low\", \"low-high\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n  const searchStations = station_details.filter((detail) =>\r\n    [\r\n      \"station_name\",\r\n      \"location\",\r\n      \"station_size\",\r\n      \"status\",\r\n      \"supervisor_int\",\r\n      \"supervisor_ext\",\r\n      \"number_of_hive_boxes\",\r\n      \"sort\",\r\n      //   \"last_inspection_date\",\r\n      //   \"next_inspection_date\",\r\n    ].includes(detail.name)\r\n  );\r\n  return { station_details, searchStations };\r\n};\r\n\r\nexport const useEquipments = () => {\r\n  const {\r\n    tool_name,\r\n    category,\r\n    quantity,\r\n    status,\r\n    storage_location,\r\n    supplier,\r\n    purchase_date,\r\n    purchase_cost,\r\n    currency,\r\n    last_maintanace_date,\r\n    next_maintanace_date,\r\n    retired,\r\n    note,\r\n    sort,\r\n  } = useSelector((store) => store.equipments);\r\n  const dispatch = useDispatch();\r\n  const getDob = (e) => {\r\n    const { name, value } = e.target;\r\n    const formattedDate = convertToDateOnly(value.toISOString());\r\n    dispatch(handleDate({ name, date: formattedDate }));\r\n  };\r\n  const getInput = (e) => {\r\n    const { name, value } = e.target;\r\n    const numericFields = [\"quantity\", \"purchase_cost\"];\r\n    let processedValue = numericFields.includes(name) ? Number(value) : value;\r\n    if (numericFields.includes(name) && processedValue < 1) {\r\n      processedValue = 1;\r\n    }\r\n\r\n    dispatch(handleChangeEquip({ name, value: processedValue }));\r\n  };\r\n  const equipmentDetails = [\r\n    {\r\n      name: \"tool_name\",\r\n      TextField: (\r\n        <UserInput name={\"tool_name\"} value={tool_name} type={\"name\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"quantity\",\r\n      TextField: (\r\n        <UserInput name={\"quantity\"} value={quantity} type={\"number\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"purchase_cost\",\r\n      TextField: (\r\n        <UserInput\r\n          name={\"purchase_cost\"}\r\n          value={purchase_cost}\r\n          type={\"number\"}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"supplier\",\r\n      TextField: (\r\n        <UserInput name={\"supplier\"} value={supplier} type={\"name\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"currency\",\r\n      TextField: (\r\n        <UserInput name={\"currency\"} value={currency} type={\"name\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"category\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"category\"}\r\n          value={category}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"beekeping\", \"carpentary\", \"processing\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"retired\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"retired\"}\r\n          value={retired}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"retired\", \"not retired\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"status\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"status\"}\r\n          value={status}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"used\", \"new\", \"need repair\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"storage_location\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"storage_location\"}\r\n          value={storage_location}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"warehouse\", \"apiary site\", \"factory\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"purchase_date\",\r\n      TextField: <DateRegister name={\"purchase_date\"} value={purchase_date} onChange={getDob} />,\r\n    },\r\n    {\r\n      name: \"last_maintanace_date\",\r\n      TextField: (\r\n        <DateRegister\r\n          name={\"last_maintanace_date\"}\r\n          value={last_maintanace_date}\r\n          onChange={getDob}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"next_maintanace_date\",\r\n      TextField: (\r\n        <DateRegister\r\n          name={\"next_maintanace_date\"}\r\n          value={next_maintanace_date}\r\n          onChange={getDob}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"note\",\r\n      TextField: (\r\n        <MultiLineInput name={\"note\"} value={note} type={\"text\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"sort\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"sort\"}\r\n          value={sort}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"high-purchase-cost\", \"low-purchase-cost\", \"A-Z\", \"Z-A\", \"recent\", \"old\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n  const searchEquipments = equipmentDetails.filter((detail) =>\r\n    [\r\n      \"tool_name\",\r\n      \"category\",\r\n      \"status\",\r\n      \"storage_location\",\r\n      \"supplier\",\r\n      \"currency\",\r\n      \"retired\",\r\n      \"quantity\",\r\n      \"purchase_cost\",\r\n      \"purchase_date\",\r\n      \"sort\",\r\n    ].includes(detail.name)\r\n  );\r\n\r\n  return { equipmentDetails, searchEquipments };\r\n};\r\n\r\nexport const useSuppliesInputs = () => {\r\n  const {\r\n    supply_name,\r\n    category,\r\n    quantity,\r\n    status,\r\n    storage_location,\r\n    supplier,\r\n    minimum_stock_level,\r\n    purchase_date,\r\n    purchase_cost,\r\n    sort,\r\n  } = useSelector((store) => store.supplies);\r\n  const dispatch = useDispatch();\r\n  const getDob = (e) => {\r\n    const { name, value } = e.target;\r\n    const formattedDate = convertToDateOnly(value.toISOString());\r\n    dispatch(handleDateSupp({ name, date: formattedDate }));\r\n  };\r\n  const getInput = (e) => {\r\n    const { name, value } = e.target;\r\n    const numericFields = [\"quantity\", \"purchase_cost\", \" minimum_stock_level\"];\r\n    let processedValue = numericFields.includes(name) ? Number(value) : value;\r\n    if (numericFields.includes(name) && processedValue < 1) {\r\n      processedValue = 1;\r\n    }\r\n    dispatch(handleChangeSupp({ name, value: processedValue }));\r\n  };\r\n  const suppliesDetails = [\r\n    {\r\n      name: \"supply_name\",\r\n      TextField: (\r\n        <UserInput name={\"supply_name\"} value={supply_name} type={\"name\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"category\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"category\"}\r\n          value={category}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"processing\", \"packaging\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"quantity\",\r\n      TextField: (\r\n        <UserInput name={\"quantity\"} value={quantity} type={\"number\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"status\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"status\"}\r\n          value={status}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"used\", \"new\", \"need repair\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"storage_location\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"storage_location\"}\r\n          value={storage_location}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"warehouse\", \"factory\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"supplier\",\r\n      TextField: (\r\n        <UserInput name={\"supplier\"} value={supplier} type={\"name\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"purchase_cost\",\r\n      TextField: (\r\n        <UserInput\r\n          name={\"purchase_cost\"}\r\n          value={purchase_cost}\r\n          type={\"number\"}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"purchase_date\",\r\n      TextField: <DateRegister name={\"purchase_date\"} value={purchase_date} onChange={getDob} />,\r\n    },\r\n    {\r\n      name: \"minimum_stock_level\",\r\n      TextField: (\r\n        <UserInput\r\n          name={\"minimum_stock_level\"}\r\n          value={minimum_stock_level}\r\n          type={\"number\"}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"sort\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"sort\"}\r\n          value={sort}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"high-low\", \"low-high\", \"high-stock\", \"low-stock\", \"recent\", \"old\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n  const searchSupplies = suppliesDetails.filter((detail) =>\r\n    [\r\n      \"supply_name\",\r\n      \"category\",\r\n      \"quantity\",\r\n      \"status\",\r\n      \"storage_location\",\r\n      \"supplier\",\r\n      \"purchase_cost\",\r\n      \"purchase_date\",\r\n    ].includes(detail.name)\r\n  );\r\n  return { suppliesDetails, searchSupplies };\r\n};\r\nexport const useProductsInputs = () => {\r\n  const {\r\n    sort,\r\n    product_name,\r\n    product_type,\r\n    description,\r\n    quantity,\r\n    total_in_stock,\r\n    unit,\r\n    harvest_year,\r\n    packaging_type,\r\n    // available,\r\n    price,\r\n    priceRangePP,\r\n  } = useSelector((store) => store.products);\r\n  const dispatch = useDispatch();\r\n  const getDob = (e) => {\r\n    const { name, value } = e.target;\r\n    const formattedDate = convertToDateOnly(value.toISOString());\r\n    dispatch(handleDateProducts({ name, date: formattedDate }));\r\n  };\r\n  const getInput = (e) => {\r\n    const { name, value } = e.target;\r\n    // console.log(name, value);\r\n    const numericFields = [\"quantity\", \"price\", \"total_in_stock\"];\r\n    let processedValue = numericFields.includes(name) ? Number(value) : value;\r\n    if (numericFields.includes(name) && processedValue < 1) {\r\n      processedValue = 1;\r\n    }\r\n    dispatch(handleChangeProducts({ name, value: processedValue }));\r\n  };\r\n  const productDetails = [\r\n    {\r\n      name: \"product_name\",\r\n      TextField: (\r\n        <UserInput\r\n          name={\"product_name\"}\r\n          value={product_name}\r\n          type={\"name\"}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"product_type\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"product_type\"}\r\n          value={product_type}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"honey\", \"wax\", \"propolis\", \"royal jelly\", \"venom\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"description\",\r\n      TextField: (\r\n        <MultiLineInput\r\n          name={\"description\"}\r\n          value={description}\r\n          type={\"text\"}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"quantity\",\r\n      TextField: (\r\n        <UserInput name={\"quantity\"} value={quantity} type={\"number\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"total_in_stock\",\r\n      TextField: (\r\n        <UserInput\r\n          name={\"total_in_stock\"}\r\n          value={total_in_stock}\r\n          type={\"number\"}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"unit\",\r\n      TextField: <UserInput name={\"unit\"} value={unit} type={\"name\"} handleChange={getInput} />,\r\n    },\r\n    {\r\n      name: \"harvest_year\",\r\n      TextField: <DateRegister name={\"harvest_year\"} value={harvest_year} onChange={getDob} />,\r\n    },\r\n    {\r\n      name: \"packaging_type\",\r\n      TextField: (\r\n        <UserInput\r\n          name={\"packaging_type\"}\r\n          value={packaging_type}\r\n          type={\"name\"}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    // {\r\n    //   name: \"available\",\r\n    //   TextField: (\r\n    //     <GenderInput\r\n    //       name={\"available\"}\r\n    //       value={available}\r\n    //       type={\"text\"}\r\n    //       gender={[\"---\", \"available\", \"not available\"]}\r\n    //       handleChange={getInput}\r\n    //     />\r\n    //   ),\r\n    // },\r\n    {\r\n      name: \"price\",\r\n      TextField: <UserInput name={\"price\"} value={price} type={\"number\"} handleChange={getInput} />,\r\n    },\r\n    {\r\n      name: \"priceRangePP\",\r\n      TextField: (\r\n        <RangeSlider name={\"priceRangePP\"} value={priceRangePP} min={1000} max={100000} step={2000} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"sort\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"sort\"}\r\n          value={sort}\r\n          type={\"text\"}\r\n          gender={[\r\n            \"---\",\r\n            \"high-low\",\r\n            \"low-high\",\r\n            \"high-rating\",\r\n            \"low-rating\",\r\n            \"high-review\",\r\n            \"low-review\",\r\n            \"high-sell\",\r\n            \"low-sell\",\r\n          ]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n  // const searchSupplies = productDetails.filter((detail) =>\r\n  //   [\r\n  //     \"supply_name\",\r\n  //     \"category\",\r\n  //     \"quantity\",\r\n  //     \"status\",\r\n  //     \"storage_location\",\r\n  //     \"supplier\",\r\n  //     \"purchase_cost\",\r\n  //     \"purchase_date\",\r\n  //   ].includes(detail.name)\r\n  // );\r\n  return { productDetails };\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\n// prop-types is a library for typechecking of props.\r\nimport PropTypes from \"prop-types\";\r\n\r\n// @mui material components\r\nimport Card from \"@mui/material/Card\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Icon from \"@mui/material/Icon\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\n\r\n// Material Dashboard 2 React base styles\r\nimport breakpoints from \"assets/theme/base/breakpoints\";\r\n\r\n// Images\r\nimport burceMars from \"assets/images/bruce-mars.jpg\";\r\nimport backgroundImage from \"assets/images/bg-profile.jpeg\";\r\nimport { useUploadProductImages } from \"features/products/productthunk\";\r\nimport { InputFileUpload } from \"components copy\";\r\n\r\nfunction Header({ info, children }) {\r\n  const [tabsOrientation, setTabsOrientation] = useState(\"horizontal\");\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // A function that sets the orientation state of the tabs.\r\n    function handleTabsOrientation() {\r\n      return window.innerWidth < breakpoints.values.sm\r\n        ? setTabsOrientation(\"vertical\")\r\n        : setTabsOrientation(\"horizontal\");\r\n    }\r\n\r\n    /** \r\n     The event listener that's calling the handleTabsOrientation function when resizing the window.\r\n    */\r\n    window.addEventListener(\"resize\", handleTabsOrientation);\r\n\r\n    // Call the handleTabsOrientation function to set the state with the initial value.\r\n    handleTabsOrientation();\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleTabsOrientation);\r\n  }, [tabsOrientation]);\r\n\r\n  const handleSetTabValue = (event, newValue) => setTabValue(newValue);\r\n  const { image = \"\", product_name, price, colorArray, imageArray, id } = info;\r\n  const [color0, color1, color2] = colorArray;\r\n  const [image0, image1, image2] = imageArray;\r\n\r\n  // const { uploadProductImgs, isUploadingProductImages } = useUploadProductImages(id);\r\n  // const uploadProductImages = (e) => {\r\n  //   const files = e.target.files;\r\n  //   const formData = new FormData();\r\n  //   if (files.length > 0) {\r\n  //     // Loop through each file and append it to the FormData object\r\n  //     for (let i = 0; i < files.length; i++) {\r\n  //       formData.append(`image${i}`, files[i]); // \"images\" can be any key name you prefer\r\n  //     }\r\n  //     // Call the function to upload the images\r\n  //     uploadProductImgs(formData);\r\n  //     // console.log(files, formData);\r\n  //   } else {\r\n  //     alert(\"Please select at least one file to upload.\");\r\n  //   }\r\n  // };\r\n  return (\r\n    <MDBox position=\"relative\" mb={5}>\r\n      <MDBox\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        position=\"relative\"\r\n        minHeight=\"18.75rem\"\r\n        borderRadius=\"xl\"\r\n        sx={{\r\n          backgroundImage: ({ functions: { rgba, linearGradient }, palette: { gradients } }) =>\r\n            `${linearGradient(\r\n              rgba(gradients.info.main, 0.6),\r\n              rgba(gradients.info.state, 0.6)\r\n            )}, url(${backgroundImage})`,\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"50%\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      />\r\n      <Card\r\n        sx={{\r\n          position: \"relative\",\r\n          mt: -8,\r\n          mx: 3,\r\n          py: 2,\r\n          px: 2,\r\n        }}\r\n      >\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item>\r\n            <MDAvatar src={image} alt=\"profile-image\" size=\"xl\" shadow=\"sm\" />\r\n          </Grid>\r\n          <Grid item>\r\n            <MDBox height=\"100%\" mt={0.5} lineHeight={1}>\r\n              <MDTypography variant=\"h5\" fontWeight=\"medium\">\r\n                {product_name}\r\n              </MDTypography>\r\n              <MDTypography variant=\"button\" color=\"text\" fontWeight=\"regular\">\r\n                {price}\r\n              </MDTypography>\r\n            </MDBox>\r\n          </Grid>\r\n          <Grid\r\n            // style={{\r\n            //   display: \"flex\",\r\n            //   flexDirection: \"column\",\r\n            //   gap: \"4px\",\r\n            //   border: \"1px solid red\",\r\n            // }}\r\n            item\r\n            xs={12}\r\n            md={6}\r\n            lg={4}\r\n            sx={{ ml: \"auto\" }}\r\n          >\r\n            <AppBar position=\"static\">\r\n              <div style={{ display: \"flex\" }}>\r\n                <div\r\n                  style={{\r\n                    width: \"20px\",\r\n                    height: \"20px\",\r\n                    backgroundColor: color0,\r\n                    marginRight: \"5px\",\r\n                    borderRadius: \"50%\",\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  style={{\r\n                    width: \"20px\",\r\n                    height: \"20px\",\r\n                    backgroundColor: color1,\r\n                    marginRight: \"5px\",\r\n                    borderRadius: \"50%\",\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  style={{\r\n                    width: \"20px\",\r\n                    height: \"20px\",\r\n                    backgroundColor: color2,\r\n                    marginRight: \"5px\",\r\n                    borderRadius: \"50%\",\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            </AppBar>\r\n            <div style={{ display: \"flex\" }}>\r\n              <MDAvatar src={image1} alt=\"profile-image\" size=\"md\" shadow=\"sm\" />\r\n              <MDAvatar src={image2} alt=\"profile-image\" size=\"md\" shadow=\"sm\" />\r\n              {/* <InputFileUpload\r\n                name={\"product images\"}\r\n                handleChange={uploadProductImages}\r\n                uploading={isUploadingProductImages}\r\n              /> */}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        {children}\r\n      </Card>\r\n    </MDBox>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  info: {\r\n    image: \"\", // Fallback image URL\r\n    product_name: \"product Name\",\r\n    price: \"price\",\r\n  },\r\n  children: null,\r\n};\r\n\r\nHeader.propTypes = {\r\n  info: PropTypes.shape({\r\n    image: PropTypes.string,\r\n    product_name: PropTypes.string,\r\n    price: PropTypes.string,\r\n    id: PropTypes.string,\r\n    colorArray: PropTypes.arrayOf(PropTypes.string),\r\n    imageArray: PropTypes.arrayOf(PropTypes.string),\r\n  }),\r\n  children: PropTypes.node,\r\n};\r\nexport default Header;\r\n","import MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\nimport MDBadge from \"components/MDBadge\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport logoSlack from \"assets/images/small-logos/logo-slack.svg\";\r\nimport React from \"react\";\r\nimport { useProducts } from \"features/products/productthunk\";\r\nimport PropTypes from \"prop-types\";\r\nimport { setUpdateProduct } from \"features/products/productsSlice\";\r\nimport { useDeleteProduct } from \"features/products/productthunk\";\r\n\r\nexport default function productsTableData() {\r\n  const dispatch = useDispatch();\r\n  const { deleteProduct } = useDeleteProduct();\r\n  const {\r\n    isGettingAllProducts,\r\n    data: { totalProducts = 0, count = 0, numOfPages = 0, totalQuantity = [], products = [] } = {},\r\n    refetch,\r\n  } = useProducts();\r\n  const Author = ({ image, product_name, product_id }) => (\r\n    <MDBox display=\"flex\" alignItems=\"center\" lineHeight={1}>\r\n      <MDAvatar src={image} size=\"sm\" />\r\n      <MDBox ml={2} lineHeight={1}>\r\n        <MDTypography display=\"block\" variant=\"button\" fontWeight=\"medium\">\r\n          {`${product_id} `}\r\n        </MDTypography>\r\n        <MDTypography variant=\"caption\">{product_name}</MDTypography>\r\n      </MDBox>\r\n    </MDBox>\r\n  );\r\n  Author.propTypes = {\r\n    image: PropTypes.string.isRequired,\r\n    product_name: PropTypes.string.isRequired,\r\n    product_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  };\r\n  const Job = ({ title, description }) => (\r\n    <MDBox lineHeight={1} textAlign=\"left\">\r\n      <MDTypography display=\"block\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n        {`current stock: ${title}`}\r\n      </MDTypography>\r\n      <MDTypography variant=\"caption\">{`rating: ${description}`}</MDTypography>\r\n    </MDBox>\r\n  );\r\n  Job.propTypes = {\r\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n    description: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  };\r\n  const rows = products.map((item, i) => {\r\n    const {\r\n      product_id,\r\n      product_name,\r\n      product_type,\r\n      quantity,\r\n      unit,\r\n      price,\r\n      total_in_stock,\r\n      averageRating,\r\n      description,\r\n      harvest_year,\r\n      packaging_type,\r\n      numOfReviews,\r\n      numOfTimesSold,\r\n      product_images,\r\n      // available,\r\n      // product_colors,\r\n    } = item;\r\n    const { image0 } = product_images?.[0] || {};\r\n    const payload = {\r\n      product_id,\r\n      product_name,\r\n      product_type,\r\n      quantity,\r\n      unit,\r\n      price,\r\n      total_in_stock,\r\n      averageRating,\r\n      description,\r\n      harvest_year,\r\n      packaging_type,\r\n      numOfReviews,\r\n      numOfTimesSold,\r\n      // product_colors,\r\n      // available,\r\n      // product_images,\r\n    };\r\n\r\n    const handleEdit = () => {\r\n      dispatch(setUpdateProduct(payload));\r\n    };\r\n    const handleDelete = () => {\r\n      const confirmation = window.confirm(\r\n        \"You are about to Delete a product records permanently, ARE YOU SURE?\"\r\n      );\r\n      if (!confirmation) return;\r\n      deleteProduct(product_id);\r\n    };\r\n    return {\r\n      products: (\r\n        <Link to={`/products/${product_id}`}>\r\n          <Author image={image0} product_name={product_name} product_id={product_id} />,\r\n        </Link>\r\n      ),\r\n      type: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          <MDBox ml={-1}>\r\n            <MDBadge\r\n              badgeContent={product_type}\r\n              color={\r\n                product_type === \"honey\"\r\n                  ? \"success\"\r\n                  : product_type === \"wax\"\r\n                  ? \"primary\"\r\n                  : product_type === \"propolis\"\r\n                  ? \"secondary\"\r\n                  : product_type === \"royal jelly\"\r\n                  ? \"default\"\r\n                  : \"error\"\r\n              }\r\n              variant=\"gradient\"\r\n              size=\"sm\"\r\n            />\r\n          </MDBox>\r\n        </MDTypography>\r\n      ),\r\n      details: <Job title={total_in_stock} description={averageRating} />,\r\n      quantity: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          {`${quantity} ${unit}`}\r\n        </MDTypography>\r\n      ),\r\n      price: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          # {price}\r\n        </MDTypography>\r\n      ),\r\n      // status: (\r\n      //   <MDBox ml={-1}>\r\n      //     <MDBadge\r\n      //       badgeContent={available === true ? \"available\" : \"not available\"}\r\n      //       color={available === true ? \"success\" : \"error\"}\r\n      //       variant=\"gradient\"\r\n      //       size=\"sm\"\r\n      //     />\r\n      //   </MDBox>\r\n      // ),\r\n      update: (\r\n        <MDTypography component=\"a\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          <Link\r\n            onClick={() => {\r\n              handleEdit();\r\n            }}\r\n            to={`/createupdateproduct/${product_id}`}\r\n          >\r\n            Edit\r\n          </Link>\r\n        </MDTypography>\r\n      ),\r\n      remove: (\r\n        <MDTypography\r\n          component=\"a\"\r\n          variant=\"caption\"\r\n          color=\"text\"\r\n          fontWeight=\"medium\"\r\n          onClick={() => {\r\n            handleDelete();\r\n          }}\r\n        >\r\n          <Link>remove</Link>\r\n        </MDTypography>\r\n      ),\r\n    };\r\n  });\r\n  return {\r\n    columns: [\r\n      { Header: \"products\", accessor: \"products\", width: \"45%\", align: \"left\" },\r\n      { Header: \"type\", accessor: \"type\", align: \"left\" },\r\n      { Header: \"details\", accessor: \"details\", align: \"center\" },\r\n      { Header: \"quantity\", accessor: \"quantity\", align: \"center\" },\r\n      { Header: \"price\", accessor: \"price\", align: \"center\" },\r\n      // { Header: \"status\", accessor: \"status\", align: \"center\" },\r\n      { Header: \"update\", accessor: \"update\", align: \"center\" },\r\n      { Header: \"remove\", accessor: \"remove\", align: \"center\" },\r\n    ],\r\n    rows: rows,\r\n    numOfPages,\r\n    refetch,\r\n    count,\r\n    totalProducts,\r\n    totalQuantity,\r\n    isGettingAllProducts,\r\n  };\r\n}\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\n// import { BiSort } from \"react-icons/bi\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n// import styles from \"../../styles/components/deliveryaddressmodal.module.scss\";\r\n// import styles from \"../../\"\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { CustomButton } from \"../Button\";\r\n// import useRegister from \"../../hooks/register\";\r\n// import { resetValues } from \"../../features/users/userSlice\";\r\nimport { Loader1 } from \"../Loader\";\r\nimport { useDispatch } from \"react-redux\";\r\n// import useRegister from \"hooks/Register\";\r\nimport styles from \"../../layouts/styles/modal.module.scss\";\r\n// import { useThemeContext } from \"../../hooks/ThemeContext\";\r\n// import QueryOrder from \"../QueryOrder\";\r\n// import QueryProduct from \"./QueryProduct\";\r\nconst style = {\r\n  position: \"absolute\",\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function ProductSearchModal({ isGettingAllProducts }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  //   const { theme } = useThemeContext();\r\n  //   const isDarkMode = theme === \"dark-theme\";\r\n  return (\r\n    <div>\r\n      <div>\r\n        <SearchIcon\r\n          fontSize=\"medium\"\r\n          onClick={handleOpen}\r\n          sx={{ cursor: \"pointer\", fill: \"white\" }}\r\n          title=\"search\"\r\n        />\r\n      </div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={{ ...style, background: \"white\" }} className={styles.box}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            Search Products <CloseIcon style={{ cursor: \"pointer\" }} onClick={handleClose} />\r\n          </Typography>\r\n          <p>which Product are you looking for?</p>\r\n          <SearchProducts handleClose={handleClose} isGettingAllProducts={isGettingAllProducts} />\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst SearchProducts = ({ handleClose, isGettingAllProducts }) => {\r\n  const { productDetails } = useProductsInputs();\r\n  const dispatch = useDispatch();\r\n  const resetQuery = () => {\r\n    dispatch(resetValues());\r\n  };\r\n\r\n  return (\r\n    <form className={styles.paper}>\r\n      {productDetails\r\n        .filter(\r\n          (detail) =>\r\n            detail.name !== \"description\" && detail.name !== \"price\" && detail.name !== \"unit\"\r\n        )\r\n        .map((input) => {\r\n          const { name, TextField } = input;\r\n          return <div key={name}>{TextField}</div>;\r\n        })}\r\n      <CustomButton\r\n        background={\"inherit\"}\r\n        backgroundhover={\"grey\"}\r\n        height={\"8vh\"}\r\n        onClick={resetQuery}\r\n        type=\"button\"\r\n        style={{\r\n          width: \"100%\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        reset\r\n      </CustomButton>\r\n      <CustomButton\r\n        background={\"inherit\"}\r\n        backgroundhover={\"grey\"}\r\n        height={\"8vh\"}\r\n        onClick={() => handleClose()}\r\n        type=\"button\"\r\n        style={{\r\n          width: \"100%\",\r\n          // color: \"white\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        {isGettingAllProducts === \"pending\" ? <Loader1 color=\"success\" /> : \"Find Out\"}\r\n      </CustomButton>\r\n    </form>\r\n  );\r\n};\r\nimport PropTypes from \"prop-types\";\r\nimport { useProductsInputs } from \"hooks/DashDetails\";\r\nimport { resetValues } from \"features/products/productsSlice\";\r\n\r\n// Add prop validation for ProductSearchModal\r\nProductSearchModal.propTypes = {\r\n  isGettingAllProducts: PropTypes.string.isRequired,\r\n};\r\n\r\n// Add prop validation for SearchProducts\r\nSearchProducts.propTypes = {\r\n  handleClose: PropTypes.func.isRequired,\r\n  isGettingAllProducts: PropTypes.string.isRequired,\r\n};\r\n","import Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport React from \"react\";\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\nimport Footer from \"examples/Footer\";\r\nimport DataTable from \"examples/Tables/DataTable\";\r\n// Data\r\n// import employeesTableData from \"layouts/tables/data/employeesTableData\";\r\nimport projectsTableData from \"layouts/tables/data/projectsTableData\";\r\n// import { useSingleEmployee } from \"features/employees/employeesThunk\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Divider from \"@mui/material/Divider\";\r\n// @mui icons\r\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\r\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\r\nimport { Email } from \"@mui/icons-material\";\r\nimport ProfileInfoCard from \"examples/Cards/InfoCards/ProfileInfoCard\";\r\nimport ProfilesList from \"examples/Lists/ProfilesList\";\r\nimport DefaultProjectCard from \"examples/Cards/ProjectCards/DefaultProjectCard\";\r\nimport Header from \"./profile/components/Header\";\r\nimport PlatformSettings from \"./profile/components/PlatformSettings\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { useUploadEmployeeImages } from \"features/employees/employeesThunk\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CustomButton } from \"components copy\";\r\nimport { Loader1 } from \"components copy/Loader\";\r\nimport PaginationControlled from \"components copy/component's_Tables/Pagination\";\r\nimport LogoAsana from \"assets/images/small-logos/logo-asana.svg\";\r\nimport moment from \"moment\";\r\n// import { changePage } from \"features/pollination/polservicesSlice\";\r\n// import { resetValues } from \"features/pollination/polservicesSlice\";\r\n// import { usePolServiceInputs } from \"hooks/ServicesDetails\";\r\n// import { useUpdatePolServices } from \"features/pollination/polservicesThunk\";\r\n// import { useCreatePolServices } from \"features/pollination/polservicesThunk\";\r\n// import { PolServSearchModal } from \"components copy\";\r\n// import pollinationTableData from \"./data/productsTableData\";\r\nimport styles from \"../styles/thead.module.scss\";\r\nimport styling from \"../styles/createupdate.module.scss\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport productsTableData from \"./data/productsTableData\";\r\nimport { changePage } from \"features/products/productsSlice\";\r\nimport { resetValues } from \"features/products/productsSlice\";\r\nimport { useProductsInputs } from \"hooks/DashDetails\";\r\nimport ProductSearchModal from \"components copy/searchModals/ProductSearchModal\";\r\nimport { useUpdateProduct } from \"features/products/productthunk\";\r\nimport { useCreateProduct } from \"features/products/productthunk\";\r\nimport { useSinglProduct } from \"features/products/productthunk\";\r\nimport { useUploadProductImages } from \"features/products/productthunk\";\r\nimport { InputFileUpload } from \"components copy\";\r\nimport { ColorPicker } from \"components copy/TextField\";\r\nimport { updateProductColors } from \"features/products/productthunk\";\r\nfunction Products() {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    rows,\r\n    numOfPages,\r\n    refetch,\r\n    count,\r\n    columns,\r\n    totalProducts,\r\n    totalQuantity,\r\n    isGettingAllProducts,\r\n  } = productsTableData();\r\n  const {\r\n    sort,\r\n    pages,\r\n    product_id,\r\n    product_name,\r\n    product_type,\r\n    quantity,\r\n    unit,\r\n    price,\r\n    total_in_stock,\r\n    averageRating,\r\n    description,\r\n    harvest_year,\r\n    packaging_type,\r\n    numOfReviews,\r\n    numOfTimesSold,\r\n    priceRangePP,\r\n  } = useSelector((store) => store.products);\r\n  const handleChange = (event, value) => {\r\n    event.preventDefault();\r\n    dispatch(changePage(value));\r\n  };\r\n  React.useEffect(() => {\r\n    refetch();\r\n  }, [\r\n    pages,\r\n    product_id,\r\n    product_name,\r\n    product_type,\r\n    quantity,\r\n    unit,\r\n    price,\r\n    total_in_stock,\r\n    averageRating,\r\n    description,\r\n    harvest_year,\r\n    packaging_type,\r\n    numOfReviews,\r\n    numOfTimesSold,\r\n    sort,\r\n    priceRangePP,\r\n  ]);\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      <MDBox pt={6} pb={3}>\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <MDBox\r\n                mx={2}\r\n                mt={-3}\r\n                py={3}\r\n                px={2}\r\n                variant=\"gradient\"\r\n                bgColor=\"info\"\r\n                borderRadius=\"lg\"\r\n                coloredShadow=\"info\"\r\n              >\r\n                <MDTypography className={styles.wrapper} variant=\"h6\" color=\"white\">\r\n                  <MDBox className={styles.inner}>\r\n                    <MDTypography color=\"white\">Products</MDTypography>\r\n                    <MDTypography color=\"white\">\r\n                      {count}/{totalProducts}\r\n                    </MDTypography>\r\n                  </MDBox>\r\n                  <MDBox className={styles.inner}>\r\n                    <Link onClick={() => dispatch(resetValues())} to={`/createupdateproduct/add`}>\r\n                      <AddIcon\r\n                        sx={{ fill: \"white\" }}\r\n                        fontSize=\"medium\"\r\n                        titleAccess=\"add a new product\"\r\n                      />\r\n                    </Link>\r\n                    <ProductSearchModal isGettingAllProducts={isGettingAllProducts} />\r\n                  </MDBox>\r\n                </MDTypography>\r\n              </MDBox>\r\n              <MDBox pt={3}>\r\n                <DataTable\r\n                  table={{ columns, rows }}\r\n                  isSorted={false}\r\n                  entriesPerPage={false}\r\n                  showTotalEntries={false}\r\n                  noEndBorder\r\n                />\r\n              </MDBox>\r\n            </Card>\r\n            <PaginationControlled pageDetails={{ handleChange, numOfPages, pages }} />\r\n          </Grid>\r\n        </Grid>\r\n      </MDBox>\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n}\r\nexport default Products;\r\n\r\nexport const CreateUpdateProduct = () => {\r\n  const { id } = useParams();\r\n  const { productDetails } = useProductsInputs();\r\n  const { isUpdatingProduct, updateProduct } = useUpdateProduct();\r\n  const { createProduct, isCreatingProduct } = useCreateProduct();\r\n  const {\r\n    isEdit,\r\n    product_name,\r\n    product_type,\r\n    quantity,\r\n    unit,\r\n    price,\r\n    total_in_stock,\r\n    description,\r\n    harvest_year,\r\n    packaging_type,\r\n    // product_id,\r\n    // available,\r\n    // averageRating,\r\n    // product_images,\r\n    // numOfReviews,\r\n    // numOfTimesSold,\r\n    // product_colors,\r\n  } = useSelector((store) => store.products);\r\n  const productdetails = {\r\n    product_name,\r\n    product_type,\r\n    quantity,\r\n    unit,\r\n    price,\r\n    total_in_stock,\r\n    description,\r\n    harvest_year,\r\n    packaging_type,\r\n    // available,\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const isValid = Object.entries(productdetails).every(\r\n      ([key, value]) =>\r\n        key === \"harvest_year\" || (value !== undefined && value !== null && value !== \"\")\r\n    );\r\n\r\n    if (!isValid) {\r\n      alert(\"Please fill out all required fields.\");\r\n      return;\r\n    }\r\n\r\n    if (isEdit) {\r\n      return updateProduct({ productdetails, id });\r\n    }\r\n\r\n    createProduct(productdetails);\r\n  };\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      {/* <MDBox mb={2} /> */}\r\n      {/* <Header info={{ image, first_name, last_name, role }}> */}\r\n      <MDBox mt={5} mb={3}>\r\n        <Grid className={styling.wrapper} container spacing={1}>\r\n          {/* <Grid item xs={12} md={6} xl={4} sx={{ display: \"flex\" }}>\r\n            <Divider orientation=\"vertical\" sx={{ ml: -2, mr: 1 }} /> */}\r\n          <div>\r\n            <div>\r\n              <Link to=\"/products\">\r\n                <ArrowBackIcon />\r\n              </Link>\r\n              <h6>{isEdit ? `Update product ${product_name} details` : \"Create a new product\"} </h6>\r\n              <div></div>\r\n            </div>\r\n            <form className={styling.form} onSubmit={handleSubmit}>\r\n              {productDetails\r\n                .filter((detail) => detail.name !== \"sort\" && detail.name !== \"priceRangePP\")\r\n                .map((detail) => {\r\n                  const { name, TextField } = detail;\r\n                  return <div key={name}>{TextField}</div>;\r\n                })}\r\n              <CustomButton\r\n                background={\"inherit\"}\r\n                backgroundhover={\"grey\"}\r\n                size={\"100%\"}\r\n                height={\"3vh\"}\r\n                type=\"submit\"\r\n                // disabled={!isValid}\r\n              >\r\n                {isCreatingProduct === \"pending\" || isUpdatingProduct === \"pending\" ? (\r\n                  <Loader1 />\r\n                ) : isEdit ? (\r\n                  \"Update\"\r\n                ) : (\r\n                  \"Submit\"\r\n                )}\r\n              </CustomButton>\r\n            </form>\r\n          </div>\r\n          {/* <Divider orientation=\"vertical\" sx={{ mx: 0 }} />\r\n          </Grid> */}\r\n        </Grid>\r\n      </MDBox>\r\n      {/* </Header> */}\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n};\r\n\r\nexport function SingleProduct() {\r\n  const { id } = useParams();\r\n  const { isGettingSingleProduct, singleproduct, refetch } = useSinglProduct(id);\r\n  const { uploadProductImgs, isUploadingProductImages } = useUploadProductImages(id);\r\n  const { isUpdatingColor } = updateProductColors(id);\r\n  const { product } = singleproduct || {};\r\n  // console.log(product);\r\n  const {\r\n    product_id,\r\n    product_name,\r\n    product_type,\r\n    description,\r\n    quantity,\r\n    unit,\r\n    price,\r\n    total_in_stock,\r\n    harvest_year,\r\n    packaging_type,\r\n    averageRating,\r\n    numOfReviews,\r\n    numOfTimesSold,\r\n    product_images,\r\n    product_colors,\r\n  } = product ?? {};\r\n  const { image0, image1, image2 } = product_images?.[0] || {};\r\n  const { color0, color1, color2 } = product_colors?.[0] || {};\r\n  const colorArray = [color0, color1, color2];\r\n  const imageArray = [image0, image1, image2];\r\n\r\n  const uploadProductImages = (e) => {\r\n    const files = e.target.files;\r\n    const formData = new FormData();\r\n    if (files.length > 0) {\r\n      // Loop through each file and append it to the FormData object\r\n      for (let i = 0; i < files.length; i++) {\r\n        formData.append(`image${i}`, files[i]); // \"images\" can be any key name you prefer\r\n      }\r\n      // Call the function to upload the images\r\n      uploadProductImgs(formData);\r\n    } else {\r\n      alert(\"Please select at least one file to upload.\");\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    refetch();\r\n  }, [id, isUploadingProductImages, isUpdatingColor]);\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      <MDBox mb={2} />\r\n      <Header info={{ image: image0, product_name, price, colorArray, imageArray, id }}>\r\n        <MDBox mt={5} mb={3}>\r\n          <div\r\n            style={{\r\n              // border: \"1px solid red\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Link to=\"/products\">\r\n              <ArrowBackIcon />\r\n            </Link>\r\n            <ColorPicker color_id={id} />\r\n            <InputFileUpload\r\n              name={\"product images\"}\r\n              handleChange={uploadProductImages}\r\n              uploading={isUploadingProductImages}\r\n            />\r\n          </div>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} md={6} xl={4} sx={{ display: \"flex\" }}>\r\n              <Divider orientation=\"vertical\" sx={{ ml: -2, mr: 1 }} />\r\n              <ProfileInfoCard\r\n                title=\"\"\r\n                description=\"\"\r\n                info={{\r\n                  product_id,\r\n                  product_name,\r\n                  product_type,\r\n                  quantity,\r\n                  unit,\r\n                }}\r\n                shadow={false}\r\n              />\r\n              <Divider orientation=\"vertical\" sx={{ mx: 0 }} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6} xl={4} sx={{ display: \"flex\" }}>\r\n              <Divider orientation=\"vertical\" sx={{ ml: -2, mr: 1 }} />\r\n              <ProfileInfoCard\r\n                title=\"\"\r\n                description=\"\"\r\n                info={{\r\n                  price,\r\n                  total_in_stock,\r\n                  harvest_year,\r\n                  packaging_type,\r\n                  averageRating,\r\n                }}\r\n                shadow={false}\r\n              />\r\n              <Divider orientation=\"vertical\" sx={{ mx: 0 }} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6} xl={4} sx={{ display: \"flex\" }}>\r\n              <Divider orientation=\"vertical\" sx={{ ml: -2, mr: 1 }} />\r\n              <ProfileInfoCard\r\n                title=\"\"\r\n                description=\"\"\r\n                info={{\r\n                  numOfReviews,\r\n                  numOfTimesSold,\r\n                  description,\r\n                }}\r\n                shadow={false}\r\n              />\r\n              <Divider orientation=\"vertical\" sx={{ mx: 0 }} />\r\n            </Grid>\r\n          </Grid>\r\n        </MDBox>\r\n      </Header>\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n}\r\n"],"names":["useDashDetails_1","dispatch","useDispatch","station_name","supervisor_int","supervisor_ext","location","longitude","latitude","station_size","number_of_hive_boxes","status","station_maintainace_history","last_inspection_date","next_inspection_date","notes","sort","useSelector","store","stations","getInput","e","name","value","target","numericFields","processedValue","includes","Number","handelChange","getDob","formattedDate","convertToDateOnly","toISOString","handleDob","date","station_details","TextField","_jsx","UserInput","type","handleChange","GenderInput","gender","MultiLineInput","DateRegister","onChange","searchStations","filter","detail","useEquipments","tool_name","category","quantity","storage_location","supplier","purchase_date","purchase_cost","currency","last_maintanace_date","next_maintanace_date","retired","note","equipments","handleDate","handleChangeEquip","equipmentDetails","searchEquipments","useSuppliesInputs","supply_name","minimum_stock_level","supplies","handleChangeSupp","suppliesDetails","handleDateSupp","searchSupplies","useProductsInputs","product_name","product_type","description","total_in_stock","unit","harvest_year","packaging_type","price","priceRangePP","products","handleChangeProducts","productDetails","handleDateProducts","RangeSlider","min","max","step","Header","_ref","info","children","tabsOrientation","setTabsOrientation","useState","tabValue","setTabValue","useEffect","handleTabsOrientation","window","innerWidth","breakpoints","values","sm","addEventListener","removeEventListener","image","colorArray","imageArray","id","color0","color1","color2","image0","image1","image2","_jsxs","MDBox","position","mb","display","alignItems","minHeight","borderRadius","sx","backgroundImage","_ref2","functions","rgba","linearGradient","palette","gradients","main","state","backgroundSize","backgroundPosition","overflow","Card","mt","mx","py","px","Grid","container","spacing","item","MDAvatar","src","alt","size","shadow","height","lineHeight","MDTypography","variant","fontWeight","color","xs","md","lg","ml","AppBar","style","width","backgroundColor","marginRight","defaultProps","productsTableData","deleteProduct","useDeleteProduct","isGettingAllProducts","data","totalProducts","count","numOfPages","totalQuantity","refetch","useProducts","Author","product_id","Job","title","textAlign","columns","accessor","align","rows","map","i","averageRating","numOfReviews","numOfTimesSold","product_images","payload","Link","to","component","href","MDBadge","badgeContent","details","update","onClick","setUpdateProduct","remove","confirm","bgcolor","boxShadow","p","ProductSearchModal","open","setOpen","React","handleClose","SearchIcon","fontSize","handleOpen","cursor","fill","Modal","onClose","Box","background","className","styles","box","Typography","CloseIcon","SearchProducts","paper","input","CustomButton","backgroundhover","resetQuery","resetValues","Loader1","pages","DashboardLayout","DashboardNavbar","pt","pb","bgColor","coloredShadow","wrapper","inner","AddIcon","titleAccess","DataTable","table","isSorted","entriesPerPage","showTotalEntries","noEndBorder","PaginationControlled","pageDetails","event","preventDefault","changePage","Footer","CreateUpdateProduct","useParams","isUpdatingProduct","updateProduct","useUpdateProduct","createProduct","isCreatingProduct","useCreateProduct","isEdit","productdetails","styling","ArrowBackIcon","form","onSubmit","Object","entries","every","key","undefined","alert","SingleProduct","isGettingSingleProduct","singleproduct","useSinglProduct","uploadProductImgs","isUploadingProductImages","useUploadProductImages","isUpdatingColor","updateProductColors","product","product_colors","justifyContent","ColorPicker","color_id","InputFileUpload","files","formData","FormData","length","append","uploading","xl","Divider","orientation","mr","ProfileInfoCard"],"sourceRoot":""}