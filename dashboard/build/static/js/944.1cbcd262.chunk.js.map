{"version":3,"file":"static/js/944.1cbcd262.chunk.js","mappings":"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","sources":["layouts/noks/profile/components/Header/index.js","layouts/noks/data/nokTableData.js","components copy/searchModals/NokSearchModal.jsx","layouts/noks/index.js"],"sourcesContent":["/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// prop-types is a library for typechecking of props.\r\nimport PropTypes from \"prop-types\";\r\n\r\n// @mui material components\r\nimport Card from \"@mui/material/Card\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Icon from \"@mui/material/Icon\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\n\r\n// Material Dashboard 2 React base styles\r\nimport breakpoints from \"assets/theme/base/breakpoints\";\r\n\r\n// Images\r\nimport burceMars from \"assets/images/bruce-mars.jpg\";\r\nimport backgroundImage from \"assets/images/bg-profile.jpeg\";\r\n\r\nfunction Header({ info, children }) {\r\n  const [tabsOrientation, setTabsOrientation] = useState(\"horizontal\");\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // A function that sets the orientation state of the tabs.\r\n    function handleTabsOrientation() {\r\n      return window.innerWidth < breakpoints.values.sm\r\n        ? setTabsOrientation(\"vertical\")\r\n        : setTabsOrientation(\"horizontal\");\r\n    }\r\n\r\n    /** \r\n     The event listener that's calling the handleTabsOrientation function when resizing the window.\r\n    */\r\n    window.addEventListener(\"resize\", handleTabsOrientation);\r\n\r\n    // Call the handleTabsOrientation function to set the state with the initial value.\r\n    handleTabsOrientation();\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleTabsOrientation);\r\n  }, [tabsOrientation]);\r\n\r\n  const handleSetTabValue = (event, newValue) => setTabValue(newValue);\r\n  const { image = \"\", station_name, location } = info;\r\n\r\n  return (\r\n    <MDBox position=\"relative\" mb={5}>\r\n      <MDBox\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        position=\"relative\"\r\n        minHeight=\"18.75rem\"\r\n        borderRadius=\"xl\"\r\n        sx={{\r\n          backgroundImage: ({ functions: { rgba, linearGradient }, palette: { gradients } }) =>\r\n            `${linearGradient(\r\n              rgba(gradients.info.main, 0.6),\r\n              rgba(gradients.info.state, 0.6)\r\n            )}, url(${backgroundImage})`,\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"50%\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      />\r\n      <Card\r\n        sx={{\r\n          position: \"relative\",\r\n          mt: -8,\r\n          mx: 3,\r\n          py: 2,\r\n          px: 2,\r\n        }}\r\n      >\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item>\r\n            <MDAvatar src={image} alt=\"profile-image\" size=\"xl\" shadow=\"sm\" />\r\n          </Grid>\r\n          <Grid item>\r\n            <MDBox height=\"100%\" mt={0.5} lineHeight={1}>\r\n              <MDTypography variant=\"h5\" fontWeight=\"medium\">\r\n                {station_name}\r\n              </MDTypography>\r\n              <MDTypography variant=\"button\" color=\"text\" fontWeight=\"regular\">\r\n                {location}\r\n              </MDTypography>\r\n            </MDBox>\r\n          </Grid>\r\n          {/* <Grid item xs={12} md={6} lg={4} sx={{ ml: \"auto\" }}>\r\n            <AppBar position=\"static\">\r\n              <Tabs orientation={tabsOrientation} value={tabValue} onChange={handleSetTabValue}>\r\n                <Tab\r\n                  label=\"App\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      home\r\n                    </Icon>\r\n                  }\r\n                />\r\n                <Tab\r\n                  label=\"Message\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      email\r\n                    </Icon>\r\n                  }\r\n                />\r\n                <Tab\r\n                  label=\"Settings\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      settings\r\n                    </Icon>\r\n                  }\r\n                />\r\n              </Tabs>\r\n            </AppBar>\r\n          </Grid> */}\r\n        </Grid>\r\n        {children}\r\n      </Card>\r\n    </MDBox>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  info: {\r\n    image: \"\", // Fallback image URL\r\n    station_name: \"First Name\",\r\n    location: \"Last Name\",\r\n  },\r\n  children: null,\r\n};\r\n\r\nHeader.propTypes = {\r\n  info: PropTypes.shape({\r\n    image: PropTypes.string,\r\n    station_name: PropTypes.string,\r\n    location: PropTypes.string,\r\n  }),\r\n  children: PropTypes.node,\r\n};\r\nexport default Header;\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable react/function-component-definition */\r\n/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\nimport MDBadge from \"components/MDBadge\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport React from \"react\";\r\n// import { useStations } from \"features/stations/stationsThunk\";\r\n// import { setUpdateStation } from \"features/stations/stationSlice\";\r\nimport logoAtlassian from \"assets/images/small-logos/logo-atlassian.svg\";\r\nimport { useAllNok } from \"features/nok/nokThunk\";\r\nimport { useDeleteNok } from \"features/nok/nokThunk\";\r\nimport { setUpdateNok } from \"features/nok/nokSlice\";\r\nexport default function nokTableData() {\r\n   const { deleteNok } = useDeleteNok();\r\n   const dispatch = useDispatch();\r\n  const {\r\n    isGettingAllNok,\r\n    refetch,\r\n    noks: {\r\n      employeesNOK = [],\r\n      genderTypeCount = [],\r\n      numOfPages,\r\n      totalEmployeesNOK = 0,\r\n      count = 0,\r\n      relationshipTypeCount = [],\r\n    } = {},\r\n  } = useAllNok();\r\n  const Author = ({ image, name, email, nok_id }) => (\r\n    <MDBox display=\"flex\" alignItems=\"center\" lineHeight={1}>\r\n      <MDAvatar src={image} name={name} size=\"sm\" />\r\n      <MDBox ml={2} lineHeight={1}>\r\n        <MDTypography display=\"block\" variant=\"button\" fontWeight=\"medium\">\r\n          <Link>{`${nok_id} ${name}`}</Link>\r\n        </MDTypography>\r\n        <MDTypography variant=\"caption\">{email}</MDTypography>\r\n      </MDBox>\r\n    </MDBox>\r\n  );\r\n \r\n  const rows = employeesNOK.map((nok, i) => {\r\n    const { nok_id, emp_id, fullname, email, address, phone, gender, relationship } = nok;\r\n    const payload = {\r\n      nok_id,\r\n      emp_id,\r\n      fullname,\r\n      email,\r\n      address,\r\n      phone,\r\n      gender,\r\n      relationship,\r\n    };\r\n    const handleEdit = () => {\r\n      dispatch(setUpdateNok(payload));\r\n    };\r\n    const handleDelete = () => {\r\n      const confirmation = window.confirm(\r\n        \"You are about to Delete an next of kin records permanently, ARE YOU SURE?\"\r\n      );\r\n      if (!confirmation) return;\r\n      deleteNok(nok_id);\r\n    };\r\n    return {\r\n      nok: <Author image={logoAtlassian} name={fullname} email={email} nok_id={nok_id} />,\r\n      employee: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          <Link to={`/employees/${emp_id}`}>{emp_id}</Link>\r\n        </MDTypography>\r\n      ),\r\n      address: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          {address}\r\n        </MDTypography>\r\n      ),\r\n      phone: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          {phone}\r\n        </MDTypography>\r\n      ),\r\n      gender: (\r\n        <MDBox ml={-1}>\r\n          <MDBadge\r\n            badgeContent={gender}\r\n            color={gender === \"male\" ? \"success\" : \"warning\"}\r\n            variant=\"gradient\"\r\n            size=\"sm\"\r\n          />\r\n        </MDBox>\r\n      ),\r\n      relationship: (\r\n        <MDBox ml={-1}>\r\n          <MDBadge\r\n            badgeContent={relationship}\r\n            color={\r\n              relationship === \"spouse\"\r\n                ? \"success\"\r\n                : relationship === \"parent\"\r\n                ? \"warning\"\r\n                : relationship === \"guidance\"\r\n                ? \"error\"\r\n                : \"info\"\r\n            }\r\n            variant=\"gradient\"\r\n            size=\"sm\"\r\n          />\r\n        </MDBox>\r\n      ),\r\n      update: (\r\n        <MDTypography component=\"a\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          <Link\r\n            onClick={() => {\r\n              handleEdit();\r\n            }}\r\n            to={`/createupdatenok/${nok_id}`}\r\n          >\r\n            Edit\r\n          </Link>\r\n        </MDTypography>\r\n      ),\r\n      remove: (\r\n        <MDTypography component=\"a\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          <Link\r\n            onClick={() => {\r\n              handleDelete();\r\n            }}\r\n          >\r\n            remove\r\n          </Link>\r\n        </MDTypography>\r\n      ),\r\n    };\r\n  });\r\n  return {\r\n    columns: [\r\n      { Header: \"nok\", accessor: \"nok\", width: \"45%\", align: \"left\" },\r\n      { Header: \"employee\", accessor: \"employee\", width: \"45%\", align: \"left\" },\r\n      { Header: \"address\", accessor: \"address\", align: \"left\" },\r\n      { Header: \"phone\", accessor: \"phone\", align: \"center\" },\r\n      { Header: \"gender\", accessor: \"gender\", align: \"center\" },\r\n      { Header: \"relationship\", accessor: \"relationship\", align: \"center\" },\r\n      { Header: \"update\", accessor: \"update\", align: \"center\" },\r\n      { Header: \"remove\", accessor: \"remove\", align: \"center\" },\r\n    ],\r\n    rows: rows,\r\n    isGettingAllNok,\r\n    employeesNOK,\r\n    genderTypeCount,\r\n    numOfPages,\r\n    totalEmployeesNOK,\r\n    count,\r\n    relationshipTypeCount,\r\n    refetch,\r\n  };\r\n}\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { BiSort } from \"react-icons/bi\";\r\n// import styles from \"../../styles/components/deliveryaddressmodal.module.scss\";\r\n// import styles from \"../../\"\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { CustomButton } from \"../Button\";\r\n// import { useEmployee } from \"../../hooks/register\";\r\nimport { Loader1 } from \"../Loader\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { resetValues } from \"../../features/nok/nokSlice\";\r\nimport { useNok } from \"../../hooks/DashDetails_2\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport styles from \"../../layouts/styles/modal.module.scss\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function NokSearchModal({ isGettingAllNok }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  //   const { theme } = useThemeContext();\r\n  //   const isDarkMode = theme === \"dark-theme\";\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div>\r\n        <SearchIcon\r\n          fontSize=\"medium\"\r\n          onClick={handleOpen}\r\n          sx={{ cursor: \"pointer\", fill: \"white\" }}\r\n          title=\"search\"\r\n        />\r\n      </div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={{ ...style, background: \"white\" }} className={styles.box}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            Search Next of Kin <CloseIcon style={{ cursor: \"pointer\" }} onClick={handleClose} />\r\n          </Typography>\r\n          <p>which NOK are you looking for?</p>\r\n          <SearchNok handleClose={handleClose} isGettingAllNok={isGettingAllNok} />\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst SearchNok = ({ handleClose, isGettingAllNok }) => {\r\n  const { nokDetails } = useNok();\r\n  const dispatch = useDispatch();\r\n  const resetQuery = () => {\r\n    dispatch(resetValues());\r\n  };\r\n\r\n  return (\r\n    <form className={styles.paper}>\r\n      {nokDetails\r\n        .filter((detail) => detail.name != \"address\")\r\n        .map((input) => {\r\n          const { name, TextField } = input;\r\n          return <div key={name}>{TextField}</div>;\r\n        })}\r\n      <CustomButton\r\n        background={\"inherit\"}\r\n        backgroundhover={\"grey\"}\r\n        height={\"8vh\"}\r\n        onClick={resetQuery}\r\n        type=\"button\"\r\n        style={{\r\n          width: \"100%\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        reset\r\n      </CustomButton>\r\n      <CustomButton\r\n        background={\"inherit\"}\r\n        backgroundhover={\"grey\"}\r\n        height={\"8vh\"}\r\n        onClick={() => handleClose()}\r\n        type=\"button\"\r\n        style={{\r\n          width: \"100%\",\r\n\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        {isGettingAllNok === \"pending\" ? <Loader1 color=\"success\" /> : \"Find Out\"}\r\n      </CustomButton>\r\n    </form>\r\n  );\r\n};\r\nimport PropTypes from \"prop-types\";\r\n\r\nNokSearchModal.propTypes = {\r\n  isGettingAllNok: PropTypes.string.isRequired,\r\n};\r\n\r\nSearchNok.propTypes = {\r\n  handleClose: PropTypes.func.isRequired,\r\n  isGettingAllNok: PropTypes.string.isRequired,\r\n};\r\n","import Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport React from \"react\";\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\nimport Footer from \"examples/Footer\";\r\nimport DataTable from \"examples/Tables/DataTable\";\r\n// Data\r\n// import employeesTableData from \"layouts/tables/data/employeesTableData\";\r\nimport projectsTableData from \"layouts/tables/data/projectsTableData\";\r\n// import { useSingleEmployee } from \"features/employees/employeesThunk\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Divider from \"@mui/material/Divider\";\r\n// @mui icons\r\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\r\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\r\nimport { Email } from \"@mui/icons-material\";\r\nimport ProfileInfoCard from \"examples/Cards/InfoCards/ProfileInfoCard\";\r\nimport ProfilesList from \"examples/Lists/ProfilesList\";\r\nimport DefaultProjectCard from \"examples/Cards/ProjectCards/DefaultProjectCard\";\r\nimport Header from \"./profile/components/Header\";\r\nimport PlatformSettings from \"./profile/components/PlatformSettings\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { useUploadEmployeeImages } from \"features/employees/employeesThunk\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CustomButton } from \"components copy\";\r\nimport { Loader1 } from \"components copy/Loader\";\r\nimport PaginationControlled from \"components copy/component's_Tables/Pagination\";\r\n// import stationTableData from \"./data/nokTableData\";\r\n// import { changePage } from \"features/stations/stationSlice\";\r\n// import { resetValues } from \"features/stations/stationSlice\";\r\n// import StationSearchModal from \"components copy/searchModals/StationSearchModal\";\r\n// import { useSingleStation } from \"features/stations/stationsThunk\";\r\n// import LogoAsana from \"assets/images/small-logos/logo-asana.svg\";\r\nimport moment from \"moment\";\r\n// import { useDashDetails_1 } from \"hooks/DashDetails\";\r\n// import { useCreateStation } from \"features/stations/stationsThunk\";\r\n// import { useUpdateStation } from \"features/stations/stationsThunk\";\r\nimport nokTableData from \"./data/nokTableData\";\r\nimport { changePage } from \"features/nok/nokSlice\";\r\nimport NokSearchModal from \"components copy/searchModals/NokSearchModal\";\r\nimport { useCreateNok } from \"features/nok/nokThunk\";\r\nimport { useUpdateNok } from \"features/nok/nokThunk\";\r\nimport { useNok } from \"hooks/DashDetails_2\";\r\nimport { resetValues } from \"features/nok/nokSlice\";\r\nimport styles from \"../styles/thead.module.scss\";\r\nimport styling from \"../styles/createupdate.module.scss\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { Icon } from \"@mui/material\";\r\n\r\nfunction Noks() {\r\n  const {\r\n    isGettingAllNok = false, // Default value to prevent errors\r\n    employeesNOK = [], // Ensure default is an empty array\r\n    genderTypeCount = 0,\r\n    numOfPages = 1,\r\n    totalEmployeesNOK = 0,\r\n    count = 0,\r\n    relationshipTypeCount = 0,\r\n    refetch,\r\n    columns = [], // Default to an empty array\r\n    rows = [], // Default to an empty array\r\n  } = nokTableData() || {}; // Ensure nokTableData() returns something\r\n\r\n  const {\r\n    pages = 1,\r\n    emp_id,\r\n    fullname,\r\n    email,\r\n    address,\r\n    phone,\r\n    gender,\r\n    relationship,\r\n    sort,\r\n  } = useSelector((store) => store.noks) || {};\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (event, value) => {\r\n    event.preventDefault();\r\n    dispatch(changePage(value));\r\n  };\r\n\r\n  // Always call useEffect unconditionally\r\n  React.useEffect(() => {\r\n    if (refetch) {\r\n      refetch();\r\n    }\r\n  }, [emp_id, fullname, email, address, phone, gender, relationship, pages, sort, refetch]);\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      <MDBox pt={6} pb={3}>\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <MDBox\r\n                mx={2}\r\n                mt={-3}\r\n                py={3}\r\n                px={2}\r\n                variant=\"gradient\"\r\n                bgColor=\"info\"\r\n                borderRadius=\"lg\"\r\n                coloredShadow=\"info\"\r\n              >\r\n                <MDTypography className={styles.wrapper} variant=\"h6\" color=\"white\">\r\n                  <MDBox className={styles.inner}>\r\n                    <MDTypography color=\"white\">Next of Kin</MDTypography>\r\n                    <MDTypography color=\"white\">\r\n                      {count}/{totalEmployeesNOK}\r\n                    </MDTypography>\r\n                  </MDBox>\r\n                  <MDBox className={styles.inner}>\r\n                    <Link onClick={() => dispatch(resetValues())} to=\"/createupdatenok/add\">\r\n                      <AddIcon\r\n                        sx={{ fill: \"white\" }}\r\n                        fontSize=\"medium\"\r\n                        titleAccess=\"add next of kin\"\r\n                      />\r\n                    </Link>\r\n                    <NokSearchModal isGettingAllNok={isGettingAllNok} />\r\n                  </MDBox>\r\n                </MDTypography>\r\n              </MDBox>\r\n              <MDBox pt={3}>\r\n                <DataTable\r\n                  table={{ columns, rows }}\r\n                  isSorted={false}\r\n                  entriesPerPage={false}\r\n                  showTotalEntries={false}\r\n                  noEndBorder\r\n                />\r\n              </MDBox>\r\n            </Card>\r\n            <PaginationControlled pageDetails={{ handleChange, numOfPages, pages }} />\r\n          </Grid>\r\n        </Grid>\r\n      </MDBox>\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\nexport default Noks;\r\n\r\nexport const CreateUpdateNok = () => {\r\n  const { id } = useParams();\r\n  const { createNok, isCreatingNok } = useCreateNok();\r\n  const { updateNok, isUpdatingNok } = useUpdateNok();\r\n  const { nokDetails: nokInput } = useNok();\r\n  const { emp_id, fullname, email, address, phone, gender, relationship, isEdit } = useSelector(\r\n    (store) => store.noks\r\n  );\r\n  const nokDetails = {\r\n    emp_id,\r\n    fullname,\r\n    email,\r\n    address,\r\n    phone,\r\n    gender,\r\n    relationship,\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = Object.values(nokDetails).every(\r\n      (value) => value !== undefined && value !== null && value !== \"\"\r\n    );\r\n    if (!isValid) {\r\n      alert(\"Please fill out all required fields.\");\r\n      return;\r\n    }\r\n    if (isEdit) return updateNok({ nokDetails, id });\r\n    createNok(nokDetails);\r\n  };\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      {/* <MDBox mb={2} /> */}\r\n      {/* <Header info={{ image, first_name, last_name, role }}> */}\r\n      <MDBox mt={5} mb={3}>\r\n        <Grid className={styling.wrapper} container spacing={1}>\r\n          {/* <Grid item xs={12} md={6} xl={4} sx={{ display: \"flex\" }}>\r\n            <Divider orientation=\"vertical\" sx={{ ml: -2, mr: 1 }} /> */}\r\n          <div>\r\n            {/* <Link to=\"/noks\">Go back</Link> */}\r\n            <div>\r\n              <Link to=\"/noks\">\r\n                <ArrowBackIcon />\r\n              </Link>\r\n              <h6>{isEdit ? `Update ${fullname} details` : \"Create Next Of Kin\"} </h6>\r\n              <div></div>\r\n            </div>\r\n            <form className={styling.form} onSubmit={handleSubmit}>\r\n              {nokInput\r\n                .filter((detail) => detail.name !== \"sort\")\r\n                .map((detail) => {\r\n                  const { name, TextField } = detail;\r\n                  return <div key={name}>{TextField}</div>;\r\n                })}\r\n              <CustomButton\r\n                background={\"inherit\"}\r\n                backgroundhover={\"grey\"}\r\n                size={\"100%\"}\r\n                height={\"3vh\"}\r\n                type=\"submit\"\r\n                // disabled={!isValid}\r\n              >\r\n                {isCreatingNok === \"pendiNokuseCreateNok \" || isUpdatingNok === \"pending\" ? (\r\n                  <Loader1 />\r\n                ) : isEdit ? (\r\n                  \"Update\"\r\n                ) : (\r\n                  \"Submit\"\r\n                )}\r\n              </CustomButton>\r\n            </form>\r\n          </div>\r\n          {/* <Divider orientation=\"vertical\" sx={{ mx: 0 }} /> */}\r\n          {/* </Grid> */}\r\n        </Grid>\r\n      </MDBox>\r\n      {/* </Header> */}\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n};\r\n"],"names":["Header","_ref","info","children","tabsOrientation","setTabsOrientation","useState","tabValue","setTabValue","useEffect","handleTabsOrientation","window","innerWidth","breakpoints","values","sm","addEventListener","removeEventListener","image","station_name","location","_jsxs","MDBox","position","mb","_jsx","display","alignItems","minHeight","borderRadius","sx","backgroundImage","_ref2","functions","rgba","linearGradient","palette","gradients","main","state","backgroundSize","backgroundPosition","overflow","Card","mt","mx","py","px","Grid","container","spacing","item","MDAvatar","src","alt","size","shadow","height","lineHeight","MDTypography","variant","fontWeight","color","defaultProps","nokTableData","deleteNok","useDeleteNok","dispatch","useDispatch","isGettingAllNok","refetch","noks","employeesNOK","genderTypeCount","numOfPages","totalEmployeesNOK","count","relationshipTypeCount","useAllNok","Author","name","email","nok_id","ml","Link","columns","accessor","width","align","rows","map","nok","i","emp_id","fullname","address","phone","gender","relationship","payload","logoAtlassian","employee","component","href","to","MDBadge","badgeContent","update","onClick","setUpdateNok","remove","confirm","style","bgcolor","boxShadow","p","NokSearchModal","open","setOpen","React","handleClose","className","styles","wrapper","SearchIcon","fontSize","handleOpen","cursor","fill","title","Modal","onClose","Box","background","box","Typography","id","CloseIcon","SearchNok","nokDetails","useNok","paper","filter","detail","input","TextField","CustomButton","backgroundhover","resetQuery","resetValues","type","Loader1","pages","sort","useSelector","store","DashboardLayout","DashboardNavbar","pt","pb","xs","bgColor","coloredShadow","inner","AddIcon","titleAccess","DataTable","table","isSorted","entriesPerPage","showTotalEntries","noEndBorder","PaginationControlled","pageDetails","handleChange","event","value","preventDefault","changePage","Footer","CreateUpdateNok","useParams","createNok","isCreatingNok","useCreateNok","updateNok","isUpdatingNok","useUpdateNok","nokInput","isEdit","styling","ArrowBackIcon","form","onSubmit","e","Object","every","undefined","alert"],"sourceRoot":""}