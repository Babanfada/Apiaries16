{"version":3,"file":"static/js/11.9662a333.chunk.js","mappings":"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","sources":["examples/LayoutContainers/PageLayout/index.js","examples/Navbars/DefaultNavbar/DefaultNavbarLink.js","examples/Navbars/DefaultNavbar/DefaultNavbarMobile.js","examples/Navbars/DefaultNavbar/index.js","layouts/authentication/components/BasicLayout/index.js","layouts/authentication/components/Footer/index.js","../node_modules/.pnpm/@mui+system@5.16.7_@emotion+react@11.10.8_@emotion+styled@11.10.8_react@18.2.0/node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/.pnpm/@mui+material@5.12.3_@emotion+react@11.10.8_@emotion+styled@11.10.8_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Container/Container.js"],"sourcesContent":["/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nimport { useEffect } from \"react\";\r\n\r\n// react-router-dom components\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n// prop-types is a library for typechecking of props.\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\n\r\n// Material Dashboard 2 React context\r\nimport { useMaterialUIController, setLayout } from \"context\";\r\n\r\nfunction PageLayout({ background, children }) {\r\n  const [, dispatch] = useMaterialUIController();\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    setLayout(dispatch, \"page\");\r\n  }, [pathname]);\r\n\r\n  return (\r\n    <MDBox\r\n      width=\"100vw\"\r\n      height=\"100%\"\r\n      minHeight=\"100vh\"\r\n      bgColor={background}\r\n      sx={{ overflowX: \"hidden\" }}\r\n    >\r\n      {children}\r\n    </MDBox>\r\n  );\r\n}\r\n\r\n// Setting default values for the props for PageLayout\r\nPageLayout.defaultProps = {\r\n  background: \"default\",\r\n};\r\n\r\n// Typechecking props for the PageLayout\r\nPageLayout.propTypes = {\r\n  background: PropTypes.oneOf([\"white\", \"light\", \"default\"]),\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default PageLayout;\r\n","/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\n// prop-types is a library for typechecking of props\r\nimport PropTypes from \"prop-types\";\r\n\r\n// react-router-dom components\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// @mui material components\r\nimport Icon from \"@mui/material/Icon\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\n\r\nfunction DefaultNavbarLink({ icon, name, route, light }) {\r\n  return (\r\n    <MDBox\r\n      component={Link}\r\n      to={route}\r\n      mx={1}\r\n      p={1}\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      sx={{ cursor: \"pointer\", userSelect: \"none\" }}\r\n    >\r\n      <Icon\r\n        sx={{\r\n          color: ({ palette: { white, secondary } }) => (light ? white.main : secondary.main),\r\n          verticalAlign: \"middle\",\r\n        }}\r\n      >\r\n        {icon}\r\n      </Icon>\r\n      <MDTypography\r\n        variant=\"button\"\r\n        fontWeight=\"regular\"\r\n        color={light ? \"white\" : \"dark\"}\r\n        textTransform=\"capitalize\"\r\n        sx={{ width: \"100%\", lineHeight: 0 }}\r\n      >\r\n        &nbsp;{name}\r\n      </MDTypography>\r\n    </MDBox>\r\n  );\r\n}\r\n\r\n// Typechecking props for the DefaultNavbarLink\r\nDefaultNavbarLink.propTypes = {\r\n  icon: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  route: PropTypes.string.isRequired,\r\n  light: PropTypes.bool,\r\n};\r\n\r\nexport default DefaultNavbarLink;\r\n","/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\n// prop-types is a library for typechecking of props.\r\nimport PropTypes from \"prop-types\";\r\n\r\n// @mui material components\r\nimport Menu from \"@mui/material/Menu\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\n\r\n// Material Dashboard 2 React example components\r\nimport DefaultNavbarLink from \"examples/Navbars/DefaultNavbar/DefaultNavbarLink\";\r\n\r\nfunction DefaultNavbarMobile({ open, close }) {\r\n  const { width } = open && open.getBoundingClientRect();\r\n\r\n  return (\r\n    <Menu\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"center\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"center\",\r\n      }}\r\n      anchorEl={open}\r\n      open={Boolean(open)}\r\n      onClose={close}\r\n      MenuListProps={{ style: { width: `calc(${width}px - 4rem)` } }}\r\n    >\r\n      <MDBox px={0.5}>\r\n        <DefaultNavbarLink icon=\"donut_large\" name=\"dashboard\" route=\"/dashboard\" />\r\n        <DefaultNavbarLink icon=\"person\" name=\"profile\" route=\"/profile\" />\r\n        <DefaultNavbarLink icon=\"account_circle\" name=\"sign up\" route=\"/authentication/sign-up\" />\r\n        <DefaultNavbarLink icon=\"key\" name=\"sign in\" route=\"/authentication/sign-in\" />\r\n      </MDBox>\r\n    </Menu>\r\n  );\r\n}\r\n\r\n// Typechecking props for the DefaultNavbarMenu\r\nDefaultNavbarMobile.propTypes = {\r\n  open: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]).isRequired,\r\n  close: PropTypes.oneOfType([PropTypes.func, PropTypes.bool, PropTypes.object]).isRequired,\r\n};\r\n\r\nexport default DefaultNavbarMobile;\r\n","/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// react-router components\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// prop-types is a library for typechecking of props.\r\nimport PropTypes from \"prop-types\";\r\n\r\n// @mui material components\r\nimport Container from \"@mui/material/Container\";\r\nimport Icon from \"@mui/material/Icon\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDButton from \"components/MDButton\";\r\n\r\n// Material Dashboard 2 React example components\r\nimport DefaultNavbarLink from \"examples/Navbars/DefaultNavbar/DefaultNavbarLink\";\r\nimport DefaultNavbarMobile from \"examples/Navbars/DefaultNavbar/DefaultNavbarMobile\";\r\n\r\n// Material Dashboard 2 React base styles\r\nimport breakpoints from \"assets/theme/base/breakpoints\";\r\n\r\n// Material Dashboard 2 React context\r\nimport { useMaterialUIController } from \"context\";\r\n\r\nfunction DefaultNavbar({ transparent, light, action }) {\r\n  const [controller] = useMaterialUIController();\r\n  const { darkMode } = controller;\r\n\r\n  const [mobileNavbar, setMobileNavbar] = useState(false);\r\n  const [mobileView, setMobileView] = useState(false);\r\n\r\n  const openMobileNavbar = ({ currentTarget }) => setMobileNavbar(currentTarget.parentNode);\r\n  const closeMobileNavbar = () => setMobileNavbar(false);\r\n\r\n  useEffect(() => {\r\n    // A function that sets the display state for the DefaultNavbarMobile.\r\n    function displayMobileNavbar() {\r\n      if (window.innerWidth < breakpoints.values.lg) {\r\n        setMobileView(true);\r\n        setMobileNavbar(false);\r\n      } else {\r\n        setMobileView(false);\r\n        setMobileNavbar(false);\r\n      }\r\n    }\r\n\r\n    /** \r\n     The event listener that's calling the displayMobileNavbar function when \r\n     resizing the window.\r\n    */\r\n    window.addEventListener(\"resize\", displayMobileNavbar);\r\n\r\n    // Call the displayMobileNavbar function to set the state with the initial value.\r\n    displayMobileNavbar();\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", displayMobileNavbar);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <MDBox\r\n        py={1}\r\n        px={{ xs: 4, sm: transparent ? 2 : 3, lg: transparent ? 0 : 2 }}\r\n        my={3}\r\n        mx={3}\r\n        width=\"calc(100% - 48px)\"\r\n        borderRadius=\"lg\"\r\n        shadow={transparent ? \"none\" : \"md\"}\r\n        color={light ? \"white\" : \"dark\"}\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        position=\"absolute\"\r\n        left={0}\r\n        zIndex={3}\r\n        sx={({\r\n          palette: { transparent: transparentColor, white, background },\r\n          functions: { rgba },\r\n        }) => ({\r\n          backgroundColor: transparent\r\n            ? transparentColor.main\r\n            : rgba(darkMode ? background.sidenav : white.main, 0.8),\r\n          backdropFilter: transparent ? \"none\" : `saturate(200%) blur(30px)`,\r\n        })}\r\n      >\r\n        <MDBox\r\n          component={Link}\r\n          to=\"/\"\r\n          py={transparent ? 1.5 : 0.75}\r\n          lineHeight={1}\r\n          pl={{ xs: 0, lg: 1 }}\r\n        >\r\n          <MDTypography variant=\"button\" fontWeight=\"bold\" color={light ? \"white\" : \"dark\"}>\r\n          Apiaries 16\r\n          </MDTypography>\r\n        </MDBox>\r\n        <MDBox color=\"inherit\" display={{ xs: \"none\", lg: \"flex\" }} m={0} p={0}>\r\n          <DefaultNavbarLink icon=\"donut_large\" name=\"dashboard\" route=\"/dashboard\" light={light} />\r\n          {/* <DefaultNavbarLink icon=\"person\" name=\"profile\" route=\"/profile\" light={light} /> */}\r\n          <DefaultNavbarLink\r\n            icon=\"account_circle\"\r\n            name=\"sign up\"\r\n            route=\"/authentication/sign-up\"\r\n            light={light}\r\n          />\r\n          <DefaultNavbarLink\r\n            icon=\"key\"\r\n            name=\"sign in\"\r\n            route=\"/authentication/sign-in\"\r\n            light={light}\r\n          />\r\n        </MDBox>\r\n        {/* {action &&\r\n          (action.type === \"internal\" ? (\r\n            <MDBox display={{ xs: \"none\", lg: \"inline-block\" }}>\r\n              <MDButton\r\n                component={Link}\r\n                to={action.route}\r\n                variant=\"gradient\"\r\n                color={action.color ? action.color : \"info\"}\r\n                size=\"small\"\r\n              >\r\n                {action.label}\r\n              </MDButton>\r\n            </MDBox>\r\n          ) : (\r\n            <MDBox display={{ xs: \"none\", lg: \"inline-block\" }}>\r\n              <MDButton\r\n                component=\"a\"\r\n                href={action.route}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                variant=\"gradient\"\r\n                color={action.color ? action.color : \"info\"}\r\n                size=\"small\"\r\n                sx={{ mt: -0.3 }}\r\n              >\r\n                {action.label}\r\n              </MDButton>\r\n            </MDBox>\r\n          ))} */}\r\n        <MDBox\r\n          display={{ xs: \"inline-block\", lg: \"none\" }}\r\n          lineHeight={0}\r\n          py={1.5}\r\n          pl={1.5}\r\n          color=\"inherit\"\r\n          sx={{ cursor: \"pointer\" }}\r\n          onClick={openMobileNavbar}\r\n        >\r\n          <Icon fontSize=\"default\">{mobileNavbar ? \"close\" : \"menu\"}</Icon>\r\n        </MDBox>\r\n      </MDBox>\r\n      {mobileView && <DefaultNavbarMobile open={mobileNavbar} close={closeMobileNavbar} />}\r\n    </Container>\r\n  );\r\n}\r\n\r\n// Setting default values for the props of DefaultNavbar\r\nDefaultNavbar.defaultProps = {\r\n  transparent: false,\r\n  light: false,\r\n  action: false,\r\n};\r\n\r\n// Typechecking props for the DefaultNavbar\r\nDefaultNavbar.propTypes = {\r\n  transparent: PropTypes.bool,\r\n  light: PropTypes.bool,\r\n  action: PropTypes.oneOfType([\r\n    PropTypes.bool,\r\n    PropTypes.shape({\r\n      type: PropTypes.oneOf([\"external\", \"internal\"]).isRequired,\r\n      route: PropTypes.string.isRequired,\r\n      color: PropTypes.oneOf([\r\n        \"primary\",\r\n        \"secondary\",\r\n        \"info\",\r\n        \"success\",\r\n        \"warning\",\r\n        \"error\",\r\n        \"dark\",\r\n        \"light\",\r\n      ]),\r\n      label: PropTypes.string.isRequired,\r\n    }),\r\n  ]),\r\n};\r\n\r\nexport default DefaultNavbar;\r\n","/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\n// prop-types is a library for typechecking of props\r\nimport PropTypes from \"prop-types\";\r\n\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\n\r\n// Material Dashboard 2 React example components\r\nimport DefaultNavbar from \"examples/Navbars/DefaultNavbar\";\r\nimport PageLayout from \"examples/LayoutContainers/PageLayout\";\r\n\r\n// Authentication pages components\r\nimport Footer from \"layouts/authentication/components/Footer\";\r\n\r\nfunction BasicLayout({ image, children }) {\r\n  return (\r\n    <PageLayout>\r\n      <DefaultNavbar\r\n        action={{\r\n          type: \"external\",\r\n          route: \"https://creative-tim.com/product/material-dashboard-react\",\r\n          label: \"free download\",\r\n          color: \"dark\",\r\n        }}\r\n      />\r\n      <MDBox\r\n        position=\"absolute\"\r\n        width=\"100%\"\r\n        minHeight=\"100vh\"\r\n        sx={{\r\n          backgroundImage: ({ functions: { linearGradient, rgba }, palette: { gradients } }) =>\r\n            image &&\r\n            `${linearGradient(\r\n              rgba(gradients.dark.main, 0.6),\r\n              rgba(gradients.dark.state, 0.6)\r\n            )}, url(${image})`,\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n        }}\r\n      />\r\n      <MDBox px={1} width=\"100%\" height=\"100vh\" mx=\"auto\">\r\n        <Grid container spacing={1} justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\r\n          <Grid item xs={11} sm={9} md={5} lg={4} xl={3}>\r\n            {children}\r\n          </Grid>\r\n        </Grid>\r\n      </MDBox>\r\n      <Footer light />\r\n    </PageLayout>\r\n  );\r\n}\r\n\r\n// Typechecking props for the BasicLayout\r\nBasicLayout.propTypes = {\r\n  image: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default BasicLayout;\r\n","/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\n// prop-types is a library for typechecking of props\r\nimport PropTypes from \"prop-types\";\r\n\r\n// @mui material components\r\nimport Container from \"@mui/material/Container\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Icon from \"@mui/material/Icon\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\n\r\n// Material Dashboard 2 React base styles\r\nimport typography from \"assets/theme/base/typography\";\r\n\r\nfunction Footer({ light }) {\r\n  const { size } = typography;\r\n\r\n  return (\r\n    <MDBox position=\"absolute\" width=\"100%\" bottom={0} py={4}>\r\n      <Container>\r\n        <MDBox\r\n          width=\"100%\"\r\n          display=\"flex\"\r\n          flexDirection={{ xs: \"column\", lg: \"row\" }}\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          px={1.5}\r\n        >\r\n          <MDBox\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            flexWrap=\"wrap\"\r\n            color={light ? \"white\" : \"text\"}\r\n            fontSize={size.sm}\r\n          >\r\n            &copy; {new Date().getFullYear()}, made with\r\n            <MDBox fontSize={size.md} color={light ? \"white\" : \"dark\"} mb={-0.5} mx={0.25}>\r\n              <Icon color=\"inherit\" fontSize=\"inherit\">\r\n                favorite\r\n              </Icon>\r\n            </MDBox>\r\n            by\r\n            <Link to=\"#\">\r\n              <MDTypography variant=\"button\" fontWeight=\"medium\" color={light ? \"white\" : \"dark\"}>\r\n                &nbsp;Apiaries 16&nbsp;\r\n              </MDTypography>\r\n            </Link>\r\n            {\" \"} pure, raw, local.\r\n          </MDBox>\r\n          <MDBox\r\n            component=\"ul\"\r\n            sx={({ breakpoints }) => ({\r\n              display: \"flex\",\r\n              flexWrap: \"wrap\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              listStyle: \"none\",\r\n              mt: 3,\r\n              mb: 0,\r\n              p: 0,\r\n\r\n              [breakpoints.up(\"lg\")]: {\r\n                mt: 0,\r\n              },\r\n            })}\r\n          >\r\n            {/* <MDBox component=\"li\" pr={2} lineHeight={1}>\r\n              <Link href=\"https://www.creative-tim.com/\" target=\"_blank\">\r\n                <MDTypography\r\n                  variant=\"button\"\r\n                  fontWeight=\"regular\"\r\n                  color={light ? \"white\" : \"dark\"}\r\n                >\r\n                  Creative Tim\r\n                </MDTypography>\r\n              </Link>\r\n            </MDBox>\r\n            <MDBox component=\"li\" px={2} lineHeight={1}>\r\n              <Link href=\"https://www.creative-tim.com/presentation\" target=\"_blank\">\r\n                <MDTypography\r\n                  variant=\"button\"\r\n                  fontWeight=\"regular\"\r\n                  color={light ? \"white\" : \"dark\"}\r\n                >\r\n                  About Us\r\n                </MDTypography>\r\n              </Link>\r\n            </MDBox>\r\n            <MDBox component=\"li\" px={2} lineHeight={1}>\r\n              <Link href=\"https://www.creative-tim.com/blog\" target=\"_blank\">\r\n                <MDTypography\r\n                  variant=\"button\"\r\n                  fontWeight=\"regular\"\r\n                  color={light ? \"white\" : \"dark\"}\r\n                >\r\n                  Blog\r\n                </MDTypography>\r\n              </Link>\r\n            </MDBox>\r\n            <MDBox component=\"li\" pl={2} lineHeight={1}>\r\n              <Link href=\"https://www.creative-tim.com/license\" target=\"_blank\">\r\n                <MDTypography\r\n                  variant=\"button\"\r\n                  fontWeight=\"regular\"\r\n                  color={light ? \"white\" : \"dark\"}\r\n                >\r\n                  License\r\n                </MDTypography>\r\n              </Link>\r\n            </MDBox> */}\r\n          </MDBox>\r\n        </MDBox>\r\n      </Container>\r\n    </MDBox>\r\n  );\r\n}\r\n\r\n// Setting default props for the Footer\r\nFooter.defaultProps = {\r\n  light: false,\r\n};\r\n\r\n// Typechecking props for the Footer\r\nFooter.propTypes = {\r\n  light: PropTypes.bool,\r\n};\r\n\r\nexport default Footer;\r\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","import PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["PageLayout","_ref","background","children","dispatch","useMaterialUIController","pathname","useLocation","useEffect","setLayout","_jsx","MDBox","width","height","minHeight","bgColor","sx","overflowX","defaultProps","icon","name","route","light","_jsxs","component","Link","to","mx","p","display","alignItems","cursor","userSelect","Icon","color","_ref2","palette","white","secondary","main","verticalAlign","MDTypography","variant","fontWeight","textTransform","lineHeight","open","close","getBoundingClientRect","Menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","anchorEl","Boolean","onClose","MenuListProps","style","px","DefaultNavbarLink","DefaultNavbar","transparent","action","controller","darkMode","mobileNavbar","setMobileNavbar","useState","mobileView","setMobileView","displayMobileNavbar","window","innerWidth","breakpoints","values","lg","addEventListener","removeEventListener","Container","py","xs","sm","my","borderRadius","shadow","justifyContent","position","left","zIndex","_ref3","transparentColor","functions","rgba","backgroundColor","sidenav","backdropFilter","pl","m","onClick","currentTarget","parentNode","fontSize","DefaultNavbarMobile","closeMobileNavbar","image","type","label","backgroundImage","linearGradient","gradients","dark","state","backgroundSize","backgroundPosition","backgroundRepeat","Grid","container","spacing","item","md","xl","Footer","size","typography","bottom","flexDirection","flexWrap","Date","getFullYear","mb","listStyle","mt","up","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","options","arguments","length","undefined","createStyledComponent","useThemeProps","componentName","ContainerRoot","theme","_extends","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","Object","keys","reduce","acc","breakpointValueKey","breakpoint","value","unit","Math","max","React","ref","className","other","_objectWithoutPropertiesLoose","classes","useUtilityClasses","slots","composeClasses","generateUtilityClass","as","clsx","createContainer","styled"],"sourceRoot":""}