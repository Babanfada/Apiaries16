{"version":3,"file":"static/js/325.5db73ba5.chunk.js","mappings":"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","sources":["layouts/harvests/profile/components/Header/index.js","layouts/harvests/data/harvestTableData.js","layouts/harvests/index.js","../node_modules/.pnpm/@mui+icons-material@5.11.16_@mui+material@5.12.3_react@18.2.0/node_modules/@mui/icons-material/Add.js"],"sourcesContent":["/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// prop-types is a library for typechecking of props.\r\nimport PropTypes from \"prop-types\";\r\n\r\n// @mui material components\r\nimport Card from \"@mui/material/Card\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Icon from \"@mui/material/Icon\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\n\r\n// Material Dashboard 2 React base styles\r\nimport breakpoints from \"assets/theme/base/breakpoints\";\r\n\r\n// Images\r\nimport burceMars from \"assets/images/bruce-mars.jpg\";\r\nimport backgroundImage from \"assets/images/bg-profile.jpeg\";\r\n\r\nfunction Header({ info, children }) {\r\n  const [tabsOrientation, setTabsOrientation] = useState(\"horizontal\");\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // A function that sets the orientation state of the tabs.\r\n    function handleTabsOrientation() {\r\n      return window.innerWidth < breakpoints.values.sm\r\n        ? setTabsOrientation(\"vertical\")\r\n        : setTabsOrientation(\"horizontal\");\r\n    }\r\n\r\n    /** \r\n     The event listener that's calling the handleTabsOrientation function when resizing the window.\r\n    */\r\n    window.addEventListener(\"resize\", handleTabsOrientation);\r\n\r\n    // Call the handleTabsOrientation function to set the state with the initial value.\r\n    handleTabsOrientation();\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleTabsOrientation);\r\n  }, [tabsOrientation]);\r\n\r\n  const handleSetTabValue = (event, newValue) => setTabValue(newValue);\r\n  const { image = \"\", station_name, location } = info;\r\n\r\n  return (\r\n    <MDBox position=\"relative\" mb={5}>\r\n      <MDBox\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        position=\"relative\"\r\n        minHeight=\"18.75rem\"\r\n        borderRadius=\"xl\"\r\n        sx={{\r\n          backgroundImage: ({ functions: { rgba, linearGradient }, palette: { gradients } }) =>\r\n            `${linearGradient(\r\n              rgba(gradients.info.main, 0.6),\r\n              rgba(gradients.info.state, 0.6)\r\n            )}, url(${backgroundImage})`,\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"50%\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      />\r\n      <Card\r\n        sx={{\r\n          position: \"relative\",\r\n          mt: -8,\r\n          mx: 3,\r\n          py: 2,\r\n          px: 2,\r\n        }}\r\n      >\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item>\r\n            <MDAvatar src={image} alt=\"profile-image\" size=\"xl\" shadow=\"sm\" />\r\n          </Grid>\r\n          <Grid item>\r\n            <MDBox height=\"100%\" mt={0.5} lineHeight={1}>\r\n              <MDTypography variant=\"h5\" fontWeight=\"medium\">\r\n                {station_name}\r\n              </MDTypography>\r\n              <MDTypography variant=\"button\" color=\"text\" fontWeight=\"regular\">\r\n                {location}\r\n              </MDTypography>\r\n            </MDBox>\r\n          </Grid>\r\n          {/* <Grid item xs={12} md={6} lg={4} sx={{ ml: \"auto\" }}>\r\n            <AppBar position=\"static\">\r\n              <Tabs orientation={tabsOrientation} value={tabValue} onChange={handleSetTabValue}>\r\n                <Tab\r\n                  label=\"App\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      home\r\n                    </Icon>\r\n                  }\r\n                />\r\n                <Tab\r\n                  label=\"Message\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      email\r\n                    </Icon>\r\n                  }\r\n                />\r\n                <Tab\r\n                  label=\"Settings\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      settings\r\n                    </Icon>\r\n                  }\r\n                />\r\n              </Tabs>\r\n            </AppBar>\r\n          </Grid> */}\r\n        </Grid>\r\n        {children}\r\n      </Card>\r\n    </MDBox>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  info: {\r\n    image: \"\", // Fallback image URL\r\n    station_name: \"First Name\",\r\n    location: \"Last Name\",\r\n  },\r\n  children: null,\r\n};\r\n\r\nHeader.propTypes = {\r\n  info: PropTypes.shape({\r\n    image: PropTypes.string,\r\n    station_name: PropTypes.string,\r\n    location: PropTypes.string,\r\n  }),\r\n  children: PropTypes.node,\r\n};\r\nexport default Header;\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable react/function-component-definition */\r\n/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\nimport MDBadge from \"components/MDBadge\";''\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport React from \"react\";\r\nimport logoInvesion from \"assets/images/small-logos/logo-invision.svg\";\r\nimport { useHoneyHarvest } from \"features/harvest/honey_harvestThunk\";\r\nimport { useDeleteHarvest } from \"features/harvest/honey_harvestThunk\";\r\nimport { setUpdateHarvest } from \"features/harvest/honey_harvestSlice\";\r\n\r\nexport default function harvestTableData() {\r\n  const dispatch = useDispatch();\r\n  const { deleteHarvest } = useDeleteHarvest();\r\n  const {\r\n    isGettingAllHarvest,\r\n    honey_harvest: {\r\n      harvest = [],\r\n      totalHarvestQuantity = 0,\r\n      count = 0,\r\n      harvestedVolumeByYear = [],\r\n      qualityRatingCount = [],\r\n      numOfPages = 0,\r\n      totalHarvest = 0,\r\n    } = {},\r\n    refetch,\r\n  } = useHoneyHarvest();\r\n  const Author = ({ image, name, year, station_id }) => (\r\n    <MDBox display=\"flex\" alignItems=\"center\" lineHeight={1}>\r\n      <MDAvatar src={image} name={name} size=\"sm\" />\r\n      <MDBox ml={2} lineHeight={1}>\r\n        <MDTypography display=\"block\" variant=\"button\" fontWeight=\"medium\">\r\n          <Link to={`/stations/${station_id}`}>{`${station_id} ${name}`}</Link>\r\n        </MDTypography>\r\n        <MDTypography variant=\"caption\">{year}</MDTypography>\r\n      </MDBox>\r\n    </MDBox>\r\n  );\r\n\r\n  const rows = harvest.map((harv, i) => {\r\n    const {\r\n      harvest_id,\r\n      harvest_year,\r\n      station_id,\r\n      station_name,\r\n      harvest_date,\r\n      quantity_collected,\r\n      colouration,\r\n      unit,\r\n      quality_rating,\r\n      note,\r\n    } = harv;\r\n    const payload = {\r\n      harvest_id,\r\n      harvest_year,\r\n      station_id,\r\n      station_name,\r\n      harvest_date,\r\n      quantity_collected,\r\n      colouration,\r\n      unit,\r\n      quality_rating,\r\n      note,\r\n    };\r\n\r\n    const handleEdit = () => {\r\n      dispatch(setUpdateHarvest(payload));\r\n    };\r\n    const handleDelete = () => {\r\n      const confirmation = window.confirm(\r\n        \"You are about to Delete an harvest records permanently, ARE YOU SURE?\"\r\n      );\r\n      if (!confirmation) return;\r\n      deleteHarvest(harvest_id);\r\n    };\r\n    return {\r\n      harvest: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          {harvest_id}\r\n        </MDTypography>\r\n      ),\r\n      station: (\r\n        <Author\r\n          image={logoInvesion}\r\n          year={harvest_year}\r\n          name={station_name}\r\n          station_id={station_id}\r\n        />\r\n      ),\r\n      date: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          {harvest_date}\r\n        </MDTypography>\r\n      ),\r\n      quantity: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          {quantity_collected}\r\n        </MDTypography>\r\n      ),\r\n      unit: (\r\n        <MDBox ml={-1}>\r\n          <MDBadge\r\n            badgeContent={unit}\r\n            color={unit === \"litres\" ? \"success\" : \"warning\"}\r\n            variant=\"gradient\"\r\n            size=\"sm\"\r\n          />\r\n        </MDBox>\r\n      ),\r\n      color: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          {colouration}\r\n        </MDTypography>\r\n      ),\r\n      rating: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          {quality_rating} of 5\r\n        </MDTypography>\r\n      ),\r\n      note: (\r\n        <MDTypography title={note} component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          {note.length > 20 ? `${note.slice(0, 20)}...` : note}\r\n        </MDTypography>\r\n      ),\r\n      update: (\r\n        <MDTypography component=\"a\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          <Link\r\n            onClick={() => {\r\n              handleEdit();\r\n            }}\r\n            to={`/createupdateharvest/${harvest_id}`}\r\n          >\r\n            Edit\r\n          </Link>\r\n        </MDTypography>\r\n      ),\r\n      remove: (\r\n        <MDTypography component=\"a\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          <Link\r\n            onClick={() => {\r\n              handleDelete();\r\n            }}\r\n          >\r\n            remove\r\n          </Link>\r\n        </MDTypography>\r\n      ),\r\n    };\r\n  });\r\n  return {\r\n    columns: [\r\n      { Header: \"harvest\", accessor: \"harvest\", width: \"45%\", align: \"left\" },\r\n      { Header: \"station\", accessor: \"station\", width: \"45%\", align: \"left\" },\r\n      { Header: \"date\", accessor: \"date\", align: \"left\" },\r\n      { Header: \"quantity\", accessor: \"quantity\", align: \"center\" },\r\n      { Header: \"unit\", accessor: \"unit\", align: \"center\" },\r\n      { Header: \"color\", accessor: \"color\", align: \"center\" },\r\n      { Header: \"rating\", accessor: \"rating\", align: \"center\" },\r\n      { Header: \"note\", accessor: \"note\", align: \"center\" },\r\n      { Header: \"update\", accessor: \"update\", align: \"center\" },\r\n      { Header: \"remove\", accessor: \"remove\", align: \"center\" },\r\n    ],\r\n    rows: rows,\r\n    harvest,\r\n    numOfPages,\r\n    count,\r\n    refetch,\r\n    isGettingAllHarvest,\r\n    totalHarvestQuantity,\r\n    harvestedVolumeByYear,\r\n    qualityRatingCount,\r\n    totalHarvest,\r\n  };\r\n}\r\n","import Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport React from \"react\";\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\nimport Footer from \"examples/Footer\";\r\nimport DataTable from \"examples/Tables/DataTable\";\r\n// Data\r\n// import employeesTableData from \"layouts/tables/data/employeesTableData\";\r\nimport projectsTableData from \"layouts/tables/data/projectsTableData\";\r\n// import { useSingleEmployee } from \"features/employees/employeesThunk\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Divider from \"@mui/material/Divider\";\r\n// @mui icons\r\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\r\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\r\nimport { Email } from \"@mui/icons-material\";\r\nimport ProfileInfoCard from \"examples/Cards/InfoCards/ProfileInfoCard\";\r\nimport ProfilesList from \"examples/Lists/ProfilesList\";\r\nimport DefaultProjectCard from \"examples/Cards/ProjectCards/DefaultProjectCard\";\r\nimport Header from \"./profile/components/Header\";\r\nimport PlatformSettings from \"./profile/components/PlatformSettings\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { useUploadEmployeeImages } from \"features/employees/employeesThunk\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CustomButton } from \"components copy\";\r\nimport { Loader1 } from \"components copy/Loader\";\r\nimport PaginationControlled from \"components copy/component's_Tables/Pagination\";\r\nimport moment from \"moment\";\r\nimport harvestTableData from \"./data/harvestTableData\";\r\nimport { changePage } from \"features/harvest/honey_harvestSlice\";\r\nimport { HarvestSearchModal } from \"components copy\";\r\nimport { resetValues } from \"features/harvest/honey_harvestSlice\";\r\nimport { useHarvest } from \"hooks/DashDetails_2\";\r\nimport { useUpdateHarvest } from \"features/harvest/honey_harvestThunk\";\r\nimport { useCreateHarvest } from \"features/harvest/honey_harvestThunk\";\r\nimport styles from \"../styles/thead.module.scss\";\r\nimport styling from \"../styles/createupdate.module.scss\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\n\r\nfunction Harvests() {\r\n  const {\r\n    columns = [], // Default to an empty array\r\n    rows = [], // Default to an empty array\r\n    harvest,\r\n    numOfPages,\r\n    count,\r\n    refetch,\r\n    isGettingAllHarvest,\r\n    totalHarvestQuantity,\r\n    harvestedVolumeByYear,\r\n    qualityRatingCount,\r\n    totalHarvest,\r\n  } = harvestTableData() || {}; // Ensure nokTableData() returns something\r\n\r\n  const {\r\n    pages,\r\n    harvest_year,\r\n    station_id,\r\n    station_name,\r\n    harvest_date,\r\n    quantity_collected,\r\n    colouration,\r\n    unit,\r\n    quality_rating,\r\n    note,\r\n    sort,\r\n  } = useSelector((store) => store.harvests) || {};\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (event, value) => {\r\n    event.preventDefault();\r\n    dispatch(changePage(value));\r\n  };\r\n\r\n  // Always call useEffect unconditionally\r\n  React.useEffect(() => {\r\n    if (refetch) {\r\n      refetch();\r\n    }\r\n  }, [\r\n    pages,\r\n    harvest_year,\r\n    station_id,\r\n    station_name,\r\n    harvest_date,\r\n    quantity_collected,\r\n    colouration,\r\n    unit,\r\n    quality_rating,\r\n    note,\r\n    sort,\r\n    refetch,\r\n  ]);\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      <MDBox pt={6} pb={3}>\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <MDBox\r\n                mx={2}\r\n                mt={-3}\r\n                py={3}\r\n                px={2}\r\n                variant=\"gradient\"\r\n                bgColor=\"info\"\r\n                borderRadius=\"lg\"\r\n                coloredShadow=\"info\"\r\n              >\r\n                <MDTypography className={styles.wrapper} variant=\"h6\" color=\"white\">\r\n                  <MDBox className={styles.inner}>\r\n                    <MDTypography color=\"white\"> Honey Harvest</MDTypography>\r\n                    <MDTypography color=\"white\">\r\n                      {count}/{totalHarvest}\r\n                    </MDTypography>\r\n                  </MDBox>\r\n                  <MDBox className={styles.inner}>\r\n                    <Link onClick={() => dispatch(resetValues())} to=\"/createupdateharvest/add\">\r\n                      <AddIcon\r\n                        sx={{ fill: \"white\" }}\r\n                        fontSize=\"medium\"\r\n                        titleAccess=\"add a new harvest details\"\r\n                      />\r\n                    </Link>\r\n                    <HarvestSearchModal isGettingAllHarvest={isGettingAllHarvest} />\r\n                  </MDBox>\r\n                </MDTypography>\r\n              </MDBox>\r\n              <MDBox pt={3}>\r\n                <DataTable\r\n                  table={{ columns, rows }}\r\n                  isSorted={false}\r\n                  entriesPerPage={false}\r\n                  showTotalEntries={false}\r\n                  noEndBorder\r\n                />\r\n              </MDBox>\r\n            </Card>\r\n            <PaginationControlled pageDetails={{ handleChange, numOfPages, pages }} />\r\n          </Grid>\r\n        </Grid>\r\n      </MDBox>\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\nexport default Harvests;\r\n\r\nexport const CreateUpdateHarvest = () => {\r\n  const { id } = useParams();\r\n  const { harvestInputs } = useHarvest();\r\n  const { isUpdatingHarvest, updateHarvest } = useUpdateHarvest();\r\n  const { createHarvest, isCreatingHarvest } = useCreateHarvest();\r\n  const {\r\n    harvest_year,\r\n    station_id,\r\n    station_name,\r\n    harvest_date,\r\n    quantity_collected,\r\n    colouration,\r\n    unit,\r\n    quality_rating,\r\n    note,\r\n    isEdit,\r\n  } = useSelector((store) => store.harvests);\r\n  const harvestDetails = {\r\n    harvest_year,\r\n    station_id,\r\n    station_name,\r\n    harvest_date,\r\n    quantity_collected,\r\n    colouration,\r\n    unit,\r\n    quality_rating,\r\n    note,\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = Object.values(harvestDetails).every(\r\n      (value) => value !== undefined && value !== null && value !== \"\"\r\n    );\r\n    if (!isValid) {\r\n      alert(\"Please fill out all required fields.\");\r\n      return;\r\n    }\r\n    if (isEdit) return updateHarvest({ harvestDetails, id });\r\n    createHarvest(harvestDetails);\r\n  };\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      {/* <MDBox mb={2} /> */}\r\n      {/* <Header info={{ image, first_name, last_name, role }}> */}\r\n      <MDBox mt={5} mb={3}>\r\n        <Grid className={styling.wrapper} container spacing={1}>\r\n          {/* <Grid item xs={12} md={6} xl={4} sx={{ display: \"flex\" }}>\r\n            <Divider orientation=\"vertical\" sx={{ ml: -2, mr: 1 }} /> */}\r\n          <div>\r\n            {/* <Link to={`/harvests`}>Go back</Link> */}\r\n            <div>\r\n              <Link to=\"/harvests\">\r\n                <ArrowBackIcon />\r\n              </Link>\r\n              <h6>\r\n                {isEdit ? `Update harvest details for ${station_name}` : `Create harvest details`}{\" \"}\r\n              </h6>\r\n              <div></div>\r\n            </div>\r\n            <form className={styling.form} onSubmit={handleSubmit}>\r\n              {harvestInputs\r\n                .filter((detail) => detail.name !== \"sort\")\r\n                .map((detail) => {\r\n                  const { name, TextField } = detail;\r\n                  return <div key={name}>{TextField}</div>;\r\n                })}\r\n              <CustomButton\r\n                background={\"inherit\"}\r\n                backgroundhover={\"grey\"}\r\n                size={\"100%\"}\r\n                height={\"3vh\"}\r\n                type=\"submit\"\r\n                // disabled={!isValid}\r\n              >\r\n                {isCreatingHarvest === \"pending\" || isUpdatingHarvest === \"pending\" ? (\r\n                  <Loader1 />\r\n                ) : isEdit ? (\r\n                  \"Update\"\r\n                ) : (\r\n                  \"Submit\"\r\n                )}\r\n              </CustomButton>\r\n            </form>\r\n          </div>\r\n          {/* <Divider orientation=\"vertical\" sx={{ mx: 0 }} /> */}\r\n          {/* </Grid> */}\r\n        </Grid>\r\n      </MDBox>\r\n      {/* </Header> */}\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;"],"names":["Header","_ref","info","children","tabsOrientation","setTabsOrientation","useState","tabValue","setTabValue","useEffect","handleTabsOrientation","window","innerWidth","breakpoints","values","sm","addEventListener","removeEventListener","image","station_name","location","_jsxs","MDBox","position","mb","_jsx","display","alignItems","minHeight","borderRadius","sx","backgroundImage","_ref2","functions","rgba","linearGradient","palette","gradients","main","state","backgroundSize","backgroundPosition","overflow","Card","mt","mx","py","px","Grid","container","spacing","item","MDAvatar","src","alt","size","shadow","height","lineHeight","MDTypography","variant","fontWeight","color","defaultProps","harvestTableData","dispatch","useDispatch","deleteHarvest","useDeleteHarvest","isGettingAllHarvest","honey_harvest","harvest","totalHarvestQuantity","count","harvestedVolumeByYear","qualityRatingCount","numOfPages","totalHarvest","refetch","useHoneyHarvest","Author","name","year","station_id","ml","Link","to","columns","accessor","width","align","rows","map","harv","i","harvest_id","harvest_year","harvest_date","quantity_collected","colouration","unit","quality_rating","note","payload","component","href","station","logoInvesion","date","quantity","MDBadge","badgeContent","rating","title","length","slice","update","onClick","setUpdateHarvest","remove","confirm","pages","sort","useSelector","store","harvests","React","DashboardLayout","DashboardNavbar","pt","pb","xs","bgColor","coloredShadow","className","styles","wrapper","inner","resetValues","AddIcon","fill","fontSize","titleAccess","HarvestSearchModal","DataTable","table","isSorted","entriesPerPage","showTotalEntries","noEndBorder","PaginationControlled","pageDetails","handleChange","event","value","preventDefault","changePage","Footer","CreateUpdateHarvest","id","useParams","harvestInputs","useHarvest","isUpdatingHarvest","updateHarvest","useUpdateHarvest","createHarvest","isCreatingHarvest","useCreateHarvest","isEdit","harvestDetails","styling","ArrowBackIcon","form","onSubmit","e","Object","every","undefined","alert","filter","detail","TextField","CustomButton","background","backgroundhover","type","Loader1","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}