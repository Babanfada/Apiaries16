{"version":3,"file":"static/js/293.ba9b6d85.chunk.js","mappings":"kQAOO,SAASA,EAAQC,GACtB,OAAOC,OAAOD,GAAOE,MAAM,oBAAoB,IAAM,EACvD,CAGO,SAASC,EAAWC,GACzB,OAAOC,WAAWD,EACpB,C,0DCZO,SAASE,EAAwBC,GACtC,OAAOC,EAAAA,EAAAA,IAAqB,cAAeD,EAC7C,EACwBE,EAAAA,EAAAA,GAAuB,cAAe,CAAC,OAAQ,OAAQ,cAAe,UAAW,WAAY,QAAS,OAAQ,eAAgB,aAAc,e,eCHpK,MAAMC,EAAY,CAAC,YAAa,YAAa,YAAa,SAAU,QAAS,UAAW,SACxF,IACEC,EACAC,EACAC,EACAC,EAJEC,EAAIC,GAAKA,EAeb,MAcMC,GAAgBC,EAAAA,EAAAA,IAAUP,IAAOA,EAAKI,CAAC;;;;;;;;;;;;IAavCI,GAAeD,EAAAA,EAAAA,IAAUN,IAAQA,EAAMG,CAAC;;;;;;;;;;;;;IAcxCK,GAAeC,EAAAA,EAAAA,IAAO,OAAQ,CAClCC,KAAM,cACNf,KAAM,OACNgB,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOE,KAAMF,EAAOC,EAAWE,UAAmC,IAAzBF,EAAWG,WAAuBJ,EAAOC,EAAWG,WAAYH,EAAWI,aAAeL,EAAOM,aAAcL,EAAWI,cAAgBJ,EAAWM,OAASP,EAAOQ,WAAYP,EAAWI,cAAgBJ,EAAWQ,QAAUT,EAAOU,WAAW,GAPnRd,EASlBe,IAGG,IAHF,MACFC,EAAK,WACLX,GACDU,EACC,MAAME,EAAavC,EAAQsC,EAAME,MAAMC,eAAiB,KAClDC,EAActC,EAAWkC,EAAME,MAAMC,cAC3C,OAAOE,EAAAA,EAAAA,GAAS,CACdC,QAAS,QAETC,gBAAiBP,EAAMQ,KAAOR,EAAMQ,KAAKC,QAAQC,SAASC,IAAKC,EAAAA,EAAAA,IAAMZ,EAAMS,QAAQI,KAAKC,QAAgC,UAAvBd,EAAMS,QAAQM,KAAmB,IAAO,KACzIlB,OAAQ,SACgB,SAAvBR,EAAWE,SAAsB,CAClCyB,UAAW,EACXC,aAAc,EACdpB,OAAQ,OACRqB,gBAAiB,QACjBC,UAAW,iBACXhB,aAAc,GAAGC,IAAcH,KAAcmB,KAAKC,MAAMjB,EAAc,GAAM,IAAM,KAAKH,IACvF,iBAAkB,CAChBqB,QAAS,aAEa,aAAvBjC,EAAWE,SAA0B,CACtCY,aAAc,OACU,YAAvBd,EAAWE,SAAyB,CACrCY,cAAeH,EAAMQ,MAAQR,GAAOE,MAAMC,cACzCd,EAAWI,aAAe,CAC3B,QAAS,CACP8B,WAAY,WAEblC,EAAWI,cAAgBJ,EAAWM,OAAS,CAChD6B,SAAU,eACTnC,EAAWI,cAAgBJ,EAAWQ,QAAU,CACjDA,OAAQ,QACR,IACD4B,IAAA,IAAC,WACFpC,GACDoC,EAAA,MAA8B,UAAzBpC,EAAWG,YAAyBkC,EAAAA,EAAAA,IAAIlD,IAAQA,EAAME,CAAC;mBAC1C;OACXE,EAAc,IAAE+C,IAAA,IAAC,WACvBtC,EAAU,MACVW,GACD2B,EAAA,MAA8B,SAAzBtC,EAAWG,YAAwBkC,EAAAA,EAAAA,IAAIjD,IAAQA,EAAMC,CAAC;;;;;;;;qBAQvC;;;;YAIT;;;;;;;;;;;OAWJI,GAAekB,EAAMQ,MAAQR,GAAOS,QAAQmB,OAAOC,MAAM,IAuFjE,EAtF8BC,EAAAA,YAAiB,SAAkBC,EAASC,GACxE,MAAM7C,GAAQ8C,EAAAA,EAAAA,GAAc,CAC1B9C,MAAO4C,EACP9C,KAAM,iBAEF,UACFO,EAAY,QAAO,UACnB0C,EAAS,UACTC,EAAY,OAAM,OAClBtC,EAAM,MACNuC,EAAK,QACL7C,EAAU,OAAM,MAChBI,GACER,EACJkD,GAAQC,EAAAA,EAAAA,GAA8BnD,EAAOd,GACzCgB,GAAagB,EAAAA,EAAAA,GAAS,CAAC,EAAGlB,EAAO,CACrCK,YACA2C,YACA5C,UACAE,YAAa8C,QAAQF,EAAMG,YAEvBC,EAxIkBpD,KACxB,MAAM,QACJoD,EAAO,QACPlD,EAAO,UACPC,EAAS,YACTC,EAAW,MACXE,EAAK,OACLE,GACER,EACEqD,EAAQ,CACZpD,KAAM,CAAC,OAAQC,EAASC,EAAWC,GAAe,eAAgBA,IAAgBE,GAAS,aAAcF,IAAgBI,GAAU,eAErI,OAAO8C,EAAAA,EAAAA,GAAeD,EAAOzE,EAAyBwE,EAAQ,EA4H9CG,CAAkBvD,GAClC,OAAoBwD,EAAAA,EAAAA,KAAK9D,GAAcsB,EAAAA,EAAAA,GAAS,CAC9CyC,GAAIX,EACJH,IAAKA,EACLE,WAAWa,EAAAA,EAAAA,GAAKN,EAAQnD,KAAM4C,GAC9B7C,WAAYA,GACXgD,EAAO,CACRD,OAAO/B,EAAAA,EAAAA,GAAS,CACdV,QACAE,UACCuC,KAEP,I,uGCzCA,QA/GA,WACE,MAAOY,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IAIvC,MAAEC,EAAK,SAAEC,IAAaC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SACnD,UAAEC,EAAS,UAAEC,IAAcC,EAAAA,EAAAA,OAC3B,YAAEC,IAAgBC,EAAAA,EAAAA,KAClBC,GAAWC,EAAAA,EAAAA,OACTC,KAAMC,EAAW,QAAEC,EAAO,sBAAEC,IAA0BC,EAAAA,EAAAA,MAsB9D,OARAC,EAAAA,EAAAA,YAAU,KACU,YAAdX,GACFQ,IAE4B,YAA1BC,GAAqCL,EAAS,aAAa,GAC9D,CAACJ,EAAWS,EAAuBL,KAIpChB,EAAAA,EAAAA,KAACwB,EAAAA,EAAW,CAACC,MAAOC,EAAQ/B,UAC1BgC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAAjC,SAAA,EACHgC,EAAAA,EAAAA,MAACE,EAAAA,EAAK,CACJnF,QAAQ,WACRoF,QAAQ,OACRxE,aAAa,KACbyE,cAAc,OACdC,GAAI,EACJC,IAAK,EACLC,EAAG,EACHC,GAAI,EACJC,UAAU,SAAQzC,SAAA,EAElBK,EAAAA,EAAAA,KAACqC,EAAAA,EAAY,CAAC3F,QAAQ,KAAK4F,WAAW,SAASC,MAAM,QAAQN,GAAI,EAAEtC,SAAC,mCAGpEK,EAAAA,EAAAA,KAACqC,EAAAA,EAAY,CAAC3F,QAAQ,KAAK4F,WAAW,QAAQC,MAAM,QAAQN,GAAI,EAAEtC,SAAC,qDAIrEK,EAAAA,EAAAA,KAAC6B,EAAAA,EAAK,CAACW,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE/C,UACzBgC,EAAAA,EAAAA,MAACE,EAAAA,EAAK,CAACvC,UAAU,OAAOqD,KAAK,OAAOC,SA1CtBC,IACpBA,EAAEC,iBACGxC,GAAUC,EAKfI,EAAU,CACRL,QACAC,aANAwC,MAAMC,MAAM,+CAOZ,EAgC+DrD,SAAA,EACzDgC,EAAAA,EAAAA,MAACU,EAAAA,EAAY,CAAC3F,QAAQ,KAAK4F,WAAW,QAAQC,MAAM,QAAQN,GAAI,EAAEtC,SAAA,EAChEK,EAAAA,EAAAA,KAACiD,EAAAA,GAAI,CAACC,GAAG,wBAAuBvD,SAAC,4BAC/BW,GAgBAN,EAAAA,EAAAA,KAACqC,EAAAA,EAAY,CAAC3F,QAAQ,OAAO4F,WAAW,QAAQC,MAAM,QAAQN,GAAI,EAAEtC,SACjEW,KAhBHN,EAAAA,EAAAA,KAACnC,EAAQ,CACPnB,QAAQ,cACRI,MAAO,cACPE,OAAQ,cACRmG,GAAI,CACF7F,aAAc,MACd8F,WAAY,OACZC,SAAU,QACVd,MAAO,MACPD,WAAY,QACZ3C,SACH,sDASLK,EAAAA,EAAAA,KAAC6B,EAAAA,EAAK,CAACM,GAAI,EAAExC,SAAEmB,EAAY,GAAGwC,aAC9BtD,EAAAA,EAAAA,KAAC6B,EAAAA,EAAK,CAACI,GAAI,EAAGE,GAAI,EAAExC,UAClBK,EAAAA,EAAAA,KAACuD,EAAAA,EAAQ,CACPC,KAAK,SACLC,UAAWlD,EACX7D,QAAQ,WACR6F,MAAM,OACNmB,WAAS,EAAA/D,SAEM,YAAdiB,GAA0BZ,EAAAA,EAAAA,KAAC2D,EAAAA,GAAO,IAAM,eAG7C3D,EAAAA,EAAAA,KAAC6B,EAAAA,EAAK,CAACI,GAAI,EAAGE,GAAI,EAAGC,UAAU,SAAQzC,UACrCgC,EAAAA,EAAAA,MAACU,EAAAA,EAAY,CAAC3F,QAAQ,SAAS6F,MAAM,OAAM5C,SAAA,CAAC,mBACzB,KACjBK,EAAAA,EAAAA,KAACqC,EAAAA,EAAY,CACX/C,UAAW2D,EAAAA,GACXC,GAAG,kCACHxG,QAAQ,SACR6F,MAAM,OACND,WAAW,SACXsB,cAAY,EAAAjE,SACb,2BAUjB,C","sources":["../node_modules/.pnpm/@mui+material@5.12.3_@emotion+react@11.10.8_@emotion+styled@11.10.8_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/styles/cssUtils.js","../node_modules/.pnpm/@mui+material@5.12.3_@emotion+react@11.10.8_@emotion+styled@11.10.8_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/.pnpm/@mui+material@5.12.3_@emotion+react@11.10.8_@emotion+styled@11.10.8_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Skeleton/Skeleton.js","layouts/authentication/sign-in/index.js"],"sourcesContent":["export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n}\n\n// Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n}\n\n// Emulate the sass function \"unitless\"\nexport function toUnitless(length) {\n  return parseFloat(length);\n}\n\n// Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length);\n\n    // Optimize for cases where `from` and `to` units are accidentally the same.\n    if (fromUnit === toUnit) {\n      return length;\n    }\n\n    // Convert input length to pixels.\n    let pxLength = toUnitless(length);\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    }\n\n    // Convert length in pixels to the output unit\n    let outputLength = pxLength;\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n}\n\n// fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n    if (transform !== null) {\n      value = transform(value);\n    }\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Card, Skeleton } from \"@mui/material\";\r\nimport { useLoginUser, useCurrentUser } from \"features/users/userThunk\";\r\nimport useRegister from \"hooks/Register\";\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDButton from \"components/MDButton\";\r\nimport { Loader1 } from \"components copy/Loader\";\r\nimport BasicLayout from \"layouts/authentication/components/BasicLayout\";\r\nimport bgImage from \"assets/images/bg-sign-in-basic.jpeg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Basic() {\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const handleSetRememberMe = () => setRememberMe(!rememberMe);\r\n\r\n  // State for form input\r\n  const { email, password } = useSelector((store) => store.users);\r\n  const { loginUser, isLoginIn } = useLoginUser();\r\n  const { userDetails } = useRegister();\r\n  const navigate = useNavigate();\r\n  const { data: currentUser, refetch, isCheckingCurrentUser } = useCurrentUser();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!email || !password) {\r\n      toast.error(\"You have not provided your email or password\");\r\n      return;\r\n    }\r\n    // Trigger login action\r\n    loginUser({\r\n      email,\r\n      password,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (isLoginIn === \"success\") {\r\n      refetch();\r\n    }\r\n    if (isCheckingCurrentUser === \"success\") navigate(\"/dashboard\");\r\n  }, [isLoginIn, isCheckingCurrentUser, navigate]);\r\n\r\n  // console.log(isLoginIn, currentUser);\r\n  return (\r\n    <BasicLayout image={bgImage}>\r\n      <Card>\r\n        <MDBox\r\n          variant=\"gradient\"\r\n          bgColor=\"info\"\r\n          borderRadius=\"lg\"\r\n          coloredShadow=\"info\"\r\n          mx={2}\r\n          mt={-3}\r\n          p={2}\r\n          mb={1}\r\n          textAlign=\"center\"\r\n        >\r\n          <MDTypography variant=\"h6\" fontWeight=\"medium\" color=\"white\" mt={1}>\r\n            Glad to see you back again !!\r\n          </MDTypography>\r\n          <MDTypography variant=\"h6\" fontWeight=\"small\" color=\"white\" mt={1}>\r\n            Enter your password to retrieve your info...\r\n          </MDTypography>\r\n        </MDBox>\r\n        <MDBox pt={4} pb={3} px={3}>\r\n          <MDBox component=\"form\" role=\"form\" onSubmit={handleSubmit}>\r\n            <MDTypography variant=\"h6\" fontWeight=\"light\" color=\"white\" mt={1}>\r\n              <Link to=\"/authentication/check\">Not your Email? Go Back</Link>\r\n              {!email ? (\r\n                <Skeleton\r\n                  variant=\"rectangular\"\r\n                  width={\"fit-content\"}\r\n                  height={\"fit-content\"}\r\n                  sx={{\r\n                    borderRadius: \"5px\",\r\n                    background: \"none\",\r\n                    fontSize: \"small\",\r\n                    color: \"red\",\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  Your email is missing, you have to go back!!!\r\n                </Skeleton>\r\n              ) : (\r\n                <MDTypography variant=\"span\" fontWeight=\"small\" color=\"black\" mt={1}>\r\n                  {email}\r\n                </MDTypography>\r\n              )}\r\n            </MDTypography>\r\n            <MDBox mb={2}>{userDetails[1].TextField}</MDBox>\r\n            <MDBox mt={4} mb={1}>\r\n              <MDButton\r\n                type=\"submit\"\r\n                disabled={!password}\r\n                variant=\"gradient\"\r\n                color=\"info\"\r\n                fullWidth\r\n              >\r\n                {isLoginIn === \"pending\" ? <Loader1 /> : \"Sign in\"}\r\n              </MDButton>\r\n            </MDBox>\r\n            <MDBox mt={3} mb={1} textAlign=\"center\">\r\n              <MDTypography variant=\"button\" color=\"text\">\r\n                Forgot password?{\" \"}\r\n                <MDTypography\r\n                  component={Link}\r\n                  to=\"/authentication/forget-password\"\r\n                  variant=\"button\"\r\n                  color=\"info\"\r\n                  fontWeight=\"medium\"\r\n                  textGradient\r\n                >\r\n                  reset it\r\n                </MDTypography>\r\n              </MDTypography>\r\n            </MDBox>\r\n          </MDBox>\r\n        </MDBox>\r\n      </Card>\r\n    </BasicLayout>\r\n  );\r\n}\r\n\r\nexport default Basic;\r\n"],"names":["getUnit","input","String","match","toUnitless","length","parseFloat","getSkeletonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","_t","_t2","_t3","_t4","_","t","pulseKeyframe","keyframes","waveKeyframe","SkeletonRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","animation","hasChildren","withChildren","width","fitContent","height","heightAuto","_ref","theme","radiusUnit","shape","borderRadius","radiusValue","_extends","display","backgroundColor","vars","palette","Skeleton","bg","alpha","text","primary","mode","marginTop","marginBottom","transformOrigin","transform","Math","round","content","visibility","maxWidth","_ref2","css","_ref3","action","hover","React","inProps","ref","useThemeProps","className","component","style","other","_objectWithoutPropertiesLoose","Boolean","children","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","rememberMe","setRememberMe","useState","email","password","useSelector","store","users","loginUser","isLoginIn","useLoginUser","userDetails","useRegister","navigate","useNavigate","data","currentUser","refetch","isCheckingCurrentUser","useCurrentUser","useEffect","BasicLayout","image","bgImage","_jsxs","Card","MDBox","bgColor","coloredShadow","mx","mt","p","mb","textAlign","MDTypography","fontWeight","color","pt","pb","px","role","onSubmit","e","preventDefault","toast","error","Link","to","sx","background","fontSize","TextField","MDButton","type","disabled","fullWidth","Loader1","textGradient"],"sourceRoot":""}