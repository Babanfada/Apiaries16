{"version":3,"file":"static/js/740.56af7554.chunk.js","mappings":"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","sources":["hooks/DashDetails.jsx","layouts/equipments/profile/components/Header/index.js","layouts/equipments/data/equipmentsTableData.js","components copy/searchModals/EquipmentSearchModal.jsx","layouts/equipments/index.js","../node_modules/.pnpm/@mui+icons-material@5.11.16_@mui+material@5.12.3_react@18.2.0/node_modules/@mui/icons-material/Add.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport { handelChange, handleDob } from \"../features/stations/stationSlice\";\r\nimport { handleDate, handleChangeEquip } from \"../features/equuipments/equipmentSlice\";\r\nimport { convertToDateOnly } from \"../utils\";\r\nimport { DateRegister, GenderInput, MultiLineInput, UserInput } from \"../components copy\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { handleChangeSupp, handleDateSupp } from \"../features/supplies/suppliesSlice\";\r\n\r\nexport const useDashDetails_1 = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    station_name,\r\n    supervisor_int,\r\n    supervisor_ext,\r\n    location,\r\n    longitude,\r\n    latitude,\r\n    station_size,\r\n    number_of_hive_boxes,\r\n    status,\r\n    station_maintainace_history,\r\n    last_inspection_date,\r\n    next_inspection_date,\r\n    notes,\r\n    sort,\r\n  } = useSelector((store) => store.stations);\r\n  const getInput = (e) => {\r\n    const { name, value } = e.target;\r\n    const numericFields = [\r\n      \"supervisor_int\",\r\n      \"supervisor_ext\",\r\n      \"longitude\",\r\n      \"latitude\",\r\n      \"number_of_hive_boxes\",\r\n    ];\r\n\r\n    let processedValue = numericFields.includes(name) ? Number(value) : value;\r\n    if (\r\n      numericFields.includes(name) &&\r\n      ![\"longitude\", \"latitude\"].includes(name) &&\r\n      processedValue < 1\r\n    ) {\r\n      processedValue = 1;\r\n    }\r\n    dispatch(handelChange({ name, value: processedValue }));\r\n  };\r\n\r\n  const getDob = (e) => {\r\n    const { name, value } = e.target;\r\n    const formattedDate = convertToDateOnly(value.toISOString());\r\n    dispatch(handleDob({ name, date: formattedDate }));\r\n  };\r\n  const station_details = [\r\n    {\r\n      name: \"station_name\",\r\n      TextField: (\r\n        <UserInput\r\n          name={\"station_name\"}\r\n          value={station_name}\r\n          type={\"name\"}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"supervisor_int\",\r\n      TextField: (\r\n        <UserInput\r\n          name={\"supervisor_int\"}\r\n          value={supervisor_int}\r\n          type={\"number\"}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"supervisor_ext\",\r\n      TextField: (\r\n        <UserInput\r\n          name={\"supervisor_ext\"}\r\n          value={supervisor_ext}\r\n          type={\"number\"}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"location\",\r\n      TextField: (\r\n        <UserInput name={\"location\"} value={location} type={\"name\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"longitude\",\r\n      TextField: (\r\n        <UserInput name={\"longitude\"} value={longitude} type={\"number\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"latitude\",\r\n      TextField: (\r\n        <UserInput name={\"latitude\"} value={latitude} type={\"number\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"station_size\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"station_size\"}\r\n          value={station_size}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"small\", \"medium\", \"large\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"number_of_hive_boxes\",\r\n      TextField: (\r\n        <UserInput\r\n          name={\"number_of_hive_boxes\"}\r\n          value={number_of_hive_boxes}\r\n          type={\"number\"}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"status\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"status\"}\r\n          value={status}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"active\", \"inactive\", \"terminated\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"station_maintainace_history\",\r\n      TextField: (\r\n        <MultiLineInput\r\n          name={\"station_maintainace_history\"}\r\n          value={station_maintainace_history}\r\n          type={\"text\"}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"last_inspection_date\",\r\n      TextField: (\r\n        <DateRegister\r\n          name={\"last_inspection_date\"}\r\n          value={last_inspection_date}\r\n          onChange={getDob}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"next_inspection_date\",\r\n      TextField: (\r\n        <DateRegister\r\n          name={\"next_inspection_date\"}\r\n          value={next_inspection_date}\r\n          onChange={getDob}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"notes\",\r\n      TextField: (\r\n        <MultiLineInput name={\"notes\"} value={notes} type={\"text\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"sort\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"sort\"}\r\n          value={sort}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"A-Z\", \"Z-A\", \"high-low\", \"low-high\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n  const searchStations = station_details.filter((detail) =>\r\n    [\r\n      \"station_name\",\r\n      \"location\",\r\n      \"station_size\",\r\n      \"status\",\r\n      \"supervisor_int\",\r\n      \"supervisor_ext\",\r\n      \"number_of_hive_boxes\",\r\n      \"sort\",\r\n      //   \"last_inspection_date\",\r\n      //   \"next_inspection_date\",\r\n    ].includes(detail.name)\r\n  );\r\n  return { station_details, searchStations };\r\n};\r\n\r\nexport const useEquipments = () => {\r\n  const {\r\n    tool_name,\r\n    category,\r\n    quantity,\r\n    status,\r\n    storage_location,\r\n    supplier,\r\n    purchase_date,\r\n    purchase_cost,\r\n    currency,\r\n    last_maintanace_date,\r\n    next_maintanace_date,\r\n    retired,\r\n    note,\r\n    sort,\r\n  } = useSelector((store) => store.equipments);\r\n  const dispatch = useDispatch();\r\n  const getDob = (e) => {\r\n    const { name, value } = e.target;\r\n    const formattedDate = convertToDateOnly(value.toISOString());\r\n    dispatch(handleDate({ name, date: formattedDate }));\r\n  };\r\n  const getInput = (e) => {\r\n    const { name, value } = e.target;\r\n    const numericFields = [\"quantity\", \"purchase_cost\"];\r\n    let processedValue = numericFields.includes(name) ? Number(value) : value;\r\n    if (numericFields.includes(name) && processedValue < 1) {\r\n      processedValue = 1;\r\n    }\r\n\r\n    dispatch(handleChangeEquip({ name, value: processedValue }));\r\n  };\r\n  const equipmentDetails = [\r\n    {\r\n      name: \"tool_name\",\r\n      TextField: (\r\n        <UserInput name={\"tool_name\"} value={tool_name} type={\"name\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"quantity\",\r\n      TextField: (\r\n        <UserInput name={\"quantity\"} value={quantity} type={\"number\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"purchase_cost\",\r\n      TextField: (\r\n        <UserInput\r\n          name={\"purchase_cost\"}\r\n          value={purchase_cost}\r\n          type={\"number\"}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"supplier\",\r\n      TextField: (\r\n        <UserInput name={\"supplier\"} value={supplier} type={\"name\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"currency\",\r\n      TextField: (\r\n        <UserInput name={\"currency\"} value={currency} type={\"name\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"category\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"category\"}\r\n          value={category}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"beekeping\", \"carpentary\", \"processing\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"retired\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"retired\"}\r\n          value={retired}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"retired\", \"not retired\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"status\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"status\"}\r\n          value={status}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"used\", \"new\", \"need repair\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"storage_location\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"storage_location\"}\r\n          value={storage_location}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"warehouse\", \"apiary site\", \"factory\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"purchase_date\",\r\n      TextField: <DateRegister name={\"purchase_date\"} value={purchase_date} onChange={getDob} />,\r\n    },\r\n    {\r\n      name: \"last_maintanace_date\",\r\n      TextField: (\r\n        <DateRegister\r\n          name={\"last_maintanace_date\"}\r\n          value={last_maintanace_date}\r\n          onChange={getDob}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"next_maintanace_date\",\r\n      TextField: (\r\n        <DateRegister\r\n          name={\"next_maintanace_date\"}\r\n          value={next_maintanace_date}\r\n          onChange={getDob}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"note\",\r\n      TextField: (\r\n        <MultiLineInput name={\"note\"} value={note} type={\"text\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"sort\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"sort\"}\r\n          value={sort}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"high-purchase-cost\", \"low-purchase-cost\", \"A-Z\", \"Z-A\", \"recent\", \"old\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n  const searchEquipments = equipmentDetails.filter((detail) =>\r\n    [\r\n      \"tool_name\",\r\n      \"category\",\r\n      \"status\",\r\n      \"storage_location\",\r\n      \"supplier\",\r\n      \"currency\",\r\n      \"retired\",\r\n      \"quantity\",\r\n      \"purchase_cost\",\r\n      \"purchase_date\",\r\n      \"sort\",\r\n    ].includes(detail.name)\r\n  );\r\n\r\n  return { equipmentDetails, searchEquipments };\r\n};\r\n\r\nexport const useSuppliesInputs = () => {\r\n  const {\r\n    supply_name,\r\n    category,\r\n    quantity,\r\n    status,\r\n    storage_location,\r\n    supplier,\r\n    minimum_stock_level,\r\n    purchase_date,\r\n    purchase_cost,\r\n    sort,\r\n  } = useSelector((store) => store.supplies);\r\n  const dispatch = useDispatch();\r\n  const getDob = (e) => {\r\n    const { name, value } = e.target;\r\n    const formattedDate = convertToDateOnly(value.toISOString());\r\n    dispatch(handleDateSupp({ name, date: formattedDate }));\r\n  };\r\n  const getInput = (e) => {\r\n    const { name, value } = e.target;\r\n    const numericFields = [\"quantity\", \"purchase_cost\", \" minimum_stock_level\"];\r\n    let processedValue = numericFields.includes(name) ? Number(value) : value;\r\n    if (numericFields.includes(name) && processedValue < 1) {\r\n      processedValue = 1;\r\n    }\r\n    dispatch(handleChangeSupp({ name, value: processedValue }));\r\n  };\r\n  const suppliesDetails = [\r\n    {\r\n      name: \"supply_name\",\r\n      TextField: (\r\n        <UserInput name={\"supply_name\"} value={supply_name} type={\"name\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"category\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"category\"}\r\n          value={category}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"processing\", \"packaging\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"quantity\",\r\n      TextField: (\r\n        <UserInput name={\"quantity\"} value={quantity} type={\"number\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"status\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"status\"}\r\n          value={status}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"used\", \"new\", \"need repair\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"storage_location\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"storage_location\"}\r\n          value={storage_location}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"warehouse\", \"factory\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"supplier\",\r\n      TextField: (\r\n        <UserInput name={\"supplier\"} value={supplier} type={\"name\"} handleChange={getInput} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"purchase_cost\",\r\n      TextField: (\r\n        <UserInput\r\n          name={\"purchase_cost\"}\r\n          value={purchase_cost}\r\n          type={\"number\"}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"purchase_date\",\r\n      TextField: <DateRegister name={\"purchase_date\"} value={purchase_date} onChange={getDob} />,\r\n    },\r\n    {\r\n      name: \"minimum_stock_level\",\r\n      TextField: (\r\n        <UserInput\r\n          name={\"minimum_stock_level\"}\r\n          value={minimum_stock_level}\r\n          type={\"number\"}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"sort\",\r\n      TextField: (\r\n        <GenderInput\r\n          name={\"sort\"}\r\n          value={sort}\r\n          type={\"text\"}\r\n          gender={[\"---\", \"high-low\", \"low-high\", \"high-stock\", \"low-stock\", \"recent\", \"old\"]}\r\n          handleChange={getInput}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n  const searchSupplies = suppliesDetails.filter((detail) =>\r\n    [\r\n      \"supply_name\",\r\n      \"category\",\r\n      \"quantity\",\r\n      \"status\",\r\n      \"storage_location\",\r\n      \"supplier\",\r\n      \"purchase_cost\",\r\n      \"purchase_date\",\r\n    ].includes(detail.name)\r\n  );\r\n  return { suppliesDetails, searchSupplies };\r\n};\r\n","/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// prop-types is a library for typechecking of props.\r\nimport PropTypes from \"prop-types\";\r\n\r\n// @mui material components\r\nimport Card from \"@mui/material/Card\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Icon from \"@mui/material/Icon\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\n\r\n// Material Dashboard 2 React base styles\r\nimport breakpoints from \"assets/theme/base/breakpoints\";\r\n\r\n// Images\r\nimport burceMars from \"assets/images/bruce-mars.jpg\";\r\nimport backgroundImage from \"assets/images/bg-profile.jpeg\";\r\n\r\nfunction Header({ info, children }) {\r\n  const [tabsOrientation, setTabsOrientation] = useState(\"horizontal\");\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // A function that sets the orientation state of the tabs.\r\n    function handleTabsOrientation() {\r\n      return window.innerWidth < breakpoints.values.sm\r\n        ? setTabsOrientation(\"vertical\")\r\n        : setTabsOrientation(\"horizontal\");\r\n    }\r\n\r\n    /** \r\n     The event listener that's calling the handleTabsOrientation function when resizing the window.\r\n    */\r\n    window.addEventListener(\"resize\", handleTabsOrientation);\r\n\r\n    // Call the handleTabsOrientation function to set the state with the initial value.\r\n    handleTabsOrientation();\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleTabsOrientation);\r\n  }, [tabsOrientation]);\r\n\r\n  const handleSetTabValue = (event, newValue) => setTabValue(newValue);\r\n  const { image = \"\", station_name, location } = info;\r\n\r\n  return (\r\n    <MDBox position=\"relative\" mb={5}>\r\n      <MDBox\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        position=\"relative\"\r\n        minHeight=\"18.75rem\"\r\n        borderRadius=\"xl\"\r\n        sx={{\r\n          backgroundImage: ({ functions: { rgba, linearGradient }, palette: { gradients } }) =>\r\n            `${linearGradient(\r\n              rgba(gradients.info.main, 0.6),\r\n              rgba(gradients.info.state, 0.6)\r\n            )}, url(${backgroundImage})`,\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"50%\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      />\r\n      <Card\r\n        sx={{\r\n          position: \"relative\",\r\n          mt: -8,\r\n          mx: 3,\r\n          py: 2,\r\n          px: 2,\r\n        }}\r\n      >\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item>\r\n            <MDAvatar src={image} alt=\"profile-image\" size=\"xl\" shadow=\"sm\" />\r\n          </Grid>\r\n          <Grid item>\r\n            <MDBox height=\"100%\" mt={0.5} lineHeight={1}>\r\n              <MDTypography variant=\"h5\" fontWeight=\"medium\">\r\n                {station_name}\r\n              </MDTypography>\r\n              <MDTypography variant=\"button\" color=\"text\" fontWeight=\"regular\">\r\n                {location}\r\n              </MDTypography>\r\n            </MDBox>\r\n          </Grid>\r\n          {/* <Grid item xs={12} md={6} lg={4} sx={{ ml: \"auto\" }}>\r\n            <AppBar position=\"static\">\r\n              <Tabs orientation={tabsOrientation} value={tabValue} onChange={handleSetTabValue}>\r\n                <Tab\r\n                  label=\"App\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      home\r\n                    </Icon>\r\n                  }\r\n                />\r\n                <Tab\r\n                  label=\"Message\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      email\r\n                    </Icon>\r\n                  }\r\n                />\r\n                <Tab\r\n                  label=\"Settings\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      settings\r\n                    </Icon>\r\n                  }\r\n                />\r\n              </Tabs>\r\n            </AppBar>\r\n          </Grid> */}\r\n        </Grid>\r\n        {children}\r\n      </Card>\r\n    </MDBox>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  info: {\r\n    image: \"\", // Fallback image URL\r\n    station_name: \"First Name\",\r\n    location: \"Last Name\",\r\n  },\r\n  children: null,\r\n};\r\n\r\nHeader.propTypes = {\r\n  info: PropTypes.shape({\r\n    image: PropTypes.string,\r\n    station_name: PropTypes.string,\r\n    location: PropTypes.string,\r\n  }),\r\n  children: PropTypes.node,\r\n};\r\nexport default Header;\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable react/function-component-definition */\r\n/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\nimport MDBadge from \"components/MDBadge\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport React from \"react\";\r\nimport LogoAsana from \"assets/images/small-logos/logo-asana.svg\";\r\nimport { useEquipments } from \"features/equuipments/equipmentThunk\";\r\nimport { useDeleteEquipment } from \"features/equuipments/equipmentThunk\";\r\nimport { setUpdateEquipment } from \"features/equuipments/equipmentSlice\";\r\nexport default function equipmentsTableData() {\r\n  const dispatch = useDispatch();\r\n  const { deleteEquipment } = useDeleteEquipment();\r\n  const {\r\n    equipments: {\r\n      equipment = [],\r\n      totalEquipments = 0,\r\n      count = 0,\r\n      numOfPages = 0,\r\n      categoryCount = [],\r\n      statusCount = [],\r\n      storageLocationCount = [],\r\n    } = {},\r\n    refetch,\r\n    isGettingAllequipments,\r\n  } = useEquipments();\r\n  const Author = ({ image, name, retired, tool_id }) => (\r\n    <MDBox display=\"flex\" alignItems=\"center\" lineHeight={1}>\r\n      <MDAvatar src={image} name={name} size=\"sm\" />\r\n      <MDBox ml={2} lineHeight={1}>\r\n        <MDTypography display=\"block\" variant=\"button\" fontWeight=\"medium\">\r\n          <Link to={`#`}>{`${tool_id} ${name}`}</Link>\r\n        </MDTypography>\r\n        <MDTypography variant=\"caption\">{retired}</MDTypography>\r\n      </MDBox>\r\n    </MDBox>\r\n  );\r\n  const Job = ({ title, description }) => (\r\n    <MDBox lineHeight={1} textAlign=\"left\">\r\n      <MDTypography display=\"block\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n        <Link to={`#`}>{`${title}`}</Link>\r\n      </MDTypography>\r\n      <MDTypography variant=\"caption\">\r\n        <Link to={`#`}>{`quantity: ${description}`}</Link>\r\n      </MDTypography>\r\n    </MDBox>\r\n  );\r\n  const Coord = ({ title, description }) => (\r\n    <MDBox lineHeight={1} textAlign=\"left\">\r\n      <MDTypography display=\"block\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n        {title}\r\n      </MDTypography>\r\n      <MDTypography variant=\"caption\">{description}</MDTypography>\r\n    </MDBox>\r\n  );\r\n  const rows = equipment.map((single_equipment, i) => {\r\n    const {\r\n      tool_id,\r\n      tool_name,\r\n      category,\r\n      quantity,\r\n      status,\r\n      storage_location,\r\n      supplier,\r\n      purchase_date,\r\n      purchase_cost,\r\n      currency,\r\n      last_maintanace_date,\r\n      next_maintanace_date,\r\n      retired,\r\n      note,\r\n    } = single_equipment;\r\n    const payload = {\r\n      tool_id,\r\n      tool_name,\r\n      category,\r\n      quantity,\r\n      status,\r\n      storage_location,\r\n      supplier,\r\n      purchase_date,\r\n      purchase_cost,\r\n      currency,\r\n      last_maintanace_date,\r\n      next_maintanace_date,\r\n      retired,\r\n      note,\r\n    };\r\n    const handleEdit = () => {\r\n      dispatch(setUpdateEquipment(payload));\r\n    };\r\n    const handleDelete = () => {\r\n      const confirmation = window.confirm(\r\n        \"You are about to Delete an an equipment records permanently, ARE YOU SURE?\"\r\n      );\r\n      if (!confirmation) return;\r\n      deleteEquipment(tool_id);\r\n    };\r\n    return {\r\n      equipment: <Author image={LogoAsana} name={tool_name} retired={retired} tool_id={tool_id} />,\r\n      detail: <Job title={category} description={quantity} />,\r\n      status: (\r\n        <MDBox ml={-1}>\r\n          <MDBadge\r\n            badgeContent={status}\r\n            color={status === \"new\" ? \"success\" : status === \"used\" ? \"warning\" : \"error\"}\r\n            variant=\"gradient\"\r\n            size=\"sm\"\r\n          />\r\n        </MDBox>\r\n      ),\r\n      location: (\r\n        <MDBox ml={-1}>\r\n          <MDBadge\r\n            badgeContent={storage_location}\r\n            color={\r\n              storage_location === \"warehouse\"\r\n                ? \"success\"\r\n                : storage_location === \"factory\"\r\n                ? \"error\"\r\n                : \"warning\"\r\n            }\r\n            variant=\"gradient\"\r\n            size=\"sm\"\r\n          />\r\n        </MDBox>\r\n      ),\r\n      supplier: (\r\n        <MDTypography component=\"a\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          {supplier}\r\n        </MDTypography>\r\n      ),\r\n      acquired: (\r\n        <Coord\r\n          title={`Cost: ${purchase_cost ? Number(purchase_cost).toFixed(2) : \"N/A\"} ${\r\n            currency || \"\"\r\n          }`}\r\n          description={`Purchased on: ${purchase_date || \"N/A\"}`}\r\n        />\r\n      ),\r\n      maintenance: (\r\n        <Coord\r\n          title={`Last maintenance: ${last_maintanace_date || \"N/A\"}`}\r\n          description={`Next maintenance: ${next_maintanace_date || \"N/A\"}`}\r\n        />\r\n      ),\r\n      note: (\r\n        <MDTypography\r\n          title={note}\r\n          component=\"a\"\r\n          href=\"#\"\r\n          variant=\"caption\"\r\n          color=\"text\"\r\n          fontWeight=\"medium\"\r\n        >\r\n          {note.length > 20 ? `${note.slice(0, 20)}...` : note}\r\n        </MDTypography>\r\n      ),\r\n      update: (\r\n        <MDTypography component=\"a\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          <Link\r\n            onClick={() => {\r\n              handleEdit();\r\n            }}\r\n            to={`/createupdateequipment/${tool_id}`}\r\n          >\r\n            Edit\r\n          </Link>\r\n        </MDTypography>\r\n      ),\r\n      remove: (\r\n        <MDTypography component=\"a\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          <Link\r\n            onClick={() => {\r\n              handleDelete();\r\n            }}\r\n          >\r\n            Remove\r\n          </Link>\r\n        </MDTypography>\r\n      ),\r\n    };\r\n  });\r\n  return {\r\n    columns: [\r\n      { Header: \"equipment\", accessor: \"equipment\", width: \"45%\", align: \"left\" },\r\n      { Header: \"details\", accessor: \"details\", align: \"left\" },\r\n      { Header: \"status\", accessor: \"status\", align: \"center\" },\r\n      { Header: \"location\", accessor: \"location\", align: \"center\" },\r\n      { Header: \"supplier\", accessor: \"supplier\", align: \"center\" },\r\n      { Header: \"acquired\", accessor: \"acquired\", align: \"center\" },\r\n      { Header: \"maintenance\", accessor: \"maintenance\", align: \"center\" },\r\n      { Header: \"note\", accessor: \"note\", align: \"center\" },\r\n      { Header: \"update\", accessor: \"update\", align: \"center\" },\r\n      { Header: \"remove\", accessor: \"remove\", align: \"center\" },\r\n    ],\r\n    rows: rows,\r\n    numOfPages,\r\n    count,\r\n    refetch,\r\n    totalEquipments,\r\n    categoryCount,\r\n    statusCount,\r\n    storageLocationCount,\r\n    isGettingAllequipments,\r\n  };\r\n}\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { CustomButton } from \"../Button\";\r\n// import { useEmployee } from \"../../hooks/register\";\r\nimport { Loader1 } from \"../Loader\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEquipments } from \"../../hooks/DashDetails\";\r\nimport { resetValues } from \"../../features/equuipments/equipmentSlice\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport styles from \"../../layouts/styles/modal.module.scss\";\r\nconst style = {\r\n  position: \"absolute\",\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function EquipmentSearchModal({ isGettingAllequipments }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  //   const { theme } = useThemeContext();\r\n  //   const isDarkMode = theme === \"dark-theme\";\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div>\r\n        <SearchIcon\r\n          fontSize=\"medium\"\r\n          onClick={handleOpen}\r\n          sx={{ cursor: \"pointer\", fill: \"white\" }}\r\n          title=\"search\"\r\n        />\r\n      </div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={{ ...style, background: \"white\" }} className={styles.box}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            Search Equipments <CloseIcon style={{ cursor: \"pointer\" }} onClick={handleClose} />\r\n          </Typography>\r\n          <p>which equipment are you looking for?</p>\r\n          <SearchEquipments\r\n            handleClose={handleClose}\r\n            isGettingAllequipments={isGettingAllequipments}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst SearchEquipments = ({ handleClose, isGettingAllequipments }) => {\r\n  const { searchEquipments } = useEquipments();\r\n  const dispatch = useDispatch();\r\n  const resetQuery = () => {\r\n    dispatch(resetValues());\r\n  };\r\n\r\n  return (\r\n    <form className={styles.paper}>\r\n      {searchEquipments.map((input) => {\r\n        const { name, TextField } = input;\r\n        return <div key={name}>{TextField}</div>;\r\n      })}\r\n      <CustomButton\r\n        background={\"inherit\"}\r\n        backgroundhover={\"grey\"}\r\n        height={\"8vh\"}\r\n        onClick={resetQuery}\r\n        type=\"button\"\r\n        style={{\r\n          width: \"100%\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        reset\r\n      </CustomButton>\r\n      <CustomButton\r\n        background={\"inherit\"}\r\n        // background={\"#3457bf\"}\r\n        backgroundhover={\"grey\"}\r\n        height={\"8vh\"}\r\n        onClick={() => handleClose()}\r\n        type=\"button\"\r\n        style={{\r\n          width: \"100%\",\r\n          // color: \"white\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        {isGettingAllequipments === \"pending\" ? <Loader1 color=\"success\" /> : \"Find Out\"}\r\n      </CustomButton>\r\n    </form>\r\n  );\r\n};\r\nimport PropTypes from \"prop-types\";\r\n\r\nEquipmentSearchModal.propTypes = {\r\n  isGettingAllequipments: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.bool, // Adjust based on the expected type\r\n  ]).isRequired,\r\n};\r\n\r\nSearchEquipments.propTypes = {\r\n  handleClose: PropTypes.func.isRequired,\r\n  isGettingAllequipments: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.bool, // Adjust based on the expected type\r\n  ]).isRequired,\r\n};\r\n","import Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport React from \"react\";\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\nimport Footer from \"examples/Footer\";\r\nimport DataTable from \"examples/Tables/DataTable\";\r\n// Data\r\n// import employeesTableData from \"layouts/tables/data/employeesTableData\";\r\nimport projectsTableData from \"layouts/tables/data/projectsTableData\";\r\n// import { useSingleEmployee } from \"features/employees/employeesThunk\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Divider from \"@mui/material/Divider\";\r\n// @mui icons\r\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\r\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\r\nimport { Email } from \"@mui/icons-material\";\r\nimport ProfileInfoCard from \"examples/Cards/InfoCards/ProfileInfoCard\";\r\nimport ProfilesList from \"examples/Lists/ProfilesList\";\r\nimport DefaultProjectCard from \"examples/Cards/ProjectCards/DefaultProjectCard\";\r\nimport Header from \"./profile/components/Header\";\r\nimport PlatformSettings from \"./profile/components/PlatformSettings\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { useUploadEmployeeImages } from \"features/employees/employeesThunk\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CustomButton } from \"components copy\";\r\nimport { Loader1 } from \"components copy/Loader\";\r\nimport PaginationControlled from \"components copy/component's_Tables/Pagination\";\r\nimport LogoAsana from \"assets/images/small-logos/logo-asana.svg\";\r\nimport moment from \"moment\";\r\nimport equipmentsTableData from \"./data/equipmentsTableData\";\r\nimport { changePage } from \"features/equuipments/equipmentSlice\";\r\nimport EquipmentSearchModal from \"components copy/searchModals/EquipmentSearchModal\";\r\nimport { useEquipments } from \"hooks/DashDetails\";\r\nimport { useCreateEqupment } from \"features/equuipments/equipmentThunk\";\r\nimport { useUpdateEquipment } from \"features/equuipments/equipmentThunk\";\r\nimport { resetValues } from \"features/equuipments/equipmentSlice\";\r\nimport styles from \"../styles/thead.module.scss\";\r\nimport styling from \"../styles/createupdate.module.scss\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nfunction Equipments() {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    columns,\r\n    rows,\r\n    numOfPages,\r\n    count,\r\n    refetch,\r\n    totalEquipments,\r\n    categoryCount,\r\n    statusCount,\r\n    storageLocationCount,\r\n    isGettingAllequipments,\r\n  } = equipmentsTableData();\r\n  const {\r\n    pages,\r\n    tool_name,\r\n    supplier,\r\n    currency,\r\n    status,\r\n    storage_location,\r\n    retired,\r\n    category,\r\n    quantity,\r\n    purchase_cost,\r\n    purchase_date,\r\n    sort,\r\n  } = useSelector((store) => store.equipments);\r\n\r\n  const handleChange = (event, value) => {\r\n    event.preventDefault();\r\n    dispatch(changePage(value));\r\n  };\r\n  React.useEffect(() => {\r\n    refetch();\r\n  }, [\r\n    pages,\r\n    tool_name,\r\n    supplier,\r\n    currency,\r\n    status,\r\n    storage_location,\r\n    retired,\r\n    category,\r\n    quantity,\r\n    purchase_cost,\r\n    purchase_date,\r\n    sort,\r\n  ]);\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      <MDBox pt={6} pb={3}>\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <MDBox\r\n                mx={2}\r\n                mt={-3}\r\n                py={3}\r\n                px={2}\r\n                variant=\"gradient\"\r\n                bgColor=\"info\"\r\n                borderRadius=\"lg\"\r\n                coloredShadow=\"info\"\r\n              >\r\n                <MDTypography className={styles.wrapper} variant=\"h6\" color=\"white\">\r\n                  <MDBox className={styles.inner}>\r\n                    <MDTypography color=\"white\">Equipments</MDTypography>\r\n                    <MDTypography color=\"white\">\r\n                      {count}/{totalEquipments}\r\n                    </MDTypography>\r\n                  </MDBox>\r\n                  <MDBox className={styles.inner}>\r\n                    <Link onClick={() => dispatch(resetValues())} to=\"/createupdateequipment/add\">\r\n                      <AddIcon\r\n                        sx={{ fill: \"white\" }}\r\n                        fontSize=\"medium\"\r\n                        titleAccess=\"add a new equipment\"\r\n                      />\r\n                    </Link>\r\n                    <EquipmentSearchModal isGettingAllequipments={isGettingAllequipments} />\r\n                  </MDBox>\r\n                </MDTypography>\r\n              </MDBox>\r\n              <MDBox pt={3}>\r\n                <DataTable\r\n                  table={{ columns, rows }}\r\n                  isSorted={false}\r\n                  entriesPerPage={false}\r\n                  showTotalEntries={false}\r\n                  noEndBorder\r\n                />\r\n              </MDBox>\r\n            </Card>\r\n            <PaginationControlled pageDetails={{ handleChange, numOfPages, pages }} />\r\n          </Grid>\r\n        </Grid>\r\n      </MDBox>\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n}\r\nexport default Equipments;\r\n\r\n\r\n\r\nexport const CreateUpdateEquipment = () => {\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n  const { equipmentDetails } = useEquipments();\r\n  const { isCreatingEquipment, createEquipment } = useCreateEqupment();\r\n  const { isUpdatingEquipment, updateEquipment } = useUpdateEquipment();\r\n  const {\r\n    isEdit,\r\n    tool_name,\r\n    category,\r\n    quantity,\r\n    status,\r\n    storage_location,\r\n    supplier,\r\n    purchase_date,\r\n    purchase_cost,\r\n    currency,\r\n    last_maintanace_date,\r\n    next_maintanace_date,\r\n    retired,\r\n    note,\r\n  } = useSelector((store) => store.equipments);\r\n  const equipment_details = {\r\n    tool_name,\r\n    category,\r\n    quantity,\r\n    status,\r\n    storage_location,\r\n    supplier,\r\n    purchase_date,\r\n    purchase_cost,\r\n    currency,\r\n    // last_maintanace_date,\r\n    // next_maintanace_date,\r\n    note,\r\n  };\r\n\r\n  const equipmentdetailsOnEdit = {\r\n    tool_name,\r\n    category,\r\n    quantity,\r\n    status,\r\n    storage_location,\r\n    supplier,\r\n    purchase_date,\r\n    purchase_cost,\r\n    currency,\r\n    last_maintanace_date,\r\n    next_maintanace_date,\r\n    retired,\r\n    note,\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Conditionally include inspection dates in the validation check if isEdit is true\r\n    const detailsToValidate = isEdit ? equipmentdetailsOnEdit : equipment_details;\r\n\r\n    const isValid = Object.values(detailsToValidate).every(\r\n      (value) => value !== undefined && value !== null && value !== \"\"\r\n    );\r\n\r\n    if (!isValid) {\r\n      alert(\"Please fill out all required fields,especially the dates field if available.\");\r\n      return;\r\n    }\r\n\r\n    if (isEdit) {\r\n      return updateEquipment({ equipmentdetailsOnEdit, id });\r\n    }\r\n\r\n    createEquipment(equipment_details);\r\n  };\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      {/* <MDBox mb={2} /> */}\r\n      {/* <Header info={{ image, first_name, last_name, role }}> */}\r\n      <MDBox mt={5} mb={3}>\r\n        <Grid className={styling.wrapper} container spacing={1}>\r\n          {/* <Grid item xs={12} md={6} xl={4} sx={{ display: \"flex\" }}>\r\n            <Divider orientation=\"vertical\" sx={{ ml: -2, mr: 1 }} /> */}\r\n          <div>\r\n            <div>\r\n              <Link to={`/equipments`}>\r\n                <ArrowBackIcon />\r\n              </Link>\r\n              <h6>{isEdit ? `Update  ${tool_name}'s details` : \"Create a new equipment\"}</h6>\r\n              <div></div>\r\n            </div>\r\n            <form className={styling.form} onSubmit={handleSubmit}>\r\n              {equipmentDetails\r\n                .filter((detail) => {\r\n                  if (\r\n                    detail.name === \"sort\" || // Exclude 'sort' in all cases\r\n                    (!isEdit &&\r\n                      (detail.name === \"retired\" ||\r\n                        detail.name === \"last_maintanace_date\" ||\r\n                        detail.name === \"next_maintanace_date\"))\r\n                  ) {\r\n                    return false; // Exclude these fields\r\n                  }\r\n                  return true; // Include all other fields\r\n                })\r\n                .map((detail) => {\r\n                  const { name, TextField } = detail;\r\n                  return <div key={name}>{TextField}</div>;\r\n                })}\r\n\r\n              <CustomButton\r\n                background={\"inherit\"}\r\n                backgroundhover={\"grey\"}\r\n                size={\"100%\"}\r\n                height={\"3vh\"}\r\n                type=\"submit\"\r\n                // disabled={!isValid}\r\n              >\r\n                {isCreatingEquipment === \"pending\" || isUpdatingEquipment === \"pending\" ? (\r\n                  <Loader1 />\r\n                ) : isEdit ? (\r\n                  \"Update\"\r\n                ) : (\r\n                  \"Submit\"\r\n                )}\r\n              </CustomButton>\r\n            </form>\r\n          </div>\r\n          {/* <Divider orientation=\"vertical\" sx={{ mx: 0 }} />\r\n          </Grid> */}\r\n        </Grid>\r\n      </MDBox>\r\n      {/* </Header> */}\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;"],"names":["useDashDetails_1","dispatch","useDispatch","station_name","supervisor_int","supervisor_ext","location","longitude","latitude","station_size","number_of_hive_boxes","status","station_maintainace_history","last_inspection_date","next_inspection_date","notes","sort","useSelector","store","stations","getInput","e","name","value","target","numericFields","processedValue","includes","Number","handelChange","getDob","formattedDate","convertToDateOnly","toISOString","handleDob","date","station_details","TextField","_jsx","UserInput","type","handleChange","GenderInput","gender","MultiLineInput","DateRegister","onChange","searchStations","filter","detail","useEquipments","tool_name","category","quantity","storage_location","supplier","purchase_date","purchase_cost","currency","last_maintanace_date","next_maintanace_date","retired","note","equipments","handleDate","handleChangeEquip","equipmentDetails","searchEquipments","useSuppliesInputs","supply_name","minimum_stock_level","supplies","handleChangeSupp","suppliesDetails","handleDateSupp","searchSupplies","Header","_ref","info","children","tabsOrientation","setTabsOrientation","useState","tabValue","setTabValue","useEffect","handleTabsOrientation","window","innerWidth","breakpoints","values","sm","addEventListener","removeEventListener","image","_jsxs","MDBox","position","mb","display","alignItems","minHeight","borderRadius","sx","backgroundImage","_ref2","functions","rgba","linearGradient","palette","gradients","main","state","backgroundSize","backgroundPosition","overflow","Card","mt","mx","py","px","Grid","container","spacing","item","MDAvatar","src","alt","size","shadow","height","lineHeight","MDTypography","variant","fontWeight","color","defaultProps","equipmentsTableData","deleteEquipment","useDeleteEquipment","equipment","totalEquipments","count","numOfPages","categoryCount","statusCount","storageLocationCount","refetch","isGettingAllequipments","Author","tool_id","ml","Link","to","Job","title","description","textAlign","Coord","_ref3","columns","accessor","width","align","rows","map","single_equipment","i","payload","LogoAsana","MDBadge","badgeContent","component","acquired","toFixed","maintenance","href","length","slice","update","onClick","setUpdateEquipment","remove","confirm","style","bgcolor","boxShadow","p","EquipmentSearchModal","open","setOpen","React","handleClose","className","styles","wrapper","SearchIcon","fontSize","handleOpen","cursor","fill","Modal","onClose","Box","background","box","Typography","id","CloseIcon","SearchEquipments","paper","input","CustomButton","backgroundhover","resetQuery","resetValues","Loader1","pages","DashboardLayout","DashboardNavbar","pt","pb","xs","bgColor","coloredShadow","inner","AddIcon","titleAccess","DataTable","table","isSorted","entriesPerPage","showTotalEntries","noEndBorder","PaginationControlled","pageDetails","event","preventDefault","changePage","Footer","CreateUpdateEquipment","useParams","isCreatingEquipment","createEquipment","useCreateEqupment","isUpdatingEquipment","updateEquipment","useUpdateEquipment","isEdit","equipment_details","equipmentdetailsOnEdit","styling","ArrowBackIcon","form","onSubmit","detailsToValidate","Object","every","undefined","alert","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}