{"version":3,"file":"static/js/683.59d6cffc.chunk.js","mappings":"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","sources":["layouts/tables/data/employeesTableData.js","layouts/users/profile/components/Header/index.js","layouts/users/data/usersTableData.js","layouts/users/index.js"],"sourcesContent":["/* eslint-disable react/prop-types */\r\n/* eslint-disable react/function-component-definition */\r\n/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\nimport MDBadge from \"components/MDBadge\";\r\nimport { useAllEmployess } from \"features/employees/employeesThunk\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUpdateEmployee } from \"features/employees/employeesSlice\";\r\nimport React from \"react\";\r\n\r\nexport default function data() {\r\n  const { isGettingAllEmployees, employees, refetch } = useAllEmployess();\r\n  const {\r\n    employees: Employees = [],\r\n    numOfPages = 1,\r\n    totalEmployees = 0,\r\n    count = 0,\r\n    salaryData = [],\r\n    newHires = [],\r\n    newHiresCount = [],\r\n    employeesGenderCount = [],\r\n    departmentCount = [],\r\n    employmentStatusCount = [],\r\n    employmentTypeCount = [],\r\n  } = employees || {};\r\n  // console.log(Employees);\r\n  const Author = ({ image, name, email, emp_id }) => (\r\n    <MDBox display=\"flex\" alignItems=\"center\" lineHeight={1}>\r\n      <MDAvatar src={image} name={name} size=\"sm\" />\r\n      <MDBox ml={2} lineHeight={1}>\r\n        <MDTypography display=\"block\" variant=\"button\" fontWeight=\"medium\">\r\n          <Link to={`/employees/${emp_id}`}>{`${emp_id} ${name}`}</Link>\r\n        </MDTypography>\r\n        <MDTypography variant=\"caption\">{email}</MDTypography>\r\n      </MDBox>\r\n    </MDBox>\r\n  );\r\n  const Job = ({ title, description }) => (\r\n    <MDBox lineHeight={1} textAlign=\"left\">\r\n      <MDTypography display=\"block\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n        {title}\r\n      </MDTypography>\r\n      <MDTypography variant=\"caption\">{description}</MDTypography>\r\n    </MDBox>\r\n  );\r\n  const rows = Employees.map((employee, i) => {\r\n    const {\r\n      emp_id,\r\n      first_name,\r\n      last_name,\r\n      gender,\r\n      email,\r\n      dob,\r\n      phone,\r\n      image,\r\n      role,\r\n      address,\r\n      department,\r\n      employment_type,\r\n      employment_status,\r\n      salary,\r\n      joining_date,\r\n      skill,\r\n      notes,\r\n      // createdAt,\r\n      // updatedAt,\r\n    } = employee;\r\n    const payload = {\r\n      emp_id,\r\n      first_name,\r\n      last_name,\r\n      gender,\r\n      email,\r\n      dob,\r\n      phone,\r\n      role,\r\n      address,\r\n      department,\r\n      employment_type,\r\n      employment_status,\r\n      salary,\r\n      joining_date,\r\n      skill,\r\n      notes,\r\n    };\r\n    const dispatch = useDispatch();\r\n    const handleEdit = () => {\r\n      dispatch(setUpdateEmployee(payload));\r\n    };\r\n    return {\r\n      employee: (\r\n        <Author image={image} name={`${first_name} ${last_name}`} email={email} emp_id={emp_id} />\r\n      ),\r\n      function: <Job title={role} description={department} />,\r\n      gender: (\r\n        <MDBox ml={-1}>\r\n          <MDBadge\r\n            badgeContent={gender}\r\n            color={gender === \"male\" ? \"success\" : \"primary\"}\r\n            variant=\"gradient\"\r\n            size=\"sm\"\r\n          />\r\n        </MDBox>\r\n      ),\r\n      phone: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          {phone}\r\n        </MDTypography>\r\n      ),\r\n      dob: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          {dob}\r\n        </MDTypography>\r\n      ),\r\n      action: (\r\n        <MDTypography component=\"a\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          <Link\r\n            onClick={() => {\r\n              handleEdit();\r\n            }}\r\n            to={`/admin/createupdateemployees/${emp_id}`}\r\n          >\r\n            Edit\r\n          </Link>\r\n        </MDTypography>\r\n      ),\r\n    };\r\n  });\r\n  const {\r\n    first_name,\r\n    last_name,\r\n    employment_type,\r\n    employment_status,\r\n    dob,\r\n    joining_date,\r\n    role,\r\n    salaryRange,\r\n    pages,\r\n    sort,\r\n  } = useSelector((store) => store.employees);\r\n  React.useEffect(() => {\r\n    refetch();\r\n  }, [\r\n    first_name,\r\n    last_name,\r\n    employment_type,\r\n    employment_status,\r\n    dob,\r\n    joining_date,\r\n    role,\r\n    pages,\r\n    salaryRange,\r\n    sort,\r\n  ]);\r\n  return {\r\n    columns: [\r\n      { Header: \"employee\", accessor: \"employee\", width: \"45%\", align: \"left\" },\r\n      { Header: \"function\", accessor: \"function\", align: \"left\" },\r\n      { Header: \"gender\", accessor: \"gender\", align: \"center\" },\r\n      { Header: \"phone\", accessor: \"phone\", align: \"center\" },\r\n      { Header: \"dob\", accessor: \"dob\", align: \"center\" },\r\n      { Header: \"action\", accessor: \"action\", align: \"center\" },\r\n    ],\r\n    rows: rows,\r\n    numOfPages,\r\n    totalEmployees,\r\n    count,\r\n    salaryData,\r\n    newHires,\r\n    newHiresCount,\r\n    employeesGenderCount,\r\n    departmentCount,\r\n    employmentStatusCount,\r\n    employmentTypeCount,\r\n    isGettingAllEmployees,\r\n    pages,\r\n  };\r\n}\r\n","/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// prop-types is a library for typechecking of props.\r\nimport PropTypes from \"prop-types\";\r\n\r\n// @mui material components\r\nimport Card from \"@mui/material/Card\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Icon from \"@mui/material/Icon\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\n\r\n// Material Dashboard 2 React base styles\r\nimport breakpoints from \"assets/theme/base/breakpoints\";\r\n\r\n// Images\r\nimport burceMars from \"assets/images/bruce-mars.jpg\";\r\nimport backgroundImage from \"assets/images/bg-profile.jpeg\";\r\n\r\nfunction Header({ info, children }) {\r\n  const [tabsOrientation, setTabsOrientation] = useState(\"horizontal\");\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // A function that sets the orientation state of the tabs.\r\n    function handleTabsOrientation() {\r\n      return window.innerWidth < breakpoints.values.sm\r\n        ? setTabsOrientation(\"vertical\")\r\n        : setTabsOrientation(\"horizontal\");\r\n    }\r\n\r\n    /** \r\n     The event listener that's calling the handleTabsOrientation function when resizing the window.\r\n    */\r\n    window.addEventListener(\"resize\", handleTabsOrientation);\r\n\r\n    // Call the handleTabsOrientation function to set the state with the initial value.\r\n    handleTabsOrientation();\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleTabsOrientation);\r\n  }, [tabsOrientation]);\r\n\r\n  const handleSetTabValue = (event, newValue) => setTabValue(newValue);\r\n  const { image, fullname, address, role } = info;\r\n\r\n  return (\r\n    <MDBox position=\"relative\" mb={5}>\r\n      <MDBox\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        position=\"relative\"\r\n        minHeight=\"18.75rem\"\r\n        borderRadius=\"xl\"\r\n        sx={{\r\n          backgroundImage: ({ functions: { rgba, linearGradient }, palette: { gradients } }) =>\r\n            `${linearGradient(\r\n              rgba(gradients.info.main, 0.6),\r\n              rgba(gradients.info.state, 0.6)\r\n            )}, url(${backgroundImage})`,\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"50%\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      />\r\n      <Card\r\n        sx={{\r\n          position: \"relative\",\r\n          mt: -8,\r\n          mx: 3,\r\n          py: 2,\r\n          px: 2,\r\n        }}\r\n      >\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item>\r\n            <MDAvatar src={image} alt=\"profile-image\" size=\"xl\" shadow=\"sm\" />\r\n          </Grid>\r\n          <Grid item>\r\n            <MDBox height=\"100%\" mt={0.5} lineHeight={1}>\r\n              <MDTypography variant=\"h5\" fontWeight=\"medium\">\r\n                {fullname}\r\n              </MDTypography>\r\n              <MDTypography variant=\"button\" color=\"text\" fontWeight=\"regular\">\r\n                {address}\r\n              </MDTypography>\r\n            </MDBox>\r\n          </Grid>\r\n          {/* <Grid item xs={12} md={6} lg={4} sx={{ ml: \"auto\" }}>\r\n            <AppBar position=\"static\">\r\n              <Tabs orientation={tabsOrientation} value={tabValue} onChange={handleSetTabValue}>\r\n                <Tab\r\n                  label=\"App\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      home\r\n                    </Icon>\r\n                  }\r\n                />\r\n                <Tab\r\n                  label=\"Message\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      email\r\n                    </Icon>\r\n                  }\r\n                />\r\n                <Tab\r\n                  label=\"Settings\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      settings\r\n                    </Icon>\r\n                  }\r\n                />\r\n              </Tabs>\r\n            </AppBar>\r\n          </Grid> */}\r\n        </Grid>\r\n        {children}\r\n      </Card>\r\n    </MDBox>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  info: {\r\n    image: \"\", // Fallback image URL\r\n    fullname: \"First Name\",\r\n    address: \"Last Name\",\r\n    role: \"Role\",\r\n  },\r\n  children: null,\r\n};\r\n\r\nHeader.propTypes = {\r\n  info: PropTypes.shape({\r\n    image: PropTypes.string,\r\n    fullname: PropTypes.string,\r\n    address: PropTypes.string,\r\n    role: PropTypes.string,\r\n  }),\r\n  children: PropTypes.node,\r\n};\r\nexport default Header;\r\n","import MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\nimport MDBadge from \"components/MDBadge\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport React from \"react\";\r\nimport { usegetAllUser } from \"features/users/userThunk\";\r\n\r\nconst Author = ({ image, name, email, user_id }) => (\r\n  <MDBox display=\"flex\" alignItems=\"center\" lineHeight={1}>\r\n    <MDAvatar src={image} name={name} size=\"sm\" />\r\n    <MDBox ml={2} lineHeight={1}>\r\n      <MDTypography display=\"block\" variant=\"button\" fontWeight=\"medium\">\r\n        <Link title=\"check details\" to={`/users/${user_id}`}>{`${user_id} ${name}`}</Link>\r\n      </MDTypography>\r\n      <MDTypography variant=\"caption\">{email}</MDTypography>\r\n    </MDBox>\r\n  </MDBox>\r\n);\r\nconst Job = ({ title, description }) => (\r\n  <MDBox lineHeight={1} textAlign=\"left\">\r\n    <MDTypography\r\n      display=\"block\"\r\n      variant=\"caption\"\r\n      color={title === \"admin\" ? \"error\" : \"warning\"}\r\n      fontWeight=\"medium\"\r\n    >\r\n      {title}\r\n    </MDTypography>\r\n    <MDTypography variant=\"caption\">{description}</MDTypography>\r\n  </MDBox>\r\n);\r\nexport default function usersTableData() {\r\n  // const { isGettingSingleUser, singleuser, refetch: refetchSingleUser } = useSingleUser();\r\n  const { blacklistUser, blacklisting } = useBlacklistUser();\r\n  const { users, refetch, isGettingAllUser } = usegetAllUser();\r\n  const {\r\n    users: Users = [],\r\n    totalUsers = 0,\r\n    count = 0,\r\n    numOfPages = 1,\r\n    genderCount = [],\r\n    verificationCount = [],\r\n  } = users || {};\r\n\r\n  const rows = Users.map((user, i) => {\r\n    const {\r\n      user_id,\r\n      fullname,\r\n      email,\r\n      phone,\r\n      gender,\r\n      image,\r\n      role,\r\n      address,\r\n      emailNotification,\r\n      blacklisted,\r\n      isVerified,\r\n    } = user;\r\n    const handleActivation = () => {\r\n      const confirmation = window.confirm(\r\n        `You are about to ${blacklisted ? \"activate\" : \"blacklist\"} a user, ARE YOU SURE?`\r\n      );\r\n\r\n      if (!confirmation) return;\r\n\r\n      if (blacklisted) {\r\n        // If the user is blacklisted, activate them\r\n        blacklistUser({ user_id, blacklist: false, isValid: true });\r\n        console.log(\"User activated\");\r\n      } else {\r\n        // If the user is not blacklisted, deactivate them\r\n        blacklistUser({ user_id, blacklist: true, isValid: false });\r\n        console.log(\"User deactivated\");\r\n      }\r\n    };\r\n    return {\r\n      users: <Author image={image} name={`${fullname}`} email={email} user_id={user_id} />,\r\n      details: <Job title={role} description={address} />,\r\n      gender: (\r\n        <MDBox ml={-1}>\r\n          <MDBadge\r\n            badgeContent={gender}\r\n            color={gender === \"male\" ? \"success\" : \"primary\"}\r\n            variant=\"gradient\"\r\n            size=\"sm\"\r\n          />\r\n        </MDBox>\r\n      ),\r\n      phone: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          {phone}\r\n        </MDTypography>\r\n      ),\r\n      notification: (\r\n        <MDBox ml={-1}>\r\n          <MDBadge\r\n            badgeContent={emailNotification ? \"Disabled\" : \"Enabled\"}\r\n            color={emailNotification ? \"error\" : \"success\"}\r\n            variant=\"gradient\"\r\n            size=\"sm\"\r\n          />\r\n        </MDBox>\r\n      ),\r\n      verified: (\r\n        <MDBox ml={-1}>\r\n          <MDBadge\r\n            badgeContent={isVerified ? \"Verified\" : \"Unverified\"}\r\n            color={isVerified ? \"success\" : \"warning\"}\r\n            variant=\"gradient\"\r\n            size=\"sm\"\r\n          />\r\n        </MDBox>\r\n      ),\r\n      blacklisted: (\r\n        <MDBox ml={-1}>\r\n          <MDBadge\r\n            badgeContent={blacklisted ? \"Blacklisted\" : \"Active\"}\r\n            color={blacklisted ? \"error\" : \"success\"}\r\n            variant=\"gradient\"\r\n            size=\"sm\"\r\n          />\r\n        </MDBox>\r\n      ),\r\n      action: (\r\n        <MDTypography component=\"a\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          <Link\r\n            onClick={() => {\r\n              handleActivation();\r\n            }}\r\n          >\r\n            {blacklisted ? \"Activate user\" : \"Blacklist user\"}\r\n          </Link>\r\n        </MDTypography>\r\n      ),\r\n      // stats: (\r\n      //   <MDTypography component=\"a\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n      //     <Link to={`/users/${user_id}`}>check</Link>\r\n      //   </MDTypography>\r\n      // ),\r\n    };\r\n  });\r\n  return {\r\n    columns: [\r\n      { Header: \"users\", accessor: \"users\", width: \"45%\", align: \"left\" },\r\n      // { Header: \"role\", accessor: \"role\", align: \"center\" },\r\n      { Header: \"details\", accessor: \"details\", align: \"left\" },\r\n      { Header: \"gender\", accessor: \"gender\", align: \"center\" },\r\n      { Header: \"phone\", accessor: \"phone\", align: \"center\" },\r\n      { Header: \"notification\", accessor: \"notification\", align: \"center\" },\r\n      { Header: \"verified\", accessor: \"verified\", align: \"center\" },\r\n      { Header: \"blacklisted\", accessor: \"blacklisted\", align: \"center\" },\r\n      { Header: \"action\", accessor: \"action\", align: \"center\" },\r\n      // { Header: \"stats\", accessor: \"stats\", align: \"center\" },\r\n    ],\r\n    rows: rows,\r\n    numOfPages,\r\n    count,\r\n    totalUsers,\r\n    genderCount,\r\n    verificationCount,\r\n    refetch,\r\n    isGettingAllUser,\r\n    blacklisting,\r\n  };\r\n}\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { useSingleUser } from \"features/users/userThunk\";\r\nimport { useBlacklistUser } from \"features/users/userThunk\";\r\n\r\n// PropTypes validation for the Author component\r\nAuthor.propTypes = {\r\n  image: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  user_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n};\r\n\r\n// PropTypes validation for the Job component\r\nJob.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n};\r\n\r\n// PropTypes validation for the rows array\r\nusersTableData.propTypes = {\r\n  rows: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      users: PropTypes.element.isRequired,\r\n      details: PropTypes.element.isRequired,\r\n      gender: PropTypes.element.isRequired,\r\n      phone: PropTypes.element.isRequired,\r\n      blacklisted: PropTypes.element.isRequired,\r\n      notification: PropTypes.element.isRequired,\r\n      verified: PropTypes.element.isRequired,\r\n      action: PropTypes.element.isRequired,\r\n    })\r\n  ).isRequired,\r\n  numOfPages: PropTypes.number.isRequired,\r\n  count: PropTypes.number.isRequired,\r\n  totalUsers: PropTypes.number.isRequired,\r\n  genderCount: PropTypes.arrayOf(PropTypes.string),\r\n  verificationCount: PropTypes.arrayOf(PropTypes.string),\r\n  refetch: PropTypes.func.isRequired,\r\n  isGettingAllUser: PropTypes.bool.isRequired,\r\n};\r\n\r\n// export default usersTableData;\r\n","import Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport React from \"react\";\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\nimport Footer from \"examples/Footer\";\r\nimport DataTable from \"examples/Tables/DataTable\";\r\n// Data\r\nimport employeesTableData from \"layouts/tables/data/employeesTableData\";\r\nimport projectsTableData from \"layouts/tables/data/projectsTableData\";\r\nimport { useSingleEmployee } from \"features/employees/employeesThunk\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Divider from \"@mui/material/Divider\";\r\n// @mui icons\r\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\r\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\r\nimport { Email } from \"@mui/icons-material\";\r\nimport ProfileInfoCard from \"examples/Cards/InfoCards/ProfileInfoCard\";\r\nimport ProfilesList from \"examples/Lists/ProfilesList\";\r\nimport DefaultProjectCard from \"examples/Cards/ProjectCards/DefaultProjectCard\";\r\nimport Header from \"./profile/components/Header\";\r\nimport PlatformSettings from \"./profile/components/PlatformSettings\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\n// import { useEmployee } from \"hooks/Register\";\r\n// import { useCreateEmployee } from \"features/employees/employeesThunk\";\r\n// import { useUpdateEmployee } from \"features/employees/employeesThunk\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { useUploadEmployeeImages } from \"features/employees/employeesThunk\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { InputFileUpload } from \"components copy\";\r\nimport { CustomButton } from \"components copy\";\r\nimport { Loader1 } from \"components copy/Loader\";\r\n// import { handleReset } from \"features/employees/employeesSlice\";\r\n// import EmployeeSearchModal from \"components copy/searchModals/EmployeeSearchModal\";\r\nimport PaginationControlled from \"components copy/component's_Tables/Pagination\";\r\n// import { changePage } from \"features/employees/employeesSlice\";\r\nimport usersTableData from \"./data/usersTableData\";\r\nimport { changePage } from \"features/users/userSlice\";\r\nimport { UserSearchModal } from \"components copy\";\r\nimport { useSingleUser } from \"features/users/userThunk\";\r\nimport styles from \"../styles/thead.module.scss\";\r\nimport styling from \"../styles/createupdate.module.scss\";\r\nfunction Users() {\r\n  const {\r\n    columns,\r\n    rows,\r\n    numOfPages,\r\n    count,\r\n    totalUsers,\r\n    genderCount,\r\n    verificationCount,\r\n    refetch,\r\n    isGettingAllUser,\r\n    blacklisting,\r\n  } = usersTableData();\r\n  const dispatch = useDispatch();\r\n  const {\r\n    gendersearch,\r\n    isVerified,\r\n    blacklisted,\r\n    subscribed,\r\n    sort,\r\n    pages,\r\n    email,\r\n    fullname,\r\n    phone,\r\n    gender,\r\n  } = useSelector((store) => store.users);\r\n\r\n  const handleChange = (event, value) => {\r\n    event.preventDefault();\r\n    dispatch(changePage(value));\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    refetch();\r\n  }, [\r\n    gendersearch,\r\n    isVerified,\r\n    blacklisted,\r\n    subscribed,\r\n    sort,\r\n    pages,\r\n    email,\r\n    fullname,\r\n    phone,\r\n    gender,\r\n    blacklisting,\r\n  ]);\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      <MDBox pt={6} pb={3}>\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <MDBox\r\n                mx={2}\r\n                mt={-3}\r\n                py={3}\r\n                px={2}\r\n                variant=\"gradient\"\r\n                bgColor=\"info\"\r\n                borderRadius=\"lg\"\r\n                coloredShadow=\"info\"\r\n              >\r\n                <MDTypography className={styles.wrapper} variant=\"h6\" color=\"white\">\r\n                  <MDBox className={styles.inner}>\r\n                    <MDTypography color=\"white\">Users</MDTypography>\r\n                    <MDTypography color=\"white\">\r\n                      {count}/{totalUsers}\r\n                    </MDTypography>\r\n                  </MDBox>\r\n                  <MDBox className={styles.inner}>\r\n                    <UserSearchModal isGettingAllUser={isGettingAllUser} />\r\n                  </MDBox>\r\n                </MDTypography>\r\n              </MDBox>\r\n              <MDBox pt={3}>\r\n                <DataTable\r\n                  table={{ columns, rows }}\r\n                  isSorted={false}\r\n                  entriesPerPage={false}\r\n                  showTotalEntries={false}\r\n                  noEndBorder\r\n                />\r\n              </MDBox>\r\n            </Card>\r\n            <PaginationControlled pageDetails={{ handleChange, numOfPages, pages }} />\r\n          </Grid>\r\n        </Grid>\r\n      </MDBox>\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n}\r\nexport default Users;\r\n\r\nexport function SingleUser() {\r\n  const { id } = useParams();\r\n  const { isGettingSingleUser, singleuser, refetch } = useSingleUser(id);\r\n  const { user, deliveryStatusCount = [], paymentStatusCount = [] } = singleuser || {};\r\n  const {\r\n    address,\r\n    blacklisted,\r\n    email,\r\n    emailNotification,\r\n    fullname,\r\n    gender,\r\n    image,\r\n    isVerified,\r\n    phone,\r\n    role,\r\n    user_id,\r\n  } = user ?? {};\r\n  React.useEffect(() => {\r\n    refetch();\r\n  }, [id]);\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      <MDBox mb={2} />\r\n      <Header info={{ image, fullname, address, role }}>\r\n        <MDBox mt={5} mb={3}>\r\n          <Link to=\"/users\">\r\n            {\" \"}\r\n            <ArrowBackIcon />\r\n          </Link>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} md={6} xl={4} sx={{ display: \"flex\" }}>\r\n              <Divider orientation=\"vertical\" sx={{ ml: -2, mr: 1 }} />\r\n              <ProfileInfoCard\r\n                title=\"\"\r\n                description=\"\"\r\n                info={{\r\n                  fullname,\r\n                  id: user_id,\r\n                  email,\r\n                  mobile: phone,\r\n                }}\r\n                shadow={false}\r\n              />\r\n              <Divider orientation=\"vertical\" sx={{ mx: 0 }} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6} xl={4} sx={{ display: \"flex\" }}>\r\n              <Divider orientation=\"vertical\" sx={{ ml: -2, mr: 1 }} />\r\n              <ProfileInfoCard\r\n                title=\"\"\r\n                description=\"\"\r\n                info={{\r\n                  address,\r\n                  gender,\r\n                  blacklisted: blacklisted ? \"YES\" : \"No\",\r\n                  Notification: emailNotification ? \"YES\" : \"No\",\r\n                }}\r\n                shadow={false}\r\n              />\r\n              <Divider orientation=\"vertical\" sx={{ mx: 0 }} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6} xl={4} sx={{ display: \"flex\" }}>\r\n              <Divider orientation=\"vertical\" sx={{ ml: -2, mr: 1 }} />\r\n              <ProfileInfoCard\r\n                title=\"\"\r\n                description=\"\"\r\n                info={{\r\n                  Verified: isVerified ? \"YES\" : \"No\",\r\n                  ...(paymentStatusCount.length > 0 && {\r\n                    paymentStatusCount: paymentStatusCount\r\n                      .map(\r\n                        ({ paymentStatus, count }, index) =>\r\n                          `Order ${index + 1}: Status: ${paymentStatus}, Number: ${count}`\r\n                      )\r\n                      .join(\" | \"), // Join them as a single string with a separator like \" | \" or \"\\n\"\r\n                  }),\r\n                  ...(deliveryStatusCount.length > 0 && {\r\n                    deliveryStatusCount: deliveryStatusCount\r\n                      .map(\r\n                        ({ deliveryStatus, count }, index) =>\r\n                          `delivery ${index + 1}: Status: ${deliveryStatus}, Number: ${count}`\r\n                      )\r\n                      .join(\" | \"), // Join them as a single string with a separator like \" | \" or \"\\n\"\r\n                  }),\r\n                }}\r\n                shadow={false}\r\n              />\r\n              <Divider orientation=\"vertical\" sx={{ mx: 0 }} />\r\n            </Grid>\r\n          </Grid>\r\n        </MDBox>\r\n      </Header>\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n}\r\n"],"names":["data","isGettingAllEmployees","employees","refetch","useAllEmployess","Employees","numOfPages","totalEmployees","count","salaryData","newHires","newHiresCount","employeesGenderCount","departmentCount","employmentStatusCount","employmentTypeCount","Author","_ref","image","name","email","emp_id","_jsxs","MDBox","display","alignItems","lineHeight","children","_jsx","MDAvatar","src","size","ml","MDTypography","variant","fontWeight","Link","to","Job","_ref2","title","description","textAlign","color","rows","map","employee","i","first_name","last_name","gender","dob","phone","role","address","department","employment_type","employment_status","salary","joining_date","skill","notes","payload","dispatch","useDispatch","function","MDBadge","badgeContent","component","href","action","onClick","setUpdateEmployee","salaryRange","pages","sort","useSelector","store","React","columns","Header","accessor","width","align","info","tabsOrientation","setTabsOrientation","useState","tabValue","setTabValue","useEffect","handleTabsOrientation","window","innerWidth","breakpoints","values","sm","addEventListener","removeEventListener","fullname","position","mb","minHeight","borderRadius","sx","backgroundImage","functions","rgba","linearGradient","palette","gradients","main","state","backgroundSize","backgroundPosition","overflow","Card","mt","mx","py","px","Grid","container","spacing","item","alt","shadow","height","defaultProps","user_id","usersTableData","blacklistUser","blacklisting","useBlacklistUser","users","isGettingAllUser","usegetAllUser","Users","totalUsers","genderCount","verificationCount","user","emailNotification","blacklisted","isVerified","details","notification","verified","confirm","blacklist","isValid","console","log","gendersearch","subscribed","DashboardLayout","DashboardNavbar","pt","pb","xs","bgColor","coloredShadow","className","styles","wrapper","inner","UserSearchModal","DataTable","table","isSorted","entriesPerPage","showTotalEntries","noEndBorder","PaginationControlled","pageDetails","handleChange","event","value","preventDefault","changePage","Footer","SingleUser","id","useParams","isGettingSingleUser","singleuser","useSingleUser","deliveryStatusCount","paymentStatusCount","ArrowBackIcon","md","xl","Divider","orientation","mr","ProfileInfoCard","mobile","Notification","Verified","length","index","paymentStatus","join","deliveryStatus"],"sourceRoot":""}