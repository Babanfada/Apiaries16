{"version":3,"file":"static/js/239.5385ad4c.chunk.js","mappings":"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","sources":["layouts/supplies/profile/components/Header/index.js","layouts/supplies/data/suppliesTableData.js","components copy/searchModals/SupplySearchModal.jsx","layouts/supplies/index.js"],"sourcesContent":["/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// prop-types is a library for typechecking of props.\r\nimport PropTypes from \"prop-types\";\r\n\r\n// @mui material components\r\nimport Card from \"@mui/material/Card\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Icon from \"@mui/material/Icon\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\n\r\n// Material Dashboard 2 React base styles\r\nimport breakpoints from \"assets/theme/base/breakpoints\";\r\n\r\n// Images\r\nimport burceMars from \"assets/images/bruce-mars.jpg\";\r\nimport backgroundImage from \"assets/images/bg-profile.jpeg\";\r\n\r\nfunction Header({ info, children }) {\r\n  const [tabsOrientation, setTabsOrientation] = useState(\"horizontal\");\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // A function that sets the orientation state of the tabs.\r\n    function handleTabsOrientation() {\r\n      return window.innerWidth < breakpoints.values.sm\r\n        ? setTabsOrientation(\"vertical\")\r\n        : setTabsOrientation(\"horizontal\");\r\n    }\r\n\r\n    /** \r\n     The event listener that's calling the handleTabsOrientation function when resizing the window.\r\n    */\r\n    window.addEventListener(\"resize\", handleTabsOrientation);\r\n\r\n    // Call the handleTabsOrientation function to set the state with the initial value.\r\n    handleTabsOrientation();\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleTabsOrientation);\r\n  }, [tabsOrientation]);\r\n\r\n  const handleSetTabValue = (event, newValue) => setTabValue(newValue);\r\n  const { image = \"\", station_name, location } = info;\r\n\r\n  return (\r\n    <MDBox position=\"relative\" mb={5}>\r\n      <MDBox\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        position=\"relative\"\r\n        minHeight=\"18.75rem\"\r\n        borderRadius=\"xl\"\r\n        sx={{\r\n          backgroundImage: ({ functions: { rgba, linearGradient }, palette: { gradients } }) =>\r\n            `${linearGradient(\r\n              rgba(gradients.info.main, 0.6),\r\n              rgba(gradients.info.state, 0.6)\r\n            )}, url(${backgroundImage})`,\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"50%\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      />\r\n      <Card\r\n        sx={{\r\n          position: \"relative\",\r\n          mt: -8,\r\n          mx: 3,\r\n          py: 2,\r\n          px: 2,\r\n        }}\r\n      >\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item>\r\n            <MDAvatar src={image} alt=\"profile-image\" size=\"xl\" shadow=\"sm\" />\r\n          </Grid>\r\n          <Grid item>\r\n            <MDBox height=\"100%\" mt={0.5} lineHeight={1}>\r\n              <MDTypography variant=\"h5\" fontWeight=\"medium\">\r\n                {station_name}\r\n              </MDTypography>\r\n              <MDTypography variant=\"button\" color=\"text\" fontWeight=\"regular\">\r\n                {location}\r\n              </MDTypography>\r\n            </MDBox>\r\n          </Grid>\r\n          {/* <Grid item xs={12} md={6} lg={4} sx={{ ml: \"auto\" }}>\r\n            <AppBar position=\"static\">\r\n              <Tabs orientation={tabsOrientation} value={tabValue} onChange={handleSetTabValue}>\r\n                <Tab\r\n                  label=\"App\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      home\r\n                    </Icon>\r\n                  }\r\n                />\r\n                <Tab\r\n                  label=\"Message\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      email\r\n                    </Icon>\r\n                  }\r\n                />\r\n                <Tab\r\n                  label=\"Settings\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      settings\r\n                    </Icon>\r\n                  }\r\n                />\r\n              </Tabs>\r\n            </AppBar>\r\n          </Grid> */}\r\n        </Grid>\r\n        {children}\r\n      </Card>\r\n    </MDBox>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  info: {\r\n    image: \"\", // Fallback image URL\r\n    station_name: \"First Name\",\r\n    location: \"Last Name\",\r\n  },\r\n  children: null,\r\n};\r\n\r\nHeader.propTypes = {\r\n  info: PropTypes.shape({\r\n    image: PropTypes.string,\r\n    station_name: PropTypes.string,\r\n    location: PropTypes.string,\r\n  }),\r\n  children: PropTypes.node,\r\n};\r\nexport default Header;\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable react/function-component-definition */\r\n/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\nimport MDBadge from \"components/MDBadge\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport React from \"react\";\r\nimport LogoAsana from \"assets/images/small-logos/logo-asana.svg\";\r\nimport { useSupplies } from \"features/supplies/suppliesThunk\";\r\nimport { useDeleteSupply } from \"features/supplies/suppliesThunk\";\r\nimport { setUpdateSupplies } from \"features/supplies/suppliesSlice\";\r\n\r\nexport default function suppliesTableData() {\r\n  const dispatch = useDispatch();\r\n  const { deleteSupply, isCreatingSupply } = useDeleteSupply();\r\n  const {\r\n    isGettingAllSupplies,\r\n    supplies: {\r\n      totalSUpplies,\r\n      count,\r\n      numOfPages,\r\n      categoryCount = [],\r\n      statusCount = [],\r\n      storageLocationCount = [],\r\n      supply = [],\r\n    } = {},\r\n    refetch,\r\n  } = useSupplies();\r\n  const Author = ({ image, name, min_stock, supply_id }) => (\r\n    <MDBox display=\"flex\" alignItems=\"center\" lineHeight={1}>\r\n      <MDAvatar src={image} name={name} size=\"sm\" />\r\n      <MDBox ml={2} lineHeight={1}>\r\n        <MDTypography display=\"block\" variant=\"button\" fontWeight=\"medium\">\r\n          <Link to={`#`}>{`${supply_id} ${name}`}</Link>\r\n        </MDTypography>\r\n        <MDTypography variant=\"caption\">min stock: {min_stock}</MDTypography>\r\n      </MDBox>\r\n    </MDBox>\r\n  );\r\n  const Job = ({ title, description }) => (\r\n    <MDBox lineHeight={1} textAlign=\"left\">\r\n      <MDTypography display=\"block\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n        <Link to={`#`}>{`${title}`}</Link>\r\n      </MDTypography>\r\n      <MDTypography variant=\"caption\">\r\n        <Link to={`#`}>{`quantity: ${description}`}</Link>\r\n      </MDTypography>\r\n    </MDBox>\r\n  );\r\n  const Coord = ({ title, description }) => (\r\n    <MDBox lineHeight={1} textAlign=\"left\">\r\n      <MDTypography display=\"block\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n        {title}\r\n      </MDTypography>\r\n      <MDTypography variant=\"caption\">{description}</MDTypography>\r\n    </MDBox>\r\n  );\r\n  const rows = supply.map((suppli, i) => {\r\n    const {\r\n      supply_id,\r\n      supply_name,\r\n      category,\r\n      quantity,\r\n      status,\r\n      storage_location,\r\n      supplier,\r\n      minimum_stock_level,\r\n      purchase_date,\r\n      purchase_cost,\r\n    } = suppli;\r\n    const payload = {\r\n      supply_id,\r\n      supply_name,\r\n      category,\r\n      quantity,\r\n      status,\r\n      storage_location,\r\n      supplier,\r\n      minimum_stock_level,\r\n      purchase_date,\r\n      purchase_cost,\r\n    };\r\n    const handleEdit = () => {\r\n      dispatch(setUpdateSupplies(payload));\r\n    };\r\n    const handleDelete = () => {\r\n      const confirmation = window.confirm(\r\n        \"You are about to Delete an a supply records permanently, ARE YOU SURE?\"\r\n      );\r\n      if (!confirmation) return;\r\n      deleteSupply(supply_id);\r\n    };\r\n    return {\r\n      supplies: (\r\n        <Author\r\n          image={LogoAsana}\r\n          name={supply_name}\r\n          min_stock={minimum_stock_level}\r\n          supply_id={supply_id}\r\n        />\r\n      ),\r\n      detail: <Job title={category} description={quantity} />,\r\n      status: (\r\n        <MDBox ml={-1}>\r\n          <MDBadge\r\n            badgeContent={status}\r\n            color={status === \"new\" ? \"success\" : status === \"used\" ? \"warning\" : \"error\"}\r\n            variant=\"gradient\"\r\n            size=\"sm\"\r\n          />\r\n        </MDBox>\r\n      ),\r\n      location: (\r\n        <MDBox ml={-1}>\r\n          <MDBadge\r\n            badgeContent={storage_location}\r\n            color={\r\n              storage_location === \"warehouse\"\r\n                ? \"success\"\r\n                : storage_location === \"factory\"\r\n                ? \"error\"\r\n                : \"warning\"\r\n            }\r\n            variant=\"gradient\"\r\n            size=\"sm\"\r\n          />\r\n        </MDBox>\r\n      ),\r\n      supplier: (\r\n        <MDTypography component=\"a\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          {supplier}\r\n        </MDTypography>\r\n      ),\r\n      acquired: (\r\n        <Coord\r\n          title={`Cost: ${purchase_cost ? Number(purchase_cost).toFixed(2) : \"N/A\"}`}\r\n          description={`Purchased on: ${purchase_date || \"N/A\"} naira`}\r\n        />\r\n      ),\r\n      update: (\r\n        <MDTypography component=\"a\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          <Link\r\n            onClick={() => {\r\n              handleEdit();\r\n            }}\r\n            to={`/createupdatesupply/${supply_id}`}\r\n          >\r\n            Edit\r\n          </Link>\r\n        </MDTypography>\r\n      ),\r\n      remove: (\r\n        <MDTypography component=\"a\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          <Link\r\n            onClick={() => {\r\n              handleDelete();\r\n            }}\r\n          >\r\n            Remove\r\n          </Link>\r\n        </MDTypography>\r\n      ),\r\n    };\r\n  });\r\n  return {\r\n    columns: [\r\n      { Header: \"supplies\", accessor: \"supplies\", width: \"45%\", align: \"left\" },\r\n      { Header: \"detail\", accessor: \"detail\", align: \"left\" },\r\n      { Header: \"status\", accessor: \"status\", align: \"center\" },\r\n      { Header: \"location\", accessor: \"location\", align: \"center\" },\r\n      { Header: \"supplier\", accessor: \"supplier\", align: \"center\" },\r\n      { Header: \"acquired\", accessor: \"acquired\", align: \"center\" },\r\n      { Header: \"update\", accessor: \"update\", align: \"center\" },\r\n      { Header: \"remove\", accessor: \"remove\", align: \"center\" },\r\n    ],\r\n    rows: rows,\r\n    numOfPages,\r\n    count,\r\n    refetch,\r\n    isGettingAllSupplies,\r\n    totalSUpplies,\r\n    categoryCount,\r\n    statusCount,\r\n    storageLocationCount,\r\n  };\r\n}\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { BiSort } from \"react-icons/bi\";\r\n// import styles from \"../../styles/components/deliveryaddressmodal.module.scss\";\r\n// import styles from \"../../\"\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { CustomButton } from \"../Button\";\r\nimport { Loader1 } from \"../Loader\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSuppliesInputs } from \"../../hooks/DashDetails\";\r\nimport { resetValues } from \"../../features/supplies/suppliesSlice\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function SuppliesSearchModal({ isGettingSingleSupply }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  //   const { theme } = useThemeContext();\r\n  //   const isDarkMode = theme === \"dark-theme\";\r\n  return (\r\n    <div>\r\n      <div>\r\n        <BiSort onClick={handleOpen} title=\"filter\" />\r\n        {/* <button onClick={handleOpen} title=\"filter\">\r\n          search\r\n        </button> */}\r\n      </div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box\r\n        //   sx={{ ...style, background: isDarkMode ? \"black\" : \"white\" }}\r\n        //   className={styles.box}\r\n        >\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            Filter{\" \"}\r\n            <CloseIcon style={{ cursor: \"pointer\" }} onClick={handleClose} />\r\n          </Typography>\r\n          <p>which of your products are you looking for?</p>\r\n          <SuppliesDetails\r\n            handleClose={handleClose}\r\n            isGettingSingleSupply={isGettingSingleSupply}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst SuppliesDetails = ({ handleClose, isGettingSingleSupply }) => {\r\n  const { suppliesDetails } = useSuppliesInputs();\r\n  const dispatch = useDispatch();\r\n  const resetQuery = () => {\r\n    dispatch(resetValues());\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      {suppliesDetails.map((input) => {\r\n        const { name, TextField } = input;\r\n        return <div key={name}>{TextField}</div>;\r\n      })}\r\n      <CustomButton\r\n        background={\"inherit\"}\r\n        backgroundhover={\"rgba(0, 128, 0, 0.9)\"}\r\n        height={\"8vh\"}\r\n        onClick={resetQuery}\r\n        type=\"button\"\r\n        style={{\r\n          width: \"100%\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        reset\r\n      </CustomButton>\r\n      <CustomButton\r\n        background={\"inherit\"}\r\n        // background={\"#3457bf\"}\r\n        backgroundhover={\"rgba(0, 128, 0, 0.9)\"}\r\n        height={\"8vh\"}\r\n        onClick={() => handleClose()}\r\n        type=\"button\"\r\n        style={{\r\n          width: \"100%\",\r\n          // color: \"white\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        {isGettingSingleSupply === \"pending\" ? (\r\n          <Loader1 color=\"success\" />\r\n        ) : (\r\n          \"Find Out\"\r\n        )}\r\n      </CustomButton>\r\n    </form>\r\n  );\r\n};\r\nimport PropTypes from \"prop-types\";\r\n\r\nSuppliesSearchModal.propTypes = {\r\n  isGettingSingleSupply: PropTypes.string.isRequired,\r\n};\r\n\r\nSuppliesDetails.propTypes = {\r\n  handleClose: PropTypes.func.isRequired,\r\n  isGettingSingleSupply: PropTypes.string.isRequired,\r\n};\r\n","import Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport React from \"react\";\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\nimport Footer from \"examples/Footer\";\r\nimport DataTable from \"examples/Tables/DataTable\";\r\n// Data\r\n// import employeesTableData from \"layouts/tables/data/employeesTableData\";\r\nimport projectsTableData from \"layouts/tables/data/projectsTableData\";\r\n// import { useSingleEmployee } from \"features/employees/employeesThunk\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Divider from \"@mui/material/Divider\";\r\n// @mui icons\r\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\r\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\r\nimport { Email } from \"@mui/icons-material\";\r\nimport ProfileInfoCard from \"examples/Cards/InfoCards/ProfileInfoCard\";\r\nimport ProfilesList from \"examples/Lists/ProfilesList\";\r\nimport DefaultProjectCard from \"examples/Cards/ProjectCards/DefaultProjectCard\";\r\nimport Header from \"./profile/components/Header\";\r\nimport PlatformSettings from \"./profile/components/PlatformSettings\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { useUploadEmployeeImages } from \"features/employees/employeesThunk\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CustomButton } from \"components copy\";\r\nimport { Loader1 } from \"components copy/Loader\";\r\nimport PaginationControlled from \"components copy/component's_Tables/Pagination\";\r\nimport LogoAsana from \"assets/images/small-logos/logo-asana.svg\";\r\nimport moment from \"moment\";\r\nimport suppliesTableData from \"./data/suppliesTableData\";\r\nimport { changePage } from \"features/supplies/suppliesSlice\";\r\nimport { resetValues } from \"features/supplies/suppliesSlice\";\r\nimport SuppliesSearchModal from \"components copy/searchModals/SupplySearchModal\";\r\nimport { useSuppliesInputs } from \"hooks/DashDetails\";\r\nimport { useCreateSupply } from \"features/supplies/suppliesThunk\";\r\nimport { useUpdateSupply } from \"features/supplies/suppliesThunk\";\r\n\r\nfunction Supplies() {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    columns,\r\n    rows,\r\n    numOfPages,\r\n    count,\r\n    refetch,\r\n    isGettingAllSupplies,\r\n    totalSUpplies,\r\n    categoryCount,\r\n    statusCount,\r\n    storageLocationCount,\r\n  } = suppliesTableData();\r\n  const {\r\n    pages,\r\n    supply_name,\r\n    category,\r\n    quantity,\r\n    status,\r\n    storage_location,\r\n    supplier,\r\n    minimum_stock_level,\r\n    purchase_date,\r\n    purchase_cost,\r\n    sort,\r\n  } = useSelector((store) => store.supplies);\r\n\r\n  const handleChange = (event, value) => {\r\n    event.preventDefault();\r\n    dispatch(changePage(value));\r\n  };\r\n  React.useEffect(() => {\r\n    refetch();\r\n  }, [\r\n    pages,\r\n    supply_name,\r\n    category,\r\n    quantity,\r\n    status,\r\n    storage_location,\r\n    supplier,\r\n    minimum_stock_level,\r\n    purchase_date,\r\n    purchase_cost,\r\n    sort,\r\n  ]);\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      <MDBox pt={6} pb={3}>\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <MDBox\r\n                mx={2}\r\n                mt={-3}\r\n                py={3}\r\n                px={2}\r\n                variant=\"gradient\"\r\n                bgColor=\"info\"\r\n                borderRadius=\"lg\"\r\n                coloredShadow=\"info\"\r\n              >\r\n                <MDTypography variant=\"h6\" color=\"white\">\r\n                  Supplies\r\n                  {count}/{totalSUpplies}\r\n                  <Link onClick={() => dispatch(resetValues())} to=\"/createupdatesupply/add\">\r\n                    create supply\r\n                  </Link>\r\n                  <SuppliesSearchModal isGettingAllSupplies={isGettingAllSupplies} />\r\n                </MDTypography>\r\n              </MDBox>\r\n              <MDBox pt={3}>\r\n                <DataTable\r\n                  table={{ columns, rows }}\r\n                  isSorted={false}\r\n                  entriesPerPage={false}\r\n                  showTotalEntries={false}\r\n                  noEndBorder\r\n                />\r\n              </MDBox>\r\n            </Card>\r\n            <PaginationControlled pageDetails={{ handleChange, numOfPages, pages }} />\r\n          </Grid>\r\n        </Grid>\r\n      </MDBox>\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n}\r\nexport default Supplies;\r\n\r\n\r\n\r\nexport const CreateUpdateSupply = () => {\r\n  const { suppliesDetails } = useSuppliesInputs();\r\n  const { createSupply, isCreatingSupply } = useCreateSupply();\r\n  const { updateSupply, isUpdatingSupply } = useUpdateSupply();\r\n  const { id } = useParams();\r\n  const {\r\n    isEdit,\r\n    supply_name,\r\n    category,\r\n    quantity,\r\n    status,\r\n    storage_location,\r\n    supplier,\r\n    minimum_stock_level,\r\n    purchase_date,\r\n    purchase_cost,\r\n  } = useSelector((store) => store.supplies);\r\n\r\n  const supplyDetails = {\r\n    supply_name,\r\n    category,\r\n    quantity,\r\n    status,\r\n    storage_location,\r\n    supplier,\r\n    minimum_stock_level,\r\n    purchase_date,\r\n    purchase_cost,\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = Object.values(supplyDetails).every(\r\n      (value) => value !== undefined && value !== null && value !== \"\"\r\n    );\r\n\r\n    if (!isValid) {\r\n      alert(\"Please fill out all required fields, especially the dates field if available.\");\r\n      return;\r\n    }\r\n\r\n    if (isEdit) {\r\n      return updateSupply({ supplyDetails, id });\r\n    }\r\n\r\n    createSupply(supplyDetails);\r\n  };\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      {/* <MDBox mb={2} /> */}\r\n      {/* <Header info={{ image, first_name, last_name, role }}> */}\r\n      <MDBox mt={5} mb={3}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} md={6} xl={4} sx={{ display: \"flex\" }}>\r\n            <Divider orientation=\"vertical\" sx={{ ml: -2, mr: 1 }} />\r\n            <div>\r\n              <Link to=\"/supplies\">Go back</Link>\r\n              <form onSubmit={handleSubmit}>\r\n                {suppliesDetails\r\n                  .filter((detail) => detail.name !== \"sort\")\r\n                  .map((detail) => {\r\n                    const { name, TextField } = detail;\r\n                    return <div key={name}>{TextField}</div>;\r\n                  })}\r\n\r\n                <CustomButton\r\n                  background={\"#1212121F\"}\r\n                  backgroundhover={\"#59d9d9\"}\r\n                  size={\"100%\"}\r\n                  height={\"3vh\"}\r\n                  type=\"submit\"\r\n                  // disabled={!isValid}\r\n                >\r\n                  {isCreatingSupply === \"pending\" || isUpdatingSupply === \"pending\" ? (\r\n                    <Loader1 />\r\n                  ) : isEdit ? (\r\n                    \"Update\"\r\n                  ) : (\r\n                    \"Submit\"\r\n                  )}\r\n                </CustomButton>\r\n              </form>\r\n            </div>\r\n            <Divider orientation=\"vertical\" sx={{ mx: 0 }} />\r\n          </Grid>\r\n        </Grid>\r\n      </MDBox>\r\n      {/* </Header> */}\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n};\r\n"],"names":["Header","_ref","info","children","tabsOrientation","setTabsOrientation","useState","tabValue","setTabValue","useEffect","handleTabsOrientation","window","innerWidth","breakpoints","values","sm","addEventListener","removeEventListener","image","station_name","location","_jsxs","MDBox","position","mb","_jsx","display","alignItems","minHeight","borderRadius","sx","backgroundImage","_ref2","functions","rgba","linearGradient","palette","gradients","main","state","backgroundSize","backgroundPosition","overflow","Card","mt","mx","py","px","Grid","container","spacing","item","MDAvatar","src","alt","size","shadow","height","lineHeight","MDTypography","variant","fontWeight","color","defaultProps","suppliesTableData","dispatch","useDispatch","deleteSupply","isCreatingSupply","useDeleteSupply","isGettingAllSupplies","supplies","totalSUpplies","count","numOfPages","categoryCount","statusCount","storageLocationCount","supply","refetch","useSupplies","Author","name","min_stock","supply_id","ml","Link","to","Job","title","description","textAlign","Coord","_ref3","columns","accessor","width","align","rows","map","suppli","i","supply_name","category","quantity","status","storage_location","supplier","minimum_stock_level","purchase_date","purchase_cost","payload","LogoAsana","detail","MDBadge","badgeContent","component","acquired","Number","toFixed","update","onClick","setUpdateSupplies","remove","confirm","SuppliesSearchModal","isGettingSingleSupply","open","setOpen","React","handleClose","BiSort","handleOpen","Modal","onClose","Box","Typography","id","CloseIcon","style","cursor","SuppliesDetails","suppliesDetails","useSuppliesInputs","input","TextField","CustomButton","background","backgroundhover","resetQuery","resetValues","type","Loader1","pages","sort","useSelector","store","DashboardLayout","DashboardNavbar","pt","pb","xs","bgColor","coloredShadow","DataTable","table","isSorted","entriesPerPage","showTotalEntries","noEndBorder","PaginationControlled","pageDetails","handleChange","event","value","preventDefault","changePage","Footer","CreateUpdateSupply","createSupply","useCreateSupply","updateSupply","isUpdatingSupply","useUpdateSupply","useParams","isEdit","supplyDetails","md","xl","Divider","orientation","mr","onSubmit","e","Object","every","undefined","alert","filter"],"sourceRoot":""}