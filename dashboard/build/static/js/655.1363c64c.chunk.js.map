{"version":3,"file":"static/js/655.1363c64c.chunk.js","mappings":"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","sources":["layouts/hunters/profile/components/Header/index.js","layouts/hunters/data/huntersTableData.js","components copy/searchModals/HunterSearchModal.jsx","layouts/hunters/index.js","../node_modules/.pnpm/@mui+icons-material@5.11.16_@mui+material@5.12.3_react@18.2.0/node_modules/@mui/icons-material/Add.js"],"sourcesContent":["/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// prop-types is a library for typechecking of props.\r\nimport PropTypes from \"prop-types\";\r\n\r\n// @mui material components\r\nimport Card from \"@mui/material/Card\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Icon from \"@mui/material/Icon\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\n\r\n// Material Dashboard 2 React base styles\r\nimport breakpoints from \"assets/theme/base/breakpoints\";\r\n\r\n// Images\r\nimport burceMars from \"assets/images/bruce-mars.jpg\";\r\nimport backgroundImage from \"assets/images/bg-profile.jpeg\";\r\n\r\nfunction Header({ info, children }) {\r\n  const [tabsOrientation, setTabsOrientation] = useState(\"horizontal\");\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // A function that sets the orientation state of the tabs.\r\n    function handleTabsOrientation() {\r\n      return window.innerWidth < breakpoints.values.sm\r\n        ? setTabsOrientation(\"vertical\")\r\n        : setTabsOrientation(\"horizontal\");\r\n    }\r\n\r\n    /** \r\n     The event listener that's calling the handleTabsOrientation function when resizing the window.\r\n    */\r\n    window.addEventListener(\"resize\", handleTabsOrientation);\r\n\r\n    // Call the handleTabsOrientation function to set the state with the initial value.\r\n    handleTabsOrientation();\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleTabsOrientation);\r\n  }, [tabsOrientation]);\r\n\r\n  const handleSetTabValue = (event, newValue) => setTabValue(newValue);\r\n  const { image = \"\", fullname, phone } = info;\r\n\r\n  return (\r\n    <MDBox position=\"relative\" mb={5}>\r\n      <MDBox\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        position=\"relative\"\r\n        minHeight=\"18.75rem\"\r\n        borderRadius=\"xl\"\r\n        sx={{\r\n          backgroundImage: ({ functions: { rgba, linearGradient }, palette: { gradients } }) =>\r\n            `${linearGradient(\r\n              rgba(gradients.info.main, 0.6),\r\n              rgba(gradients.info.state, 0.6)\r\n            )}, url(${backgroundImage})`,\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"50%\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      />\r\n      <Card\r\n        sx={{\r\n          position: \"relative\",\r\n          mt: -8,\r\n          mx: 3,\r\n          py: 2,\r\n          px: 2,\r\n        }}\r\n      >\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item>\r\n            <MDAvatar src={image} alt=\"profile-image\" size=\"xl\" shadow=\"sm\" />\r\n          </Grid>\r\n          <Grid item>\r\n            <MDBox height=\"100%\" mt={0.5} lineHeight={1}>\r\n              <MDTypography variant=\"h5\" fontWeight=\"medium\">\r\n                {fullname}\r\n              </MDTypography>\r\n              <MDTypography variant=\"button\" color=\"text\" fontWeight=\"regular\">\r\n                {phone}\r\n              </MDTypography>\r\n            </MDBox>\r\n          </Grid>\r\n          {/* <Grid item xs={12} md={6} lg={4} sx={{ ml: \"auto\" }}>\r\n            <AppBar position=\"static\">\r\n              <Tabs orientation={tabsOrientation} value={tabValue} onChange={handleSetTabValue}>\r\n                <Tab\r\n                  label=\"App\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      home\r\n                    </Icon>\r\n                  }\r\n                />\r\n                <Tab\r\n                  label=\"Message\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      email\r\n                    </Icon>\r\n                  }\r\n                />\r\n                <Tab\r\n                  label=\"Settings\"\r\n                  icon={\r\n                    <Icon fontSize=\"small\" sx={{ mt: -0.25 }}>\r\n                      settings\r\n                    </Icon>\r\n                  }\r\n                />\r\n              </Tabs>\r\n            </AppBar>\r\n          </Grid> */}\r\n        </Grid>\r\n        {children}\r\n      </Card>\r\n    </MDBox>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  info: {\r\n    image: \"\", // Fallback image URL\r\n    fullname: \"First Name\",\r\n    phone: \"Last Name\",\r\n  },\r\n  children: null,\r\n};\r\n\r\nHeader.propTypes = {\r\n  info: PropTypes.shape({\r\n    image: PropTypes.string,\r\n    fullname: PropTypes.string,\r\n    phone: PropTypes.string,\r\n  }),\r\n  children: PropTypes.node,\r\n};\r\nexport default Header;\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable react/function-component-definition */\r\n/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\r\n\r\nCoded by www.creative-tim.com\r\n\r\n =========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport MDAvatar from \"components/MDAvatar\";\r\nimport MDBadge from \"components/MDBadge\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport React from \"react\";\r\n// import { useStations } from \"features/stations/stationsThunk\";\r\n// import { setUpdateStation } from \"features/stations/stationSlice\";\r\nimport LogoAsana from \"assets/images/small-logos/logo-asana.svg\";\r\nimport { useHunters } from \"features/hunters/huntersThunk\";\r\nimport { useDeleteHunter } from \"features/hunters/huntersThunk\";\r\nimport { setUpdateHunter } from \"features/hunters/huntersSlice\";\r\nexport default function huntersTableData() {\r\n  const dispatch = useDispatch();\r\n  const { deleteHunter } = useDeleteHunter();\r\n  const {\r\n    isGettingAllHunters,\r\n    hunters: {\r\n      hunters = [],\r\n      totalHunters = 0,\r\n      count = 0,\r\n      numOfPages = 1,\r\n      contractStatusCount = [],\r\n    } = {},\r\n    refetch,\r\n  } = useHunters();\r\n  // console.log(pages);\r\n\r\n  const Author = ({ image, name, email, hunter_id }) => (\r\n    <MDBox display=\"flex\" alignItems=\"center\" lineHeight={1}>\r\n      <MDAvatar src={image} name={name} size=\"sm\" />\r\n      <MDBox ml={2} lineHeight={1}>\r\n        <MDTypography display=\"block\" variant=\"button\" fontWeight=\"medium\">\r\n          <Link to={`/hunters/${hunter_id}`}>{`${hunter_id} ${name}`}</Link>\r\n        </MDTypography>\r\n        <MDTypography variant=\"caption\">{email}</MDTypography>\r\n      </MDBox>\r\n    </MDBox>\r\n  );\r\n  const Job = ({ title, description }) => (\r\n    <MDBox lineHeight={1} textAlign=\"left\">\r\n      <MDTypography display=\"block\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n        <Link to={`#`}>{`${title}`}</Link>\r\n      </MDTypography>\r\n      <MDTypography variant=\"caption\">\r\n        <Link to={`#`}>{`${description}`}</Link>\r\n      </MDTypography>\r\n    </MDBox>\r\n  );\r\n  const Coord = ({ title, description }) => (\r\n    <MDBox lineHeight={1} textAlign=\"left\">\r\n      <MDTypography display=\"block\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n        {title}\r\n      </MDTypography>\r\n      {/* <MDTypography variant=\"caption\">{description}</MDTypography> */}\r\n    </MDBox>\r\n  );\r\n  const rows = hunters.map((hunter, i) => {\r\n    const {\r\n      hunter_id,\r\n      assigned_supervisor,\r\n      fullname,\r\n      phone,\r\n      email,\r\n      joining_date,\r\n      tip,\r\n      employment_status,\r\n      emergency_contact_name,\r\n      emergency_contact,\r\n      notes,\r\n    } = hunter;\r\n    const payload = {\r\n      hunter_id,\r\n      assigned_supervisor,\r\n      fullname,\r\n      phone,\r\n      email,\r\n      joining_date,\r\n      tip,\r\n      employment_status,\r\n      emergency_contact_name,\r\n      emergency_contact,\r\n      notes,\r\n    };\r\n\r\n    const handleEdit = () => {\r\n      dispatch(setUpdateHunter(payload));\r\n    };\r\n    const handleDelete = () => {\r\n      const confirmation = window.confirm(\r\n        \"You are about to Delete a hunter records permanently, ARE YOU SURE?\"\r\n      );\r\n      if (!confirmation) return;\r\n      deleteHunter(hunter_id);\r\n    };\r\n    return {\r\n      hunter: <Author image={LogoAsana} name={fullname} email={email} hunter_id={hunter_id} />,\r\n      supervisor: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          <Link to={`/employees/${assigned_supervisor}`}>{assigned_supervisor}</Link>\r\n        </MDTypography>\r\n      ),\r\n      contact: <Coord title={`${phone || \"N/A\"}`} description={`email: ${email || \"N/A\"}`} />,\r\n      tip: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          {tip}\r\n        </MDTypography>\r\n      ),\r\n      status: (\r\n        <MDBox ml={-1}>\r\n          <MDBadge\r\n            badgeContent={employment_status}\r\n            color={\r\n              employment_status === \"active\"\r\n                ? \"success\"\r\n                : employment_status === \"inactive\"\r\n                ? \"warning\"\r\n                : \"error\"\r\n            }\r\n            variant=\"gradient\"\r\n            size=\"sm\"\r\n          />\r\n        </MDBox>\r\n      ),\r\n      emergency_contact: <Job title={emergency_contact_name} description={emergency_contact} />,\r\n      date_employed: (\r\n        <MDTypography component=\"a\" href=\"#\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          {joining_date}\r\n        </MDTypography>\r\n      ),\r\n      note: (\r\n        <MDTypography\r\n          title={notes}\r\n          component=\"a\"\r\n          href=\"#\"\r\n          variant=\"caption\"\r\n          color=\"text\"\r\n          fontWeight=\"medium\"\r\n        >\r\n          {notes.length > 20 ? `${notes.slice(0, 20)}...` : notes}\r\n        </MDTypography>\r\n      ),\r\n      update: (\r\n        <MDTypography component=\"a\" variant=\"caption\" color=\"text\" fontWeight=\"medium\">\r\n          <Link\r\n            onClick={() => {\r\n              handleEdit();\r\n            }}\r\n            to={`/createupdatehunter/${hunter_id}`}\r\n          >\r\n            Edit\r\n          </Link>\r\n        </MDTypography>\r\n      ),\r\n      remove: (\r\n        <MDTypography\r\n          component=\"a\"\r\n          variant=\"caption\"\r\n          color=\"text\"\r\n          fontWeight=\"medium\"\r\n          onClick={() => {\r\n            handleDelete();\r\n          }}\r\n        >\r\n          <Link>remove</Link>\r\n        </MDTypography>\r\n      ),\r\n    };\r\n  });\r\n  return {\r\n    columns: [\r\n      { Header: \"hunter\", accessor: \"hunter\", width: \"45%\", align: \"left\" },\r\n      { Header: \"supervisor\", accessor: \"supervisor\", align: \"left\" },\r\n      { Header: \"contact\", accessor: \"contact\", align: \"center\" },\r\n      { Header: \"tip\", accessor: \"tip\", align: \"center\" },\r\n      { Header: \"status\", accessor: \"status\", align: \"center\" },\r\n      { Header: \"emergency_contact\", accessor: \"emergency_contact\", align: \"center\" },\r\n      { Header: \"date_employed\", accessor: \"date_employed\", align: \"center\" },\r\n      { Header: \"note\", accessor: \"note\", align: \"center\" },\r\n      { Header: \"update\", accessor: \"update\", align: \"center\" },\r\n      { Header: \"remove\", accessor: \"remove\", align: \"center\" },\r\n    ],\r\n    rows: rows,\r\n    numOfPages,\r\n    count,\r\n    isGettingAllHunters,\r\n    refetch,\r\n    hunters,\r\n    totalHunters,\r\n    contractStatusCount,\r\n  };\r\n}\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { BiSort } from \"react-icons/bi\";\r\n// import styles from \"../../styles/components/deliveryaddressmodal.module.scss\";\r\n// import styles from \"../../\"\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { CustomButton } from \"../Button\";\r\n// import { useEmployee } from \"../../hooks/register\";\r\nimport { Loader1 } from \"../Loader\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHunters } from \"../../hooks/DashDetails_2\";\r\nimport { resetValues } from \"../../features/hunters/huntersSlice\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport styles from \"../../layouts/styles/modal.module.scss\";\r\nconst style = {\r\n  position: \"absolute\",\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function HunterSearchModal({ isGettingAllHunters }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  //   const { theme } = useThemeContext();\r\n  //   const isDarkMode = theme === \"dark-theme\";\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div>\r\n        <SearchIcon\r\n          fontSize=\"medium\"\r\n          onClick={handleOpen}\r\n          sx={{ cursor: \"pointer\", fill: \"white\" }}\r\n          title=\"search\"\r\n        />\r\n      </div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={{ ...style, background: \"white\" }} className={styles.box}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            Search Hunters <CloseIcon style={{ cursor: \"pointer\" }} onClick={handleClose} />\r\n          </Typography>\r\n          <p>which hunter are you looking for?</p>\r\n          <SearchHunter handleClose={handleClose} isGettingAllHunters={isGettingAllHunters} />\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst SearchHunter = ({ handleClose, isGettingAllHunters }) => {\r\n  const { hunterInputs } = useHunters();\r\n  const dispatch = useDispatch();\r\n  const resetQuery = () => {\r\n    dispatch(resetValues());\r\n  };\r\n\r\n  return (\r\n    <form className={styles.paper}>\r\n      {hunterInputs\r\n        .filter((detail) => detail.name !== \"notes\" && detail.name !== \"email\")\r\n        .map((input) => {\r\n          const { name, TextField } = input;\r\n          return <div key={name}>{TextField}</div>;\r\n        })}\r\n\r\n      <CustomButton\r\n        background={\"inherit\"}\r\n        backgroundhover={\"grey\"}\r\n        height={\"8vh\"}\r\n        onClick={resetQuery}\r\n        type=\"button\"\r\n        style={{\r\n          width: \"100%\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        reset\r\n      </CustomButton>\r\n      <CustomButton\r\n        background={\"inherit\"}\r\n        // background={\"#3457bf\"}\r\n        backgroundhover={\"grey\"}\r\n        height={\"8vh\"}\r\n        onClick={() => handleClose()}\r\n        type=\"button\"\r\n        style={{\r\n          width: \"100%\",\r\n          // color: \"white\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        {isGettingAllHunters === \"pending\" ? <Loader1 color=\"success\" /> : \"Find Out\"}\r\n      </CustomButton>\r\n    </form>\r\n  );\r\n};\r\nimport PropTypes from \"prop-types\";\r\n\r\nHunterSearchModal.propTypes = {\r\n  isGettingAllHunters: PropTypes.string.isRequired,\r\n};\r\n\r\nSearchHunter.propTypes = {\r\n  handleClose: PropTypes.func.isRequired,\r\n  isGettingAllHunters: PropTypes.string.isRequired,\r\n};\r\n","import Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport React from \"react\";\r\nimport MDBox from \"components/MDBox\";\r\nimport MDTypography from \"components/MDTypography\";\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\nimport Footer from \"examples/Footer\";\r\nimport DataTable from \"examples/Tables/DataTable\";\r\n// Data\r\n// import employeesTableData from \"layouts/tables/data/employeesTableData\";\r\nimport projectsTableData from \"layouts/tables/data/projectsTableData\";\r\n// import { useSingleEmployee } from \"features/employees/employeesThunk\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Divider from \"@mui/material/Divider\";\r\n// @mui icons\r\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\r\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\r\nimport { Email } from \"@mui/icons-material\";\r\nimport ProfileInfoCard from \"examples/Cards/InfoCards/ProfileInfoCard\";\r\nimport ProfilesList from \"examples/Lists/ProfilesList\";\r\nimport DefaultProjectCard from \"examples/Cards/ProjectCards/DefaultProjectCard\";\r\nimport Header from \"./profile/components/Header\";\r\nimport PlatformSettings from \"./profile/components/PlatformSettings\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { useUploadEmployeeImages } from \"features/employees/employeesThunk\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CustomButton } from \"components copy\";\r\nimport { Loader1 } from \"components copy/Loader\";\r\nimport PaginationControlled from \"components copy/component's_Tables/Pagination\";\r\nimport LogoAsana from \"assets/images/small-logos/logo-asana.svg\";\r\nimport moment from \"moment\";\r\nimport huntersTableData from \"./data/huntersTableData\";\r\nimport { resetValues } from \"features/hunters/huntersSlice\";\r\nimport HunterSearchModal from \"components copy/searchModals/HunterSearchModal\";\r\nimport { changePage } from \"features/hunters/huntersSlice\";\r\nimport { useSingleHunter } from \"features/hunters/huntersThunk\";\r\nimport { useHunters } from \"hooks/DashDetails_2\";\r\nimport { useUpdateHunter } from \"features/hunters/huntersThunk\";\r\nimport { useCreateHunter } from \"features/hunters/huntersThunk\";\r\nimport styles from \"../styles/thead.module.scss\";\r\nimport styling from \"../styles/createupdate.module.scss\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nfunction Hunters() {\r\n  const {\r\n    columns,\r\n    rows,\r\n    numOfPages,\r\n    count,\r\n    isGettingAllHunters,\r\n    refetch,\r\n    hunters,\r\n    totalHunters,\r\n    contractStatusCount,\r\n  } = huntersTableData();\r\n  const dispatch = useDispatch();\r\n  const {\r\n    assigned_supervisor,\r\n    fullname,\r\n    phone,\r\n    email,\r\n    joining_date,\r\n    tip,\r\n    employment_status,\r\n    emergency_contact_name,\r\n    emergency_contact,\r\n    notes,\r\n    isEdit,\r\n    pages,\r\n    sort,\r\n  } = useSelector((store) => store.hunters);\r\n\r\n  const handleChange = (event, value) => {\r\n    event.preventDefault();\r\n    dispatch(changePage(value));\r\n  };\r\n  React.useEffect(() => {\r\n    refetch();\r\n  }, [\r\n    pages,\r\n    assigned_supervisor,\r\n    fullname,\r\n    phone,\r\n    email,\r\n    joining_date,\r\n    tip,\r\n    employment_status,\r\n    emergency_contact_name,\r\n    emergency_contact,\r\n    notes,\r\n    sort,\r\n  ]);\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      <MDBox pt={6} pb={3}>\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <MDBox\r\n                mx={2}\r\n                mt={-3}\r\n                py={3}\r\n                px={2}\r\n                variant=\"gradient\"\r\n                bgColor=\"info\"\r\n                borderRadius=\"lg\"\r\n                coloredShadow=\"info\"\r\n              >\r\n                <MDTypography className={styles.wrapper} variant=\"h6\" color=\"white\">\r\n                  <MDBox className={styles.inner}>\r\n                    <MDTypography color=\"white\">Hunters</MDTypography>\r\n                    <MDTypography color=\"white\">\r\n                      {count}/{totalHunters}\r\n                    </MDTypography>\r\n                  </MDBox>\r\n                  <MDBox className={styles.inner}>\r\n                    <Link onClick={() => dispatch(resetValues())} to=\"/createupdatehunter/add\">\r\n                      <AddIcon\r\n                        sx={{ fill: \"white\" }}\r\n                        fontSize=\"medium\"\r\n                        titleAccess=\"add hunter\"\r\n                      />\r\n                    </Link>\r\n                    <HunterSearchModal isGettingAllHunters={isGettingAllHunters} />\r\n                  </MDBox>\r\n                </MDTypography>\r\n              </MDBox>\r\n              <MDBox pt={3}>\r\n                <DataTable\r\n                  table={{ columns, rows }}\r\n                  isSorted={false}\r\n                  entriesPerPage={false}\r\n                  showTotalEntries={false}\r\n                  noEndBorder\r\n                />\r\n              </MDBox>\r\n            </Card>\r\n            <PaginationControlled pageDetails={{ handleChange, numOfPages, pages }} />\r\n          </Grid>\r\n        </Grid>\r\n      </MDBox>\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n}\r\nexport default Hunters;\r\n\r\nexport function SingleHunter() {\r\n  const { id } = useParams();\r\n  const {\r\n    isGettingSingleHunter,\r\n    singleHunter: {\r\n      hunter: {\r\n        hunter_id,\r\n        assigned_supervisor,\r\n        fullname,\r\n        phone,\r\n        email,\r\n        joining_date,\r\n        tip,\r\n        employment_status,\r\n        emergency_contact_name,\r\n        emergency_contact,\r\n        notes,\r\n        hives = [],\r\n        catch_reports = [],\r\n      } = {},\r\n    } = {},\r\n    refetch,\r\n  } = useSingleHunter(id);\r\n\r\n  React.useEffect(() => {\r\n    refetch();\r\n  }, [id]);\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      <MDBox mb={2} />\r\n      <Header info={{ image: LogoAsana, fullname, phone }}>\r\n        <MDBox mt={5} mb={3}>\r\n          <Link to=\"/hunters\">\r\n            <ArrowBackIcon />\r\n          </Link>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} md={6} xl={4} sx={{ display: \"flex\" }}>\r\n              <Divider orientation=\"vertical\" sx={{ ml: -2, mr: 1 }} />\r\n              <ProfileInfoCard\r\n                title=\"\"\r\n                description=\"\"\r\n                info={{\r\n                  hunter_id,\r\n                  fullname,\r\n                  phone,\r\n                  email,\r\n                }}\r\n                shadow={false}\r\n              />\r\n              <Divider orientation=\"vertical\" sx={{ mx: 0 }} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6} xl={4} sx={{ display: \"flex\" }}>\r\n              <Divider orientation=\"vertical\" sx={{ ml: -2, mr: 1 }} />\r\n              <ProfileInfoCard\r\n                title=\"\"\r\n                description=\"\"\r\n                info={{\r\n                  contracted_on: joining_date ? moment(joining_date).format(\"YYYY-MM-DD\") : \"N/A\",\r\n                  supervisor: (\r\n                    <Link to={`/employees/${assigned_supervisor}`}>{assigned_supervisor}</Link>\r\n                  ),\r\n                  tip,\r\n                  employment_status,\r\n                }}\r\n                shadow={false}\r\n              />\r\n              <Divider orientation=\"vertical\" sx={{ mx: 0 }} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6} xl={4} sx={{ display: \"flex\" }}>\r\n              <Divider orientation=\"vertical\" sx={{ ml: -2, mr: 1 }} />\r\n              <ProfileInfoCard\r\n                title=\"\"\r\n                description=\"\"\r\n                info={{\r\n                  e_contact_name: emergency_contact_name,\r\n                  e_contact: emergency_contact,\r\n                  notes,\r\n                }}\r\n                shadow={false}\r\n              />\r\n              <Divider orientation=\"vertical\" sx={{ mx: 0 }} />\r\n            </Grid>\r\n          </Grid>\r\n        </MDBox>\r\n      </Header>\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\nexport const CreateUpdateHunter = () => {\r\n  const { id } = useParams();\r\n  const { hunterInputs } = useHunters();\r\n  const { isUpdatingHunter, updateHunter } = useUpdateHunter();\r\n  const { createHunter, isCreatingHunter } = useCreateHunter();\r\n  const {\r\n    assigned_supervisor,\r\n    fullname,\r\n    phone,\r\n    email,\r\n    joining_date,\r\n    tip,\r\n    employment_status,\r\n    emergency_contact_name,\r\n    emergency_contact,\r\n    notes,\r\n    isEdit,\r\n  } = useSelector((store) => store.hunters);\r\n  const hunterDetails = {\r\n    assigned_supervisor,\r\n    fullname,\r\n    phone,\r\n    email,\r\n    joining_date,\r\n    tip,\r\n    employment_status,\r\n    emergency_contact_name,\r\n    emergency_contact,\r\n    notes,\r\n  };\r\n  //   console.log(hunterDetails);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = Object.values(hunterDetails).every(\r\n      (value) => value !== undefined && value !== null && value !== \"\"\r\n    );\r\n    if (!isValid) {\r\n      alert(\"Please fill out all required fields.\");\r\n      return;\r\n    }\r\n    if (isEdit) return updateHunter({ hunterDetails, id });\r\n    createHunter(hunterDetails);\r\n  };\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      {/* <MDBox mb={2} /> */}\r\n      {/* <Header info={{ image, first_name, last_name, role }}> */}\r\n      <MDBox mt={5} mb={3}>\r\n        <Grid className={styling.wrapper} container spacing={1}>\r\n          {/* <Grid item xs={12} md={6} xl={4} sx={{ display: \"flex\" }}>\r\n            <Divider orientation=\"vertical\" sx={{ ml: -2, mr: 1 }} /> */}\r\n          <div>\r\n            <div>\r\n              <Link to=\"/hunters\">\r\n                <ArrowBackIcon />\r\n              </Link>\r\n              <h6>{isEdit ? `Update hunter ${fullname}'s details` : \"Create Hunter\"} </h6>\r\n              <div></div>\r\n            </div>\r\n            <form className={styling.form} onSubmit={handleSubmit}>\r\n              {hunterInputs\r\n                .filter((detail) => detail.name !== \"sort\")\r\n                .map((detail) => {\r\n                  const { name, TextField } = detail;\r\n                  return <div key={name}>{TextField}</div>;\r\n                })}\r\n              <CustomButton\r\n                background={\"inherit\"}\r\n                backgroundhover={\"grey\"}\r\n                size={\"100%\"}\r\n                height={\"3vh\"}\r\n                type=\"submit\"\r\n              >\r\n                {isCreatingHunter === \"pending\" || isUpdatingHunter === \"pending\" ? (\r\n                  <Loader1 />\r\n                ) : isEdit ? (\r\n                  \"Update\"\r\n                ) : (\r\n                  \"Submit\"\r\n                )}\r\n              </CustomButton>\r\n            </form>\r\n          </div>\r\n          {/* <Divider orientation=\"vertical\" sx={{ mx: 0 }} />\r\n          </Grid> */}\r\n        </Grid>\r\n      </MDBox>\r\n      {/* </Header> */}\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;"],"names":["Header","_ref","info","children","tabsOrientation","setTabsOrientation","useState","tabValue","setTabValue","useEffect","handleTabsOrientation","window","innerWidth","breakpoints","values","sm","addEventListener","removeEventListener","image","fullname","phone","_jsxs","MDBox","position","mb","_jsx","display","alignItems","minHeight","borderRadius","sx","backgroundImage","_ref2","functions","rgba","linearGradient","palette","gradients","main","state","backgroundSize","backgroundPosition","overflow","Card","mt","mx","py","px","Grid","container","spacing","item","MDAvatar","src","alt","size","shadow","height","lineHeight","MDTypography","variant","fontWeight","color","defaultProps","huntersTableData","dispatch","useDispatch","deleteHunter","useDeleteHunter","isGettingAllHunters","hunters","totalHunters","count","numOfPages","contractStatusCount","refetch","useHunters","Author","name","email","hunter_id","ml","Link","to","Job","title","description","textAlign","Coord","_ref3","columns","accessor","width","align","rows","map","hunter","i","assigned_supervisor","joining_date","tip","employment_status","emergency_contact_name","emergency_contact","notes","payload","LogoAsana","supervisor","component","href","contact","status","MDBadge","badgeContent","date_employed","note","length","slice","update","onClick","setUpdateHunter","remove","confirm","style","bgcolor","boxShadow","p","HunterSearchModal","open","setOpen","React","handleClose","className","styles","wrapper","SearchIcon","fontSize","handleOpen","cursor","fill","Modal","onClose","Box","background","box","Typography","id","CloseIcon","SearchHunter","hunterInputs","paper","filter","detail","input","TextField","CustomButton","backgroundhover","resetQuery","resetValues","type","Loader1","isEdit","pages","sort","useSelector","store","DashboardLayout","DashboardNavbar","pt","pb","xs","bgColor","coloredShadow","inner","AddIcon","titleAccess","DataTable","table","isSorted","entriesPerPage","showTotalEntries","noEndBorder","PaginationControlled","pageDetails","handleChange","event","value","preventDefault","changePage","Footer","SingleHunter","useParams","isGettingSingleHunter","singleHunter","hives","catch_reports","useSingleHunter","ArrowBackIcon","md","xl","Divider","orientation","mr","ProfileInfoCard","contracted_on","moment","format","e_contact_name","e_contact","CreateUpdateHunter","isUpdatingHunter","updateHunter","useUpdateHunter","createHunter","isCreatingHunter","useCreateHunter","hunterDetails","styling","form","onSubmit","e","Object","every","undefined","alert","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}